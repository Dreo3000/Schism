// #include "Actors/Spawner/MonsterSpawners.txt"
// #include "Actors/Spawner/WeaponSpawners.txt"

Actor Berserker_Melee_Attacks : BrutalWeapon {
	Weapon.Kickback 200
	Weapon.AmmoType1 "Zeal"
	Weapon.AmmoType2 "Rage"
	Game Doom
	Weapon.SelectionOrder 3700
	Weapon.Kickback 100
	Obituary "%o was Ripped and Teared by 	%k"
	+WEAPON.MELEEWEAPON
	+WEAPON.NOALERT
	+WEAPON.NOAUTOAIM
	+WEAPON.CHEATNOTWEAPON
	+INVENTORY.UNDROPPABLE
	+WEAPON.NOAUTOFIRE
	Tag "$TAG_FWEAPFIST"
	Inventory.ForbiddenTo Schism_Ranger, Sorcerer, Schism_Corvus
	States {
		Select:
			TNT1 A 0
			TNT1 A 0 A_Giveinventory("SwitchtoFist",1)
			TNT1 A 0 A_Jumpifinventory("LostSoulFatality",1,"ReadySoul")
			TNT1 A 0 A_Jumpifinventory("DoUppercutNow",1,"Uppercut")
			TNT1 A 0 A_Raise
			wait 
		SkipAnim:
			TNT1 A 0
			Goto BrutalWeapon::Select
		HelmetWearingAnimation:
			TNT1 A 0 A_GiveInventory("No_Overlay", 1)
			TNT1 A 0 A_ChangeFlag("NOTARGET",1)
			TNT1 A 15 
		//	WPHA AAAAAAAAAAAAAAAAAA 1 A_Raise
			TNT1 A 0 A_PlaySound("PHLMTW")
			HLMT ABCDEFGHIJKLM 2
			HLMT NOPQRSTU 2 
			TNT1 A 0 A_ChangeFlag("NOTARGET",0)
			TNT1 A 0 A_TakeInventory("PlayHelmetAnimation",1)
			TNT1 A 0 A_TakeInventory("No_Overlay", 1)
			Goto BrutalWeapon::Select	
		Deselect:
			WPHA A 0
			"####" A 0 A_TakeInventory("SwitchtoFist",1)
			"####" A 0 A_SetCrosshair(0)
			"####" AAAAAAAAAA 1 A_Lower
			Goto BrutalWeapon::Deselect
		Ready3:	
		Ready:
			WPHA A 1
			TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "GoingToReady")
			ReadyLoop:
			TNT1 A 0 A_JumpIfInventory("PlayHelmetAnimation",1,"HelmetWearingAnimation")
			TNT1 A 0 A_JumpIfInventory("ShotgunguyHead",1,"ReadyShotgunguyHead")
			TNT1 A 0 A_JumpIfInventory("LostSoulFatality",1,"ReadySoul")
			TNT1 A 0 A_JumpIfInventory("HasBarrel",1,"PickBarrel")
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"DoKick")
			TNT1 A 0 A_JumpIfInventory("Taunting",1,"Taunt")
			TNT1 A 0 A_JumpIfInventory("Salute1", 1, "Salute")
			TNT1 A 0 A_JumpIfInventory("Salute2", 1, "Salute")
			TNT1 A 0 A_JumpIfInventory("Reloading",1,"Reload")
			TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "GoingToReady")
			TNT1 A 0 A_JumpIfInventory("TossGrenade",1,"TossGrenade")
			TNT1 A 0 A_TakeInventory("Hit")
			WPHA A 5 A_WeaponReady
			TNT1 A 0 A_JumpIfInventory("Reloading",1,"Reload")
			TNT1 A 0 A_TakeInventory("rage",1)
			WPHA A 5 A_WeaponReady
			TNT1 A 0 A_JumpIfInventory("Reloading",1,"Reload")
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"DoKick")
			TNT1 A 0 A_JumpIfInventory("Taunting",1,"Taunt")
			TNT1 A 0 A_JumpIfInventory("Salute1", 1, "Salute")
			TNT1 A 0 A_JumpIfInventory("Salute2", 1, "Salute")
			TNT1 A 0 A_JumpIfInventory("TossGrenade",1,"TossGrenade")
			TNT1 A 0 A_TakeInventory("rage",1)
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"DoKick")
			TNT1 A 0 A_JumpIfInventory("Taunting",1,"Taunt")
			TNT1 A 0 A_JumpIfInventory("Salute1", 1, "Salute")
			TNT1 A 0 A_JumpIfInventory("Salute2", 1, "Salute")
			TNT1 A 0 A_JumpIfInventory("TossGrenade",1,"TossGrenade")
			WPHA A 5 A_WeaponReady
			TNT1 A 0 A_JumpIfInventory("Reloading",1,"Reload")
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"DoKick")
			TNT1 A 0 A_JumpIfInventory("Taunting",1,"Taunt")
			TNT1 A 0 A_JumpIfInventory("Salute1", 1, "Salute")
			TNT1 A 0 A_JumpIfInventory("Salute2", 1, "Salute")
			TNT1 A 0 A_JumpIfInventory("TossGrenade",1,"TossGrenade")
			TNT1 A 0 A_TakeInventory("rage",1)

				TNT1 A 0 A_JumpIfInventory("rage",1,"GiveRage")
				Goto DontGiveRage
				GiveRage:
				TNT1 A 0 A_GiveInventory("zeal",1)
				DontGiveRage:
			//I wish I wasn't forced to write SHIT like this. All say hello to Zandronum A_Jump() netcode.	
			WPHA A 5 A_WeaponReady
			TNT1 A 0 A_JumpIfInventory("Reloading",1,"Reload")
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"DoKick")
			TNT1 A 0 A_JumpIfInventory("Taunting",1,"Taunt")
			TNT1 A 0 A_JumpIfInventory("Salute1", 1, "Salute")
			TNT1 A 0 A_JumpIfInventory("Salute2", 1, "Salute")
			TNT1 A 0 A_JumpIfInventory("TossGrenade",1,"TossGrenade")
			TNT1 A 0 A_TakeInventory("PSeq1", 2)
			TNT1 A 0 A_TakeInventory("PSeq2", 2)
			Loop
		////////////////////////
		//Block/Grab abilities//
		////////////////////////
		Reload:
			TNT1 A 0 A_TakeInventory("Reloading", 1)
			//TNT1 A 0 A_jumpifinventory("PowerStrength",1,"CheckGrabs") //this may not suppose to be here; once getting this inventory you NEVER block again!

			//TNT1 A 0 A_JumpIfCloser(130, "CheckGrabs")
	
			//Goto Ready
		Block:
			TNT1 A 0 A_GiveInventory("IsBlocking", 1)
			WDBR CD 2 A_SpawnItemEx("ShieldDefense", 25,5,15,0,0,0,0,SXF_NOCHECKPOSITION,0)
			"####" A 0 A_PlaySound("Paladin/ShortExert", 2)
			WDBR EF 2 A_SpawnItemEx("ShieldDefense", 25,5,15,0,0,0,0,SXF_NOCHECKPOSITION,0)
			TNT1 A 0 A_TakeInventory("Reloading", 1)
		BlockHold:
			TNT1 A 0 A_JumpIfInventory("FiredPrimary", 1, "LeftCross") //Thank goodness for these
			TNT1 A 0 A_JumpIfInventory("FiredSecondary", 1, "SmashPunch") //:)
			WDBR F 2 A_SpawnItemEx("ShieldDefense", 25,5,15,0,0,0,0,SXF_NOCHECKPOSITION,0)
			TNT1 A 0 A_JumpIfInventory("Reloading",1,"BlockEnd")
			TNT1 A 0 A_JumpIfInventory("IsBlocking", 1, "BlockHold")
		BlockEnd:
			TNT1 A 0 A_TakeInventory("IsBlocking", 1)
			TNT1 A 0 A_TakeInventory("Reloading", 1)
			WDBR JKL 1 A_SpawnItemEx("ShieldDefense", 25,5,15,0,0,0,0,SXF_NOCHECKPOSITION,0)
			WDBR MNO 1 A_WeaponReady
			TNT1 A 0 A_JumpIfInventory("FiredPrimary", 1, "LeftCross")
			TNT1 A 0 A_JumpIfInventory("FiredSecondary", 1, "Uppercut")
			goto ReadyLoop
		CheckGrabs:
			TNT1 A 0
			TNT1 A 0 A_TakeInventory("MeatAmmo", 100)
		GrabAttack:
			BLIN ABCD 2
			TNT1 A 0 A_FireCustomMissile("BerserkGrabAttack",0,0,0,-15)
			TNT1 A 0 A_GiveInventory("Reloading", 1)
			BLIN E 1
			TNT1 A 0 A_TakeInventory("Reloading", 1)
			TNT1 A 0 A_JumpIfInventory("HasBarrel",1,"PickBarrel")
			TNT1 A 0 A_JumpIfInventory("GrabbedAZombieman",1,"PickZombieman")
			TNT1 A 0 A_JumpIfInventory("GrabbedAShotgunguy",1,"PickShotgunguy")
			TNT1 A 0 A_JumpIfInventory("GrabbedAChaingunguy",1,"PickChaingunguy")
			TNT1 A 0 A_JumpIfInventory("GrabbedAZombieCivilian",1,"PickZombieCivilian")
			TNT1 A 0 A_JumpIfInventory("GrabbedAEvilMarine",1,"PickEvilMarine")
			TNT1 A 0 A_JumpIfInventory("GrabbedANazi",1,"PickNazi")
			TNT1 A 0 A_JumpIfInventory("GrabbedAImp",1,"PickImp")

			TNT1 A 0 A_JumpIfInventory("HasBarrel",1,"PickBarrel")
			TNT1 A 0 A_JumpIfInventory("GrabbedAZombieman",1,"PickZombieman")
			TNT1 A 0 A_JumpIfInventory("GrabbedAShotgunguy",1,"PickShotgunguy")
			TNT1 A 0 A_JumpIfInventory("GrabbedAChaingunguy",1,"PickChaingunguy")
			TNT1 A 0 A_JumpIfInventory("GrabbedAZombieCivilian",1,"PickZombieCivilian")
			TNT1 A 0 A_JumpIfInventory("GrabbedAEvilMarine",1,"PickEvilMarine")
			TNT1 A 0 A_JumpIfInventory("GrabbedANazi",1,"PickNazi")
			TNT1 A 0 A_JumpIfInventory("GrabbedAImp",1,"PickImp")
			Goto Ready
			////////////////////////////////////////////// Normal Attacks
		Fire:
			TNT1 A 0
			TNT1 A 0 A_JumpIfInventory("ShotgunguyHead",1,"ShotgunguyHeadFire")
			//TNT1 A 0 A_JumpIfInventory("HasImpFatality",1,"ImpFatalityFire")
			//TNT1 A 0 A_JumpIfInventory("HasHearthFatality",1,"HasHearthFatalityFire")
			//TNT1 A 0 A_JumpIfInventory("HasCacoEye",1,"CacoeyeFire")
			TNT1 A 0 A_jumpifinventory("LostSoulFatality",1,"LSFire")
			TNT1 A 0 A_JumpIfInventory("HasBarrel",1,"FireBarrel")
			TNT1 A 0 A_JumpIfInventory("GrabbedAZombieman",1,"ThrowZombieman")
			TNT1 A 0 A_JumpIfInventory("GrabbedAShotgunguy",1,"ThrowShotgunguy")
			TNT1 A 0 A_JumpIfInventory("GrabbedAChaingunguy",1,"ThrowChaingunguy")
			TNT1 A 0 A_JumpIfInventory("GrabbedAZombieCivilian",1,"ThrowZombieCivilian")
			TNT1 A 0 A_JumpIfInventory("GrabbedAEvilMarine",1,"ThrowEvilMarine")
			TNT1 A 0 A_JumpIfInventory("GrabbedANazi",1,"ThrowNazi")
			TNT1 A 0 A_JumpIfInventory("GrabbedAImp",1,"ThrowImp")
			//TNT1 A 0 A_JumpIfInventory("LifeDrainToken",1,"LifeDrainReady")
			//TNT1 A 0 A_JumpIfInventory("LifeDrainToggle",1,"LifeDrainStart")


			TNT1 A 0 A_JumpIfInventory("IsCrouching", 1, "RightBackfist")
			TNT1 A 0 A_JumpIfInventory("IsJumping", 1, "AirPunch")
			TNT1 A 0 A_JumpIfInventory("IsMovingForwards", 1, "SelectForwardPrimaryAttack")			
			TNT1 A 0 A_JumpIfInventory("IsMovingLeft", 1, "RightBackfist")
			TNT1 A 0 A_JumpIfInventory("IsMovingRight", 1, "LeftBackfist")
			TNT1 A 0 A_JumpIfInventory("IsMovingBackwards", 1, "PreparePunchFlight")

			//NULL A 0 A_JumpIf (momZ > 0, "AirPunch")
			//NULL A 0 A_JumpIf (momZ < 0, "AirPunch")
			
			TNT1 A 0 A_JumpIfInventory("LPSeq1", 2, "LeftCross")
			TNT1 A 0 A_JumpIfInventory("LPSeq1", 1, "LeftJab")
			TNT1 A 0 A_JumpIfInventory("RPSeq1", 2, "RightCross")
			TNT1 A 0 A_JumpIfInventory("RPSeq1", 1, "RightJab")
		
						
			TNT1 A 0 A_TakeInventory("FireHold", 40)
			//TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
			WPLP A 1 OffSet(0, 38)
			WPLP A 1 OffSet(0, 48)
			
			
			Hold: //doing this odd thing with "hold" to give more fluent punches (tedious)
			TNT1 A 0 A_JumpIfInventory("FireHold", 6, "Hold_8")
			TNT1 A 0 A_JumpIfInventory("FireHold", 5, "Hold_7")
			TNT1 A 0 A_JumpIfInventory("FireHold", 4, "Hold_6")
			TNT1 A 0 A_JumpIfInventory("FireHold", 3, "Hold_5")
			TNT1 A 0 A_JumpIfInventory("FireHold", 2, "Hold_4")
			TNT1 A 0 A_JumpIfInventory("FireHold", 1, "Hold_3")

			Hold_1:
			WPLP B 1
			Goto PrimaryHoldCheck
			Hold_2:
			WPLP B 1
			Goto PrimaryHoldCheck
			Hold_3:
			WPLP B 1 
			Goto PrimaryHoldCheck
			
			//sprite WPLP C it's where fist appears for heavy punch, it;s BREAK POINT
			//from there you can't do anything but LeftHeavyPunch
			Hold_4:
			WPLP C 1			
			Goto PrimaryHoldCheck
			Hold_5:
			WPLP C 1
			Goto PrimaryHoldCheck
			Hold_6:
			WPLP D 1
			Goto PrimaryHoldCheck
			Hold_7:
			WPLP E 1
			Goto PrimaryHoldCheck
			Hold_8:
			WPLP F 1 
			Goto PrimaryHoldCheck
			Hold_9:
			WPLP G 1 
			
		PrimaryHoldCheck:
			TNT1 A 0 //landing tic
			TNT1 A 0 A_GiveInventory("FireHold", 1)
			TNT1 A 0 A_JumpIfInventory("FiredSecondary",1,"LifeDrainReady")
			TNT1 A 0 A_Refire
			TNT1 A 0 A_JumpIfInventory("FireHold", 15, "PunchFlight") //was 10
			TNT1 A 0 A_JumpIfInventory("FireHold", 3, "LeftHook") 
			//TNT1 A 0 A_JumpIfInventory("FireHold", 3, "FinishLeftCross") 
			//WPLP C Break Point jump - on this one you have 3 cycles of hold so you have 3 FireHold tockens

			TNT1 A 0 A_TakeInventory("FireHold", 40)
			Goto LeftJab
		
		SelectForwardPrimaryAttack:
			TNT1 A 0 //landing tic
			TNT1 A 0 A_JumpIfInventory("IsMovingLeft", 1, "RightCross")
			TNT1 A 0 A_JumpIfInventory("IsMovingRight", 1, "LeftCross")
			//Sequence checker
			TNT1 A 0 A_JumpIfInventory("LPSeq1", 2, "LeftCross")//cross
			TNT1 A 0 A_JumpIfInventory("LPSeq1", 1, "LeftJab")
			TNT1 A 0 A_JumpIfInventory("RPSeq1", 2, "RightCross")//cross
			TNT1 A 0 A_JumpIfInventory("RPSeq1", 1, "RightJab")
			Goto RightJab
		
		LeftJab:
			TNT1 A 0
			TNT1 A 0 A_JumpIfInventory("LPSeq1", 1, "GoLeftJab")
			TNT1 A 0 A_Jump(128, "RightJab")
			//Goto RightJab
			
			GoLeftJab:
			TNT1 A 0 A_jumpifinventory("rage",50,"RageLeftJab")
			WPFB BCD 1
			//TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
			TNT1 A 0 A_Giveinventory("Punching",1)
			TNT1 A 0 A_Giveinventory("LPSeq1",1)
			//TNT1 A 0 A_Giveinventory("GoSpecial",1)
			TNT1 A 0 A_FireCustomMissile("MeleeStrikePaladin", 0, 0, 0, 1)
			//TNT1 A 0 A_CustomPunch(50, 1, 0, "MeleePuff", 120)
			//TNT1 A 0 A_CustomPunch(10, 1, 0, "MeleeImpactPuff", 120)
			Goto FinishLeftJab	
			
		RageLeftJab:
			TNT1 A 0 
			WPFB B 1 
			WPF4 B 0 BRIGHT A_JumpIfInventory("Rage",100,"RageLeftJab2")
			WPF3 B 0 BRIGHT 
			
			RageLeftJab1:
			WPF3 CDE 1 BRIGHT 
			"####" A 0 A_PlaySound("skeleton/swing")
			"####" A 0 A_PlaySound("Paladin/ShortExert", 2)
			"####" A 0 A_Giveinventory("Punching",1)
			"####" A 0 A_Giveinventory("LPSeq1",1)
			
			"####" A 0 A_JumpIfInventory("Rage",150,"RageLeftJabA")
			"####" A 0 A_JumpIfInventory("Rage",100,"RageLeftJabB")
			"####" A 0 A_JumpIfInventory("Rage",50,"RageLeftJabC")
			Goto RageLeftJabA
			
			RageLeftJab2:
			WPF4 CDE 1 BRIGHT 
			"####" A 0 A_PlaySound("skeleton/swing")
			"####" A 0 A_PlaySound("Paladin/ShortExert", 2)
			"####" A 0 A_Giveinventory("Punching",1)
			"####" A 0 A_Giveinventory("LPSeq1",1)
			
			"####" A 0 A_JumpIfInventory("Rage",150,"RageLeftJabA")
			"####" A 0 A_JumpIfInventory("Rage",100,"RageLeftJabB")
			"####" A 0 A_JumpIfInventory("Rage",50,"RageLeftJabC")
					
			RageLeftJabA:
			TNT1 A 0
			"####" A 0 A_FireCustomMissile("MeleeStrikePaladin4", 0, 0, 0, 0)
			Goto RageLeftJabEnd
			
			RageLeftJabB:
			TNT1 A 0
			"####" A 0 A_FireCustomMissile("MeleeStrikePaladin3", 0, 0, 0, 0)
			Goto RageLeftJabEnd
			
			RageLeftJabC:
			TNT1 A 0
			"####" A 0 A_FireCustomMissile("MeleeStrikePaladin2", 0, 0, 0, 0)
			
			RageLeftJabEnd:
			TNT1 A 0 A_Saw("", "", 20, "PaladinMeleePuff", 0, 120, 0,16)
			TNT1 A 0 A_SetAngle(angle-3)
			TNT1 A 0 A_JumpIfInventory("Rage",100,"RageLeftJabEnd2")
			WPF3 E 1 BRIGHT 
			goto FinishLeftJab
			
			RageLeftJabEnd2:
			WPF4 E 1 BRIGHT 
			goto FinishLeftJab
			
		
		FinishLeftJab:	
			TNT1 A 0 A_SetAngle(angle-1)
			TNT1 A 0 A_TakeInventory("Kicking", 1)
			TNT1 A 0 A_PlaySound("fstatk", 1)
			WPFB E 2 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 A_SetAngle(angle+1)
			WPFB E 1 A_WeaponReady(WRF_NOPRIMARY)
			//TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
			TNT1 A 0 A_TakeInventory("PSeq2", 1)
			WPFB F 1 A_WeaponReady
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
			WPFB FGHIJ 1 A_WeaponReady
			TNT1 A 0 A_TakeInventory("LPSeq1", 2)
			TNT1 A 0 A_Refire("RightJab")
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
			TNT1 A 0 A_JumpIfInventory("LostSoulFatality",1,"ReadySoul")
			Goto ReadyLoop
			
		LeftCross:
			TNT1 A 0
			WPHB A 1
			
		LeftCrossHold:	
			TNT1 A 0 A_PlaySound("*grunt", 5)
			WPHB A 1 A_SetAngle(angle+1)
			WPHB BC 1 A_SetAngle(angle-1)
			TNT1 A 0 A_Giveinventory("Punching",1)
			TNT1 A 0 A_Takeinventory("LPSeq1",2)
			Goto FinishLeftCross
			
		FinishLeftCross:	
			TNT1 A 0 A_PlaySound("skeleton/swing")
			TNT1 A 0 A_FireCustomMissile("MeleeSmashStrikePaladin", 0, 0, 0, 1)
			TNT1 A 0 A_jumpifinventory("rage",50,"PowerLeftCross")
			TNT1 A 0 A_SetAngle(angle-2)
			TNT1 A 0 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 A_SetAngle(angle-2)
			TNT1 A 0 A_PlaySound("fstatk", 1)
			TNT1 A 0 A_TakeInventory("Kicking", 1)
			//TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
			TNT1 A 0 A_TakeInventory("PSeq2", 1)
			WPHB DEFG 1 A_SetAngle(angle-2)
			WPHB H 1 A_WeaponReady(WRF_NOPRIMARY)
			WPHB I 1 A_SetAngle(angle+1)
			WPHB J 1 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 A_SetAngle(angle+1)
			WPHB K 1 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 A_SetAngle(angle+1)
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"AirKick")
			WPHB L 1 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 A_SetAngle(angle+1)
			WPHB L 1 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 A_SetAngle(angle+1)
			WPHB M 1 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 A_SetAngle(angle+1)
			WPHB M 1 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 A_SetAngle(angle+1)
			TNT1 A 4 //Delay for more punchy visual effect
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"AirKick")
			TNT1 A 0 A_JumpIfInventory("LostSoulFatality",1,"ReadySoul")
			TNT1 A 0 A_Refire("LeftBackfist")
			Goto ReadyLoop
			
		PowerLeftCross:
			TNT1 A 0
			TNT1 A 0 A_PlaySound("weapons/gswing")
			"####" A 0 A_JumpIfInventory("Rage",150,"PowerLeftCrossA")
			"####" A 0 A_JumpIfInventory("Rage",100,"PowerLeftCrossB")
			"####" A 0 A_JumpIfInventory("Rage",50,"PowerLeftCrossC")
			PowerLeftCrossA:
			TNT1 A 0 A_FireCustomMissile("HammerStrikePaladin", 0, 0, 0, 0)
			TNT1 A 0 A_FireCustomMissile("MeleeSmashStrikePaladin4", 0, 0, 0, 0)
			Goto PowerLeftCrossEnd
			
			PowerLeftCrossB:
			TNT1 A 0 A_FireCustomMissile("MeleeSmashStrikePaladin3", 0, 0, 0, 0)
			Goto PowerLeftCrossEnd
			
			PowerLeftCrossC:
			TNT1 A 0 A_FireCustomMissile("MeleeSmashStrikePaladin2", 0, 0, 0, 0)
			PowerLeftCrossEnd:
			TNT1 A 0 A_Saw("", "", 20, "PaladinMeleePuff", 0, 120, 0,16)
			//WPHB AA 0 A_FireCustomMissile("MeleePowerStrikePaladin", 0, 0, 0, 1)
			TNT1 A 0 A_SetAngle(angle-3)	
			Goto FinishPowerLeftCross
			
		FinishPowerLeftCross:	
			TNT1 A 0 A_SetAngle(angle-2)
			TNT1 A 0 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 A_SetAngle(angle-2)
			TNT1 A 0 A_PlaySound("fstatk", 1)
			TNT1 A 0 A_TakeInventory("Kicking", 1)
			//TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
			TNT1 A 0 A_TakeInventory("PSeq2", 1)
			
			WPH6 A 0 BRIGHT A_JumpIfInventory("Rage",150,"FinishPowerLeftCross1")
			WPH5 A 0 BRIGHT A_JumpIfInventory("Rage",100,"FinishPowerLeftCross1")
			WPH4 A 0 BRIGHT 
			FinishPowerLeftCross1:
			"####" A 0
			"####" A 0 A_PlaySound("Paladin/LongExert", 2)
			"####" EFG 1 BRIGHT A_SetAngle(angle-2)
			"####" H 1 BRIGHT A_WeaponReady(WRF_NOPRIMARY)
			"####" I 1 BRIGHT A_SetAngle(angle+1)
			"####" J 1 BRIGHT A_WeaponReady(WRF_NOPRIMARY)
			"####" A 0 A_SetAngle(angle+1)
			"####" K 1 BRIGHT A_WeaponReady(WRF_NOPRIMARY)
			"####" A 0 A_SetAngle(angle+1)
			"####" A 0 A_JumpIfInventory("Kicking",1,"AirKick")
			"####" L 1 BRIGHT A_WeaponReady(WRF_NOPRIMARY)
			"####" A 0 A_SetAngle(angle+1)
			"####" L 1 BRIGHT A_WeaponReady(WRF_NOPRIMARY)
			"####" A 0 A_SetAngle(angle+1)
			"####" M 1 BRIGHT A_WeaponReady(WRF_NOPRIMARY)
			"####" A 0 A_SetAngle(angle+1)
			"####" M 1 BRIGHT A_WeaponReady(WRF_NOPRIMARY)
			"####" A 0 A_SetAngle(angle+1)
			TNT1 A 4 //Delay for more punchy visual effect
			"####" A 0 A_JumpIfInventory("Kicking",1,"AirKick")
			"####" A 0 A_JumpIfInventory("LostSoulFatality",1,"ReadySoul")
			TNT1 A 0 A_Refire("LeftBackfist")
			Goto ReadyLoop
		
		LeftHook:
			TNT1 A 0
			TNT1 A 1
			
		LeftHookHold:	
			TNT1 A 0 A_PlaySound("*grunt", 5)
			TNT1 A 1 A_SetAngle(angle+5)
			TNT1 A 1 A_SetAngle(angle+4)
			TNT1 AA 1 A_SetAngle(angle+3) 
			WPLT AA 1 A_SetAngle(angle+0.5)
			TNT1 A 0 A_Giveinventory("Punching",1)
			TNT1 A 0 A_Takeinventory("LPSeq1",2)
			Goto FinishLeftHook
			
		FinishLeftHook:	
			TNT1 A 0 A_PlaySound("skeleton/swing")
			//TNT1 A 0 A_jumpifinventory("rage",50,"PowerLeftCross")
			TNT1 A 0 A_SetAngle(angle-8)
			TNT1 A 0 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 A_PlaySound("fstatk", 1)
			TNT1 A 0 A_TakeInventory("Kicking", 1)
			//TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
			TNT1 A 0 A_TakeInventory("PSeq2", 1)
			WPLT AB 1 A_SetAngle(angle-4)
			WPLT C 1 A_SetAngle(angle-2)
			TNT1 A 0 A_FireCustomMissile("MeleeSmashStrikePaladin", 0, 0, 0, 1)
			WPLT D 1 A_WeaponReady(WRF_NOPRIMARY)
			WPLT E 1 A_SetAngle(angle-2)
			WPLT F 1 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 A_SetAngle(angle-1)
			WPLT G 1 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 A_SetAngle(angle-0.5)
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"AirKick")
			WPLT H 1 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 //A_SetAngle(angle-2)
			WPLT H 1 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 //delay no swing
			WPLT I 1 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 A_SetAngle(angle+1)
			WPLT I 1 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 A_SetAngle(angle+1)
			TNT1 AAA 1 A_SetAngle(angle+0.5) //Delay for more punchy visual effect
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"AirKick")
			TNT1 A 0 A_JumpIfInventory("LostSoulFatality",1,"ReadySoul")
			TNT1 A 0 A_Refire("RightCross")
			Goto ReadyLoop
		
		
		AirPunch:
			TNT1 A 0
			WPAP A 1 A_ChangeVelocity(0,0,-6*Sin(pitch),CVF_RELATIVE) 
			
		AirPunchHold:	
			TNT1 A 0 A_PlaySound("*grunt", 5)
			WPAP A 1 A_ChangeVelocity(0,0,-4*Sin(pitch),CVF_RELATIVE) 
			TNT1 A 0 A_SetAngle(angle+1)
			WPAP B 1 //A_ChangeVelocity(cos(pitch)-1,0,-sin(pitch)+1,CVF_RELATIVE)
			TNT1 A 0 A_SetAngle(angle-1)
			TNT1 A 0 A_Giveinventory("Punching",1)
			TNT1 A 0 A_Takeinventory("LPSeq1",2)
			WPAP BCCDD 1//1 A_ChangeVelocity(0,0,45*Sin(pitch),CVF_REPLACE|CVF_RELATIVE) 
			// A_ChangeVelocity(0,0,-38*Sin(pitch),CVF_REPLACE|CVF_RELATIVE) 
			Goto FinishAirPunch
			
		FinishAirPunch:	
			TNT1 A 0 A_PlaySound("skeleton/swing")
			//TNT1 A 0 A_jumpifinventory("rage",50,"PowerLeftCross")
			TNT1 A 0 A_SetAngle(angle-2)
			TNT1 A 0 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 A_SetAngle(angle-2)
			TNT1 A 0 A_PlaySound("fstatk", 1)
			TNT1 A 0 A_TakeInventory("Kicking", 1)
			//TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
			TNT1 A 0 A_TakeInventory("PSeq2", 1)
			WPAP E 1 A_ChangeVelocity(32*Cos(pitch),0,-5*Sin(pitch),CVF_REPLACE|CVF_RELATIVE) 
			TNT1 A 0 A_SetAngle(angle-2)
			WPAP F 1 A_ChangeVelocity(25*Cos(pitch),0,-4*Sin(pitch),CVF_REPLACE|CVF_RELATIVE) 
			TNT1 A 0 A_SetAngle(angle-2)
			WPAP G 1 A_ChangeVelocity(18*Cos(pitch),0,-3*Sin(pitch),CVF_REPLACE|CVF_RELATIVE) 
			TNT1 A 0 A_SetAngle(angle-2)
			TNT1 A 0 A_FireCustomMissile("MeleeSmashStrikePaladin", 0, 0, 0, 1)
			WPAP H 1 A_ChangeVelocity(16*Cos(pitch),0,-2*Sin(pitch),CVF_REPLACE|CVF_RELATIVE) 
			TNT1 A 0 A_SetAngle(angle-2)
			WPAP I 1 A_ChangeVelocity(12*Cos(pitch),0,-2*Sin(pitch),CVF_REPLACE|CVF_RELATIVE) 
			TNT1 A 0 A_SetAngle(angle-2)
			WPAP J 1 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 A_SetAngle(angle+1)
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"AirKick")
			WPAP K 1 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 A_SetAngle(angle+1)
			WPAP L 1 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 A_SetAngle(angle+1)
			WPAP M 1 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 A_SetAngle(angle+1)
			WPAP M 1 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 A_SetAngle(angle+1)
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"AirKick")
			TNT1 A 0 A_JumpIfInventory("LostSoulFatality",1,"ReadySoul")
			TNT1 A 0 A_Refire("Uppercut")
			Goto ReadyLoop
		
		RightJab:
			TNT1 A 0
			TNT1 A 0 A_jumpifinventory("rage",50,"RageRightJab")
			WPFA BCD 1
			//TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
			TNT1 A 0 A_Giveinventory("Punching",1)
			TNT1 A 0 A_Giveinventory("RPSeq1",1)
			//TNT1 A 0 A_Giveinventory("GoSpecial",1)
			TNT1 A 0 A_FireCustomMissile("MeleeStrikePaladin", 0, 0, 0, 1)
			//TNT1 A 0 A_CustomPunch(50, 1, 0, "MeleePuff", 120)
			//TNT1 A 0 A_CustomPunch(10, 1, 0, "MeleeImpactPuff", 120)
			Goto FinishRightJab	
			
		RageRightJab:
			TNT1 A 0 
			WPFA B 1 
			WPF2 B 0 BRIGHT A_JumpIfInventory("Rage",100,"RageLeftJab2")
			WPF1 B 0 BRIGHT 
			
			RageRightJab1:
			WPF1 CDE 1 BRIGHT 
			"####" A 0 A_PlaySound("skeleton/swing")
			"####" A 0 A_PlaySound("Paladin/ShortExert", 2)
			"####" A 0 A_Giveinventory("Punching",1)
			"####" A 0 A_Giveinventory("LPSeq1",1)
			
			"####" A 0 A_JumpIfInventory("Rage",150,"RageRightJabA")
			"####" A 0 A_JumpIfInventory("Rage",100,"RageRightJabB")
			"####" A 0 A_JumpIfInventory("Rage",50,"RageRightJabC")
			Goto RageRightJabA
			
			RageRightJab2:
			WPF2 CDE 1 BRIGHT 
			"####" A 0 A_PlaySound("skeleton/swing")
			"####" A 0 A_PlaySound("Paladin/ShortExert", 2)
			"####" A 0 A_Giveinventory("Punching",1)
			"####" A 0 A_Giveinventory("LPSeq1",1)
			
			"####" A 0 A_JumpIfInventory("Rage",150,"RageRightJabA")
			"####" A 0 A_JumpIfInventory("Rage",100,"RageRightJabB")
			"####" A 0 A_JumpIfInventory("Rage",50,"RageRightJabC")
					
			RageRightJabA:
			TNT1 A 0
			"####" A 0 A_FireCustomMissile("MeleeStrikePaladin4", 0, 0, 0, 0)
			Goto RageRightJabEnd
			
			RageRightJabB:
			TNT1 A 0
			"####" A 0 A_FireCustomMissile("MeleeStrikePaladin3", 0, 0, 0, 0)
			Goto RageRightJabEnd
			
			RageRightJabC:
			TNT1 A 0
			"####" A 0 A_FireCustomMissile("MeleeStrikePaladin2", 0, 0, 0, 0)
			
			RageRightJabEnd:
			TNT1 A 0 A_Saw("", "", 20, "PaladinMeleePuff", 0, 120, 0,16)
			TNT1 A 0 A_SetAngle(angle-3)
			TNT1 A 0 A_JumpIfInventory("Rage",100,"RageRightJabEnd2")
			WPF1 E 1 BRIGHT 
			goto FinishRightJab
			
			RageRightJabEnd2:
			WPF2 E 1 BRIGHT 
			goto FinishRightJab
			
			
			
		FinishRightJab:	
			TNT1 A 0 A_SetAngle(angle-1)
			TNT1 A 0 A_TakeInventory("Kicking", 1)
			TNT1 A 0 A_PlaySound("fstatk", 1)
			WPFA E 2 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 A_SetAngle(angle+1)
			WPFA E 1 A_WeaponReady(WRF_NOPRIMARY)
			//TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
			TNT1 A 0 A_TakeInventory("PSeq2", 1)
			WPFA F 1 A_WeaponReady
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
			WPFA FGHIJ 1 A_WeaponReady
			TNT1 A 0 A_TakeInventory("RPSeq1", 2)
			TNT1 A 0 A_Refire("LeftJab")
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
			TNT1 A 0 A_JumpIfInventory("LostSoulFatality",1,"ReadySoul")
			Goto ReadyLoop
			
		RightCross:
			TNT1 A 0
			WPHA A 1
			
		RightCrossHold:	
			TNT1 A 0 A_PlaySound("*grunt", 5)
			WPHA A 1 A_SetAngle(angle+1)
			WPHA BCD 1  A_SetAngle(angle-1)
			TNT1 A 0 A_Giveinventory("Punching",1)
			TNT1 A 0 A_Takeinventory("RPSeq1",2)
		Goto FinishRightCross
		
		FinishRightCross:	
			TNT1 A 0 A_PlaySound("skeleton/swing")
			TNT1 A 0 A_FireCustomMissile("MeleeSmashStrikePaladin", 0, 0, 0, 1)
			TNT1 A 0 A_jumpifinventory("rage",50,"PowerRightCross")
			TNT1 A 0 A_SetAngle(angle-2)
			TNT1 A 0 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 A_SetAngle(angle-2)
			TNT1 A 0 A_PlaySound("fstatk", 1)
			TNT1 A 0 A_TakeInventory("Kicking", 1)
			//TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
			TNT1 A 0 A_TakeInventory("PSeq2", 1)
			WPHA EFG 1 A_SetAngle(angle-2)
			WPHA H 1 A_WeaponReady(WRF_NOPRIMARY)
			WPHA I 1 A_SetAngle(angle+1)
			WPHA J 1 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 A_SetAngle(angle+1)
			WPHA K 1 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 A_SetAngle(angle+1)
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"AirKick")
			WPHA L 1 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 A_SetAngle(angle+1)
			WPHA L 1 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 A_SetAngle(angle+1)
			WPHA M 1 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 A_SetAngle(angle+1)
			WPHA M 1 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 A_SetAngle(angle+1)
			TNT1 A 4 //Delay for more punchy visual effect
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"AirKick")
			TNT1 A 0 A_JumpIfInventory("LostSoulFatality",1,"ReadySoul")
			TNT1 A 0 A_Refire("RightBackfist")
			Goto ReadyLoop
			
		PowerRightCross:
			TNT1 A 0
			TNT1 A 0 A_PlaySound("weapons/gswing")
			TNT1 A 0 A_JumpIfInventory("Rage",150,"PowerRightCrossA")
			TNT1 A 0 A_JumpIfInventory("Rage",100,"PowerRightCrossB")
			TNT1 A 0 A_JumpIfInventory("Rage",50,"PowerRightCrossC")
			
			PowerRightCrossA:
			TNT1 A 0 A_FireCustomMissile("HammerStrikePaladin", 0, 0, 0, 0)
			TNT1 A 0 A_FireCustomMissile("MeleeSmashStrikePaladin4", 0, 0, 0, 0)
			Goto PowerRightCrossEnd
			
			PowerRightCrossB:
			TNT1 A 0 A_FireCustomMissile("MeleeSmashStrikePaladin3", 0, 0, 0, 0)
			Goto PowerRightCrossEnd
			
			PowerRightCrossC:
			TNT1 A 0 A_FireCustomMissile("MeleeSmashStrikePaladin2", 0, 0, 0, 0)
			
			PowerRightCrossEnd:
			TNT1 A 0 A_Saw("", "", 20, "PaladinMeleePuff", 0, 120, 0,16)
			TNT1 A 0 A_SetAngle(angle-3)	
			Goto FinishPowerRightCross
			
		FinishPowerRightCross:	
			TNT1 A 0 A_SetAngle(angle-2)
			WPHA K 0 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 A_SetAngle(angle-2)
			TNT1 A 0 A_PlaySound("fstatk", 1)
			TNT1 A 0 A_TakeInventory("Kicking", 1)
			//TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
			TNT1 A 0 A_TakeInventory("PSeq2", 1)
			WPH3 A 0 BRIGHT A_JumpIfInventory("Rage",150,"FinishPowerRightCross3")
			WPH2 A 0 BRIGHT A_JumpIfInventory("Rage",100,"FinishPowerRightCross2")
			WPH1 A 0 BRIGHT 
						
			FinishPowerRightCross1:
			WPH1 A 0
			"####" A 0 A_PlaySound("Paladin/LongExert", 2)
			"####" EFG 1 BRIGHT A_SetAngle(angle-2)
			"####" H 1 BRIGHT A_WeaponReady(WRF_NOPRIMARY)
			"####" I 1 BRIGHT A_SetAngle(angle+1)
			"####" J 1 BRIGHT A_WeaponReady(WRF_NOPRIMARY)
			"####" A 0 A_SetAngle(angle+1)
			"####" K 1 BRIGHT A_WeaponReady(WRF_NOPRIMARY)
			"####" A 0 A_SetAngle(angle+1)
			"####" A 0 A_JumpIfInventory("Kicking",1,"AirKick")
			"####" L 1 BRIGHT A_WeaponReady(WRF_NOPRIMARY)
			"####" A 0 A_SetAngle(angle+1)
			"####" L 1 BRIGHT A_WeaponReady(WRF_NOPRIMARY)
			"####" A 0 A_SetAngle(angle+1)
			"####" M 1 BRIGHT A_WeaponReady(WRF_NOPRIMARY)
			"####" A 0 A_SetAngle(angle+1)
			"####" M 1 BRIGHT A_WeaponReady(WRF_NOPRIMARY)
			"####" A 0 A_SetAngle(angle+1)
			TNT1 A 4 //Delay for more punchy visual effect
			"####" A 0 A_JumpIfInventory("Kicking",1,"AirKick")
			"####" A 0 A_JumpIfInventory("LostSoulFatality",1,"ReadySoul")
			TNT1 A 0 A_Refire("RightBackfist")
			Goto ReadyLoop
			
			FinishPowerRightCross2:
			WPH2 A 0
			"####" A 0 A_PlaySound("Paladin/LongExert", 2)
			"####" EFG 1 BRIGHT A_SetAngle(angle-2)
			"####" H 1 BRIGHT A_WeaponReady(WRF_NOPRIMARY)
			"####" I 1 BRIGHT A_SetAngle(angle+1)
			"####" J 1 BRIGHT A_WeaponReady(WRF_NOPRIMARY)
			"####" A 0 A_SetAngle(angle+1)
			"####" K 1 BRIGHT A_WeaponReady(WRF_NOPRIMARY)
			"####" A 0 A_SetAngle(angle+1)
			"####" A 0 A_JumpIfInventory("Kicking",1,"AirKick")
			"####" L 1 BRIGHT A_WeaponReady(WRF_NOPRIMARY)
			"####" A 0 A_SetAngle(angle+1)
			"####" L 1 BRIGHT A_WeaponReady(WRF_NOPRIMARY)
			"####" A 0 A_SetAngle(angle+1)
			"####" M 1 BRIGHT A_WeaponReady(WRF_NOPRIMARY)
			"####" A 0 A_SetAngle(angle+1)
			"####" M 1 BRIGHT A_WeaponReady(WRF_NOPRIMARY)
			"####" A 0 A_SetAngle(angle+1)
			TNT1 A 4 //Delay for more punchy visual effect
			"####" A 0 A_JumpIfInventory("Kicking",1,"AirKick")
			"####" A 0 A_JumpIfInventory("LostSoulFatality",1,"ReadySoul")
			TNT1 A 0 A_Refire("RightBackfist")
			Goto ReadyLoop
			
			FinishPowerRightCross3:
			WPH3 A 0
			"####" A 0 A_PlaySound("Paladin/LongExert", 2)
			"####" EFG 1 BRIGHT A_SetAngle(angle-2)
			"####" H 1 BRIGHT A_WeaponReady(WRF_NOPRIMARY)
			"####" I 1 BRIGHT A_SetAngle(angle+1)
			"####" J 1 BRIGHT A_WeaponReady(WRF_NOPRIMARY)
			"####" A 0 A_SetAngle(angle+1)
			"####" K 1 BRIGHT A_WeaponReady(WRF_NOPRIMARY)
			"####" A 0 A_SetAngle(angle+1)
			"####" A 0 A_JumpIfInventory("Kicking",1,"AirKick")
			"####" L 1 BRIGHT A_WeaponReady(WRF_NOPRIMARY)
			"####" A 0 A_SetAngle(angle+1)
			"####" L 1 BRIGHT A_WeaponReady(WRF_NOPRIMARY)
			"####" A 0 A_SetAngle(angle+1)
			"####" M 1 BRIGHT A_WeaponReady(WRF_NOPRIMARY)
			"####" A 0 A_SetAngle(angle+1)
			"####" M 1 BRIGHT A_WeaponReady(WRF_NOPRIMARY)
			"####" A 0 A_SetAngle(angle+1)
			TNT1 A 4 //Delay for more punchy visual effect
			"####" A 0 A_JumpIfInventory("Kicking",1,"AirKick")
			"####" A 0 A_JumpIfInventory("LostSoulFatality",1,"ReadySoul")
			TNT1 A 0 A_Refire("RightBackfist")
			Goto ReadyLoop
		
		RightBackfist:
			WPBK AAA 1 A_SetAngle(angle+4) //Delay for more punchy visual effect
			TNT1 A 0 A_PlaySound("skeleton/swing")
			//TNT1 A 0 A_jumpifinventory("rage",50,"PowerLeftCross")
			TNT1 A 0 A_SetAngle(angle+2)
			TNT1 A 0 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 A_PlaySound("fstatk", 1)
			TNT1 A 0 A_TakeInventory("Kicking", 1)
			//TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
			TNT1 A 0 A_TakeInventory("PSeq2", 1)
			WPBK B 1 A_SetAngle(angle+3)
			WPBK B 1 A_SetAngle(angle+2)
			WPBK C 1 A_SetAngle(angle-8)
			WPBK C 1 A_SetAngle(angle-8)
			WPBK D 1 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 A_SetAngle(angle-6)
			WPBK E 1 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 A_FireCustomMissile("MeleeSmashStrikePaladin", 0, 0, 0, 1)
			TNT1 A 0 A_SetAngle(angle-4)
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"AirKick")
			WPBK F 1 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 A_SetAngle(angle-2)
			WPBK G 1 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 A_SetAngle(angle-2)
			WPBK H 1 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 A_SetAngle(angle+3)
			WPBK H 1 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 A_SetAngle(angle+2)
			TNT1 AAAAA 1 A_SetAngle(angle+1) //Delay for more punchy visual effect
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"AirKick")
			TNT1 A 0 A_JumpIfInventory("LostSoulFatality",1,"ReadySoul")
			TNT1 A 0 A_Refire("RightCross")
		Goto ReadyLoop
		
		LeftBackfist:
			WP8K AAA 1 //A_SetAngle(angle-4) //Delay for more punchy visual effect
			TNT1 A 0 A_PlaySound("skeleton/swing")
			//TNT1 A 0 A_jumpifinventory("rage",50,"PowerLeftCross")
			//TNT1 A 0 A_SetAngle(angle-2)
			TNT1 A 0 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 A_PlaySound("fstatk", 1)
			TNT1 A 0 A_TakeInventory("Kicking", 1)
			//TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
			TNT1 A 0 A_TakeInventory("PSeq2", 1)
			WP8K B 1 //A_SetAngle(angle-3)
			WP8K B 1 //A_SetAngle(angle-2)
			WP8K C 1 A_SetAngle(angle+8)
			WP8K C 1 A_SetAngle(angle+8)
			WP8K D 1 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 A_SetAngle(angle+6)
			WP8K E 1 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 A_FireCustomMissile("MeleeSmashStrikePaladin", 0, 0, 0, 1)
			TNT1 A 0 A_SetAngle(angle+4)
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"AirKick")
			WP8K F 1 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 A_SetAngle(angle+2)
			WP8K G 1 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 A_SetAngle(angle+2)
			WP8K H 1 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 A_SetAngle(angle-3)
			WP8K H 1 A_WeaponReady(WRF_NOPRIMARY)
			TNT1 A 0 A_SetAngle(angle-2)
			TNT1 AAAAA 1 A_SetAngle(angle-1) //Delay for more punchy visual effect
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"AirKick")
			TNT1 A 0 A_JumpIfInventory("LostSoulFatality",1,"ReadySoul")
			TNT1 A 0 A_Refire("LeftCross")//LeftHook
		Goto ReadyLoop
		
		AltFire:	
			TNT1 A 0
			TNT1 A 0 A_JumpIfInventory("GrabbedAZombieman",1,"ShieldZombieman")
			TNT1 A 0 A_JumpIfInventory("GrabbedAShotgunguy",1,"ShieldShotgunguy")
			TNT1 A 0 A_JumpIfInventory("GrabbedAChaingunguy",1,"ShieldChaingunguy")
			TNT1 A 0 A_JumpIfInventory("GrabbedAZombieCivilian",1,"ShieldZombieCivilian")
			TNT1 A 0 A_JumpIfInventory("GrabbedAEvilMarine",1,"ShieldEvilMarine")
			TNT1 A 0 A_JumpIfInventory("GrabbedANazi",1,"ShieldNazi")
			TNT1 A 0 A_JumpIfInventory("GrabbedAImp",1,"ShieldImp")
			TNT1 A 0 A_jumpifinventory("LostSoulFatality",1,"LSFire")
			TNT1 A 0 A_JumpIfInventory("HasBarrel",1,"AltFireBarrel")
			TNT1 A 0 A_JumpIfInventory("IsCrouching", 1, "Uppercut")
			//TNT1 A 0 A_JumpIfInventory("LifeDrainToken",1,"LifeDrainReady")
			NULL A 0 A_JumpIf (momZ > 0, "SmashPunch")
			NULL A 0 A_JumpIf (momZ < 0, "SmashPunch")
			
			TNT1 A 0 A_TakeInventory("FireHold", 40)
			//TNT1 A 0 A_JumpIfInventory("rage",150,"PunchFlight")	
			//TNT1 A 0 A_JumpIfInventory("PSeq2", 1, "RightHeavyPunch")
			TNT1 A 0 A_JumpIfInventory("PSeq1", 2, "Uppercut")
			TNT1 A 0 A_JumpIfInventory("PSeq1", 1, "LeftHeavyPunch")
			
			WPRP A 1// OffSet(0, 38)
			WPRP A 1// OffSet(0, 48)
			
			//WPRP ABCDEF 1 
			//TNT1 A 0 A_Jump(256, "AltFire2Fatality", "AltFire3Fatality")
			
		AltHold:
			TNT1 A 0 A_JumpIfInventory("FireHold", 6, "AltHold_6")
			TNT1 A 0 A_JumpIfInventory("FireHold", 5, "AltHold_5")
			TNT1 A 0 A_JumpIfInventory("FireHold", 4, "AltHold_4")
			TNT1 A 0 A_JumpIfInventory("FireHold", 3, "AltHold_3")
			TNT1 A 0 A_JumpIfInventory("FireHold", 2, "AltHold_2")
			TNT1 A 0 A_JumpIfInventory("FireHold", 1, "AltHold_1")
			WPRP B 1
			Goto AltHoldCheck
						
			AltHold_1:
			WPRP C 1 
			//sprite WPRP C it's where fist appears for heavy punch, it;s BREAK POINT
			//from there you can't do anything but RightHeavyPunch
			Goto AltHoldCheck			
			
			AltHold_2:
			WPRP C 1
			Goto AltHoldCheck			
			
			AltHold_3:
			WPRP D 1
			Goto AltHoldCheck 
			
			AltHold_4:
			WPRP E 1
			Goto AltHoldCheck 
			
			AltHold_5:
			WPRP F 1 
			Goto AltHoldCheck 
			
			AltHold_6:
			WPRP G 1 
		
		AltHoldCheck:
			TNT1 A 0 //landing tic
			TNT1 A 0 A_GiveInventory("FireHold", 1)
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
			TNT1 A 0 A_JumpIfInventory("FiredPrimary",1,"LifeDrainReady")
			TNT1 A 0 A_Refire
			TNT1 A 0 A_JumpIfInventory("FireHold", 15, "PunchFlightFatality") //was 10
			TNT1 A 0 A_JumpIfInventory("FireHold", 3, "FinishRightCross") 
			//WPRP C Break Point jump - on this one you have 3 cycles of hold so you have 3 FireHold tockens
			TNT1 A 0 A_TakeInventory("FireHold", 40)
			
		RightHeavyPunch:
			TNT1 A 0
			WPRP H 1 
			TNT1 A 0 A_JumpIfInventory("rage",50,"RightHeavyPunchRage")
			TNT1 A 0 A_TakeInventory("LPSeq1", 2)
			TNT1 A 0 A_TakeInventory("RPSeq1", 2)
			TNT1 A 0 A_TakeInventory("PSeq2", 2)
			TNT1 A 0 A_Giveinventory("PSeq1",1)
			TNT1 A 0 A_Recoil(-10)
			WPHA BCD 1 
			"####" A 0 A_PlaySound("Paladin/LongExert", 2)
			"####" A 0 A_PlaySound("weapons/gswing")
			"####" A 0 A_Giveinventory("Punching",1)
			"####" EF 1 
			//"####" A 0 A_FireCustomMissile("PaladinHook", 0, 0, 0, -9)
			"####" A 0 A_FireCustomMissile("MeleePowerStrikePaladin", 0, 0, 0, -9)
			"####" A 0 A_JumpIfInventory("GoFatality", 1, "GoingToReady")
			//"####" A 0 A_Saw("", "FLESHIT", 5, "PaladinHeavyMeleePuff", 0, 120, 0,16)
			"####" GHI 1 
			TNT1 A 0 
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
			WPHA J 1 A_WeaponReady
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
			WPHA J 1 A_WeaponReady
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
			WPHA J 1 A_WeaponReady
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
			WPHA K 1 A_WeaponReady
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
			WPHA L 1 A_WeaponReady
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
			WPHA M 1 A_WeaponReady
			TNT1 A 0 A_Takeinventory("PSeq1",2)
			//WPHA A 2 A_REfire("LeftHeavyPunch")
			Goto ReadyLoop	
			
		RightHeavyPunchRage: //different state for rage punches because of BRIGHT sprite parameter, I can't use "####" masks on it
			TNT1 A 0 
			TNT1 A 0 A_TakeInventory("LPSeq1", 2)
			TNT1 A 0 A_TakeInventory("RPSeq1", 2)
			TNT1 A 0 A_TakeInventory("PSeq2", 2)
			TNT1 A 0 A_Giveinventory("PSeq1",1)
			TNT1 A 0 A_Recoil(-10)
			WPHA BCD 1
			//rage level anim selection
			"####" A 0 A_PlaySound("Paladin/LongExert", 2)
			"####" A 0 A_PlaySound("weapons/gswing")
			"####" A 0 A_Giveinventory("Punching",1)
			WPH3 A 0 BRIGHT A_JumpIfInventory("Rage",150,"RightHeavyPunchRage3")
			WPH2 A 0 BRIGHT A_JumpIfInventory("Rage",100,"RightHeavyPunchRage2")
			WPH1 A 0 BRIGHT 
			
			RightHeavyPunchRage1:
			WPH1 EF 1 BRIGHT
			Goto RightHeavyPunchRageSelect
			
			RightHeavyPunchRage2:
			WPH2 EF 1 BRIGHT
			Goto RightHeavyPunchRageSelect
			
			RightHeavyPunchRage3:
			WPH3 EF 1 BRIGHT
			
			RightHeavyPunchRageSelect:
			TNT1 A 0 A_JumpIfInventory("Rage",150,"RightHeavyPunchRageA")
			TNT1 A 0 A_JumpIfInventory("Rage",100,"RightHeavyPunchRageB")
			TNT1 A 0 A_JumpIfInventory("Rage",50,"RightHeavyPunchRageC")
			
			RightHeavyPunchRageA:
			TNT1 A 0 A_FireCustomMissile("MeleePowerStrikePaladin4", 0, 0, 0, 0)
			goto RightHeavyPunchRageEnd
			
			RightHeavyPunchRageB:
			TNT1 A 0 A_FireCustomMissile("MeleePowerStrikePaladin3", 0, 0, 0, 0)
			goto RightHeavyPunchRageEnd
			
			RightHeavyPunchRageC:
			TNT1 A 0 A_FireCustomMissile("MeleePowerStrikePaladin2", 0, 0, 0, 0)
			
			RightHeavyPunchRageEnd:
			TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "GoingToReady")
			TNT1 A 0 A_Saw("", "", 40, "PaladinMeleePuff", 0, 120, 0,16)
			WPH3 A 0 BRIGHT A_JumpIfInventory("Rage",150,"RightHeavyPunchRageEnd3")
			WPH2 A 0 BRIGHT A_JumpIfInventory("Rage",100,"RightHeavyPunchRageEnd2")
			WPH1 A 0 BRIGHT 
			
			RightHeavyPunchRageEnd1:
			WPH1 GHI 1 BRIGHT
			Goto RightHeavyPunchRageFinish
			
			RightHeavyPunchRageEnd2:
			WPH2 GHI 1 BRIGHT
			Goto RightHeavyPunchRageFinish
			
			RightHeavyPunchRageEnd3:
			WPH3 GHI 1 BRIGHT
			
			RightHeavyPunchRageFinish:
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
			WPHA J 1 A_WeaponReady
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
			WPHA J 1 A_WeaponReady
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
			WPHA J 1 A_WeaponReady
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
			WPHA K 1 A_WeaponReady(1)
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
			WPHA L 1 A_WeaponReady(1)
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
			WPHA M 1 A_WeaponReady(1)
			TNT1 A 0 A_Takeinventory("PSeq1",2)
			//TNT1 A 0 A_REfire("LeftHeavyPunch")
			Goto ReadyLoop	
			
		LeftHeavyPunch:
			TNT1 A 0
			TNT1 A 0 A_JumpIfInventory("IsCrouching", 1, "Uppercut")
			TNT1 A 0 A_JumpIfInventory("rage",50,"LeftHeavyPunchRage")
			//TNT1 A 0 A_JumpIfInventory("rage",150,"PunchFlight")
			//TNT1 A 0 A_TakeInventory("PSeq1", 2)
			//TNT1 A 0 A_TakeInventory("PSeq2", 2)
			TNT1 A 0 A_Giveinventory("PSeq1",1)
			WPHB BCDE 1 
			"####" A 0 A_PlaySound("Paladin/LongExert", 2)
			TNT1 A 0 A_PlaySound("weapons/gswing")
			TNT1 A 0 A_Giveinventory("Punching",1)
			WPHB F 1
			//TNT1 A 0 A_JumpIfInventory("rage",50,4)
			//TNT1 A 0 A_FireCustomMissile("PaladinHook", 0, 0, 0, -9)
			TNT1 A 0 A_FireCustomMissile("MeleePowerStrikePaladin", 0, 0, 0, -9)
			//"####" A 0 A_Saw("", "FLESHIT", 10, "PaladinHeavyMeleePuff", 0, 120, 0,16)
			//TNT1 A 0 A_Jump(256,3)
			//TNT1 A 0 A_GiveInventory("HeavyStrikerIGHT", 1)
			TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "GoingToReady")
			WPHB GHI 1
			TNT1 A 0 A_TakeInventory("HeavyStrikeRight", 1)
			TNT1 A 0 SetPlayerProperty(0,0,0)
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
			WPHB J 1 A_WeaponReady
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
			WPHB J 1 A_WeaponReady
			TNT1 AAA 0 A_JumpIfInventory("Kicking",1,"KickRight")
			WPHB J 1 A_WeaponReady
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
			WPHB K 1 A_WeaponReady(1)
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
			WPHB L 1 A_WeaponReady(1)
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
			WPHB M 1 A_WeaponReady(1)
			TNT1 A 0 A_Takeinventory("PSeq1",2)
			//TNT1 A 0 A_REfire("RightHeavyPunch")
			//TNT1 A 0 A_REfire("Uppercut")
			Goto Ready
			
		/*LeftHeavyPunchRage: //different state for rage punches because of BRIGHT sprite parameter, I can't use "####" masks on it
			TNT1 A 0 
			//TNT1 A 0 A_TakeInventory("PSeq1", 2)
			//TNT1 A 0 A_TakeInventory("PSeq2", 2)
			TNT1 A 0 A_Giveinventory("PSeq1",1)
			WPHB BC 1
			//rage level anim selection
			WPH6 A 0 BRIGHT A_JumpIfInventory("Rage",150,3)
			WPH5 A 0 BRIGHT A_JumpIfInventory("Rage",100,2)
			WPH4 A 0 BRIGHT 
			"####" A 0
			"####" A 0 A_PlaySound("Paladin/LongExert", 2)
			"####" A 0 A_PlaySound("weapons/gswing")
			"####" A 0 A_Giveinventory("Punching",1)
			"####" EF 1 BRIGHT
			"####" A 0 A_JumpIfInventory("Rage",150,3)
			"####" A 0 A_JumpIfInventory("Rage",100,4)
			"####" A 0 A_JumpIfInventory("Rage",50,5)
			"####" A 0 A_FireCustomMissile("MeleePowerStrikePaladin4", 0, 0, 0, 0)
			"####" A 0 A_Jump(256, 4)
			"####" A 0 A_FireCustomMissile("MeleePowerStrikePaladin3", 0, 0, 0, 0)
			"####" A 0 A_Jump(256, 2)
			"####" A 0 A_FireCustomMissile("MeleePowerStrikePaladin2", 0, 0, 0, 0)
			"####" A 0 A_JumpIfInventory("GoFatality", 1, "GoingToReady")
			//"####" A 0 A_Saw("", "", 20, "PaladinMeleePuff", 0, 120, 0,16)
			"####" GHI 1 BRIGHT 
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
			WPHB J 1 A_WeaponReady
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
			WPHB J 1 A_WeaponReady
			TNT1 AAA 0 A_JumpIfInventory("Kicking",1,"KickRight")
			WPHB J 1 A_WeaponReady
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
			WPHB K 1 A_WeaponReady(1)
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
			WPHB L 1 A_WeaponReady(1)
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
			WPHB M 1 A_WeaponReady(1)
			TNT1 A 0 A_Takeinventory("PSeq1",2)
			//TNT1 A 0 A_REfire("LeftHeavyPunch")
			Goto ReadyLoop	*/
			

		LeftHeavyPunchRage: //different state for rage punches because of BRIGHT sprite parameter, I can't use "####" masks on it
			TNT1 A 0 
			TNT1 A 0 A_TakeInventory("LPSeq1", 2)
			TNT1 A 0 A_TakeInventory("RPSeq1", 2)
			TNT1 A 0 A_TakeInventory("PSeq2", 2)
			TNT1 A 0 A_Giveinventory("PSeq1",1)
			TNT1 A 0 A_Recoil(-10)
			WPHB BCD 1
			//rage level anim selection
			"####" A 0 A_PlaySound("Paladin/LongExert", 2)
			"####" A 0 A_PlaySound("weapons/gswing")
			"####" A 0 A_Giveinventory("Punching",1)
			WPH6 A 0 BRIGHT A_JumpIfInventory("Rage",150,"LeftHeavyPunchRage3")
			WPH5 A 0 BRIGHT A_JumpIfInventory("Rage",100,"LeftHeavyPunchRage2")
			WPH4 A 0 BRIGHT 
			
			LeftHeavyPunchRage1:
			WPH4 EF 1 BRIGHT
			Goto RightHeavyPunchRageSelect
			
			LeftHeavyPunchRage2:
			WPH5 EF 1 BRIGHT
			Goto RightHeavyPunchRageSelect
			
			LeftHeavyPunchRage3:
			WPH6 EF 1 BRIGHT
			
			LeftHeavyPunchRageSelect:
			TNT1 A 0 A_JumpIfInventory("Rage",150,"LeftHeavyPunchRageA")
			TNT1 A 0 A_JumpIfInventory("Rage",100,"LeftHeavyPunchRageB")
			TNT1 A 0 A_JumpIfInventory("Rage",50,"LeftHeavyPunchRageC")
			
			LeftHeavyPunchRageA:
			TNT1 A 0 A_FireCustomMissile("MeleePowerStrikePaladin4", 0, 0, 0, 0)
			goto LeftHeavyPunchRageEnd
			
			LeftHeavyPunchRageB:
			TNT1 A 0 A_FireCustomMissile("MeleePowerStrikePaladin3", 0, 0, 0, 0)
			goto LeftHeavyPunchRageEnd
			
			LeftHeavyPunchRageC:
			TNT1 A 0 A_FireCustomMissile("MeleePowerStrikePaladin2", 0, 0, 0, 0)
			
			LeftHeavyPunchRageEnd:
			TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "GoingToReady")
			TNT1 A 0 A_Saw("", "", 40, "PaladinMeleePuff", 0, 120, 0,16)
			WPH6 A 0 BRIGHT A_JumpIfInventory("Rage",150,"LeftHeavyPunchRageEnd3")
			WPH5 A 0 BRIGHT A_JumpIfInventory("Rage",100,"LeftHeavyPunchRageEnd2")
			WPH4 A 0 BRIGHT 
			
			LeftHeavyPunchRageEnd1:
			WPH4 GHI 1 BRIGHT
			Goto LeftHeavyPunchRageFinish
			
			LeftHeavyPunchRageEnd2:
			WPH5 GHI 1 BRIGHT
			Goto LeftHeavyPunchRageFinish
			
			LeftHeavyPunchRageEnd3:
			WPH6 GHI 1 BRIGHT
			
			LeftHeavyPunchRageFinish:
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
			WPHB J 1 A_WeaponReady
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
			WPHB J 1 A_WeaponReady
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
			WPHB J 1 A_WeaponReady
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
			WPHB K 1 A_WeaponReady(1)
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
			WPHB L 1 A_WeaponReady(1)
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
			WPHB M 1 A_WeaponReady(1)
			TNT1 A 0 A_Takeinventory("PSeq1",2)
			//TNT1 A 0 A_REfire("LeftHeavyPunch")
			Goto ReadyLoop	
			
			
		//////////////
		//LIFE DRAIN//
		//////////////
		LifeDrainReady:
			"FPCH" "A" 0
			"####" "#" 0 A_TakeInventory("FireHold", 40)
			"####" "#" 0 A_JumpIfInventory("Rage", 1, "LifeDrainStart")
			"####" "#" 0 A_Print("Not enough \caRage")
			Goto ReadyLoop
			
		LifeDrainStart:
			"####" "#" 0
			"####" "ABCDE" 2 BRIGHT
			"####" "#" 0 A_PlaySound("DSFRCLOP", CHAN_WEAPON, 1, True)
			LifeDrain:
			"####" "#" 0 A_JumpIfInventory("Rage", 1, "LifeDrain1")
			"####" "#" 0 A_TakeInventory("LifeDrainToggle", 1)
			Goto LifeDrainEnd

			LifeDrain1:
			"####" "F" 2 BRIGHT A_FireCustomMissile("Schism_StrongNecroLightning", 0, 0)
			"####" "G" 2 BRIGHT A_TakeInventory("Rage", 1)
			"####" "H" 2 BRIGHT A_ReFire("LifeDrain")
			LifeDrainEnd:
			"####" "#" 0 A_StopSound(CHAN_WEAPON)
			Goto ReadyLoop


		///////////////////
		//FLIGHT PUNCH!//
		///////////////////
		
		PreparePunchFlight:
		
			WPLP BBBCCDEFG 1
		
		PunchFlight:
			TNT1 A 0 A_TakeInventory("LPSeq1", 2)
			TNT1 A 0 A_TakeInventory("RPSeq1", 2)
			TNT1 A 0 A_TakeInventory("PSeq2", 2)
			WPHB AABC 2
			WPHB EE 1 A_ChangeVelocity(42*Cos(pitch),0,-42*Sin(pitch),CVF_REPLACE|CVF_RELATIVE) 
			TNT1 A 0 A_PlaySound("weapons/gswing")
			"####" A 0 A_PlaySound("Paladin/SpellCast", 2)
			TNT1 A 0 A_Giveinventory("Punching",1)
			//TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "GoingToReady")
			WPHB F 1 
			TNT1 A 0 A_ChangeVelocity(40*Cos(pitch),0,-40*Sin(pitch),CVF_REPLACE|CVF_RELATIVE)
			WPHB F 1 
			TNT1 A 0 A_FireCustomMissile("MeleeSmashStrikePaladin", 0, 0, 0, -9)
			TNT1 A 0 A_ChangeVelocity(35*Cos(pitch),0,-35*Sin(pitch),CVF_REPLACE|CVF_RELATIVE)
			WPHB F 1 
			TNT1 A 0 A_ChangeVelocity(25*Cos(pitch),0,-25*Sin(pitch),CVF_REPLACE|CVF_RELATIVE)
			WPHB G 1 
			TNT1 A 0 A_FireCustomMissile("MeleeSmashStrikePaladin", 0, 0, 0, -9)
			TNT1 A 0 A_ChangeVelocity(22*Cos(pitch),0,-22*Sin(pitch),CVF_REPLACE|CVF_RELATIVE)
			WPHB G 1 
			TNT1 A 0 A_FireCustomMissile("MeleeSmashStrikePaladin", 0, 0, 0, -9)
			TNT1 A 0 A_ChangeVelocity(18*Cos(pitch),0,-18*Sin(pitch),CVF_REPLACE|CVF_RELATIVE)
			WPHB G 1 
			TNT1 A 0 A_ChangeVelocity(12*Cos(pitch),0,-12*Sin(pitch),CVF_REPLACE|CVF_RELATIVE)
			WPHB H 1 
			TNT1 A 0 A_FireCustomMissile("MeleeSmashStrikePaladin", 0, 0, 0, -9)
			TNT1 A 0 A_ChangeVelocity(6*Cos(pitch),0,-6*Sin(pitch),CVF_REPLACE|CVF_RELATIVE)
			WPHB H 1 
			TNT1 A 0 A_ChangeVelocity(6*Cos(pitch),0,-6*Sin(pitch),CVF_REPLACE|CVF_RELATIVE)
			WPHB I 1 
			//TNT1 A 0 A_FireCustomMissile("MeleeSmashStrikePaladin", 0, 0, 0, -9)
			TNT1 A 0 A_ChangeVelocity(4*Cos(pitch),0,-4*Sin(pitch),CVF_REPLACE|CVF_RELATIVE)
			WPHB I 1 
			//TNT1 A 0 A_FireCustomMissile("MeleeSmashStrikePaladin", 0, 0, 0, -9)
			FlyingPunchEnd:
			TNT1 A 0 
			WPHB I 2 //A_FireCustomMissile("CyberStomp", 0, 0, 0, -9)
			//TNT1 A 0 A_ChangeVelocity(-sin(pitch)-3,0,-sin(pitch)+0.4, CVF_RELATIVE)
			TNT1 A 0 A_TakeInventory("Hit")
			TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "GoingToReady")
			//TNT1 A 0 A_TakeInventory("HeavyStrikeUpward", 1)
			TNT1 A 0 SetPlayerProperty(0,0,0)
			WPHB JKLM 2 A_JumpIfInventory("Kicking",1,"KickRight")
			TNT1 AAAA 2 A_JumpIfInventory("Kicking",1,"KickRight")
			WPHB A 2 A_WeaponReady(1)
			TNT1 A 0 A_REfire
			Goto Ready	

		///////////////////
		//SUPERMAN PUNCH!//
		///////////////////
		PunchFlightPowered:
			TNT1 A 0 A_TakeInventory("LPSeq1", 2)
			TNT1 A 0 A_TakeInventory("RPSeq1", 2)
			TNT1 A 0 A_TakeInventory("PSeq2", 2)
			WPHB AABC 2
			WPH6 EE 1 BRIGHT A_ChangeVelocity(45*Cos(pitch),0,-45*Sin(pitch),CVF_REPLACE|CVF_RELATIVE) 
			TNT1 A 0 A_PlaySound("weapons/gswing")
			"####" A 0 A_PlaySound("Paladin/SpellCast", 2)
			TNT1 A 0 A_Giveinventory("Punching",1)
			//TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "GoingToReady")
			WPH6 E 1 BRIGHT 
			TNT1 A 0 A_FireCustomMissile("MeleeSmashStrikePaladin", 0, 0, 0, -9)
			TNT1 A 0 A_ChangeVelocity(38*Cos(pitch),0,-38*Sin(pitch),CVF_REPLACE|CVF_RELATIVE) 
			WPH6 F 1 BRIGHT
			TNT1 A 0 A_ChangeVelocity(32*Cos(pitch),0,-32*Sin(pitch),CVF_REPLACE|CVF_RELATIVE)
			WPH6 F 1 BRIGHT
			TNT1 A 0 A_FireCustomMissile("MeleeSmashStrikePaladin", 0, 0, 0, -9)
			TNT1 A 0 A_ChangeVelocity(27*Cos(pitch),0,-27*Sin(pitch),CVF_REPLACE|CVF_RELATIVE)
			WPH6 F 1 BRIGHT
			TNT1 A 0 A_ChangeVelocity(25*Cos(pitch),0,-25*Sin(pitch),CVF_REPLACE|CVF_RELATIVE)
			WPH6 G 1 BRIGHT
			TNT1 A 0 A_FireCustomMissile("MeleeSmashStrikePaladin", 0, 0, 0, -9)
			TNT1 A 0 A_ChangeVelocity(22*Cos(pitch),0,-22*Sin(pitch),CVF_REPLACE|CVF_RELATIVE)
			WPH6 G 1 BRIGHT
			TNT1 A 0 A_ChangeVelocity(22*Cos(pitch),0,-22*Sin(pitch),CVF_REPLACE|CVF_RELATIVE)
			WPH6 G 1 BRIGHT
			TNT1 A 0 A_FireCustomMissile("MeleeSmashStrikePaladin", 0, 0, 0, -9)
			TNT1 A 0 A_ChangeVelocity(18*Cos(pitch),0,-18*Sin(pitch),CVF_REPLACE|CVF_RELATIVE)
			WPH6 G 1 BRIGHT
			TNT1 A 0 A_ChangeVelocity(15*Cos(pitch),0,-15*Sin(pitch),CVF_REPLACE|CVF_RELATIVE)
			WPH6 H 1 BRIGHT
			TNT1 A 0 A_FireCustomMissile("MeleeSmashStrikePaladin", 0, 0, 0, -9)
			TNT1 A 0 A_ChangeVelocity(12*Cos(pitch),0,-12*Sin(pitch),CVF_REPLACE|CVF_RELATIVE)
			WPH6 H 1 BRIGHT
			TNT1 A 0 A_ChangeVelocity(11*Cos(pitch),0,-11*Sin(pitch),CVF_REPLACE|CVF_RELATIVE)
			WPH6 I 1 BRIGHT
			TNT1 A 0 A_FireCustomMissile("MeleeSmashStrikePaladin", 0, 0, 0, -9)
			TNT1 A 0 A_ChangeVelocity(8*Cos(pitch),0,-8*Sin(pitch),CVF_REPLACE|CVF_RELATIVE)
			WPH6 I 1 BRIGHT
			TNT1 A 0 A_FireCustomMissile("MeleeSmashStrikePaladin", 0, 0, 0, -9)
			TNT1 A 0 A_ChangeVelocity(8*Cos(pitch),0,-8*Sin(pitch),CVF_REPLACE|CVF_RELATIVE)
			FlyingPunchEnd:
			TNT1 A 0 
			WPHB I 2 //A_FireCustomMissile("CyberStomp", 0, 0, 0, -9)
			//TNT1 A 0 A_ChangeVelocity(-sin(pitch)-3,0,-sin(pitch)+0.4, CVF_RELATIVE)
			TNT1 A 0 A_TakeInventory("Hit")
			TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "GoingToReady")
			//TNT1 A 0 A_TakeInventory("HeavyStrikeUpward", 1)
			TNT1 A 0 SetPlayerProperty(0,0,0)
			WPHB JKLM 2 A_JumpIfInventory("Kicking",1,"KickRight")
			TNT1 AAAA 2 A_JumpIfInventory("Kicking",1,"KickRight")
			WPHB A 2 A_WeaponReady(1)
			TNT1 A 0 A_REfire
			Goto Ready	
			

			
		//////////////////////////////////////
		//SUPERMAN PUNCH! (Fatality Version)//
		//////////////////////////////////////
		PunchFlightFatality:
			TNT1 A 0 A_TakeInventory("LPSeq1", 2)
			TNT1 A 0 A_TakeInventory("RPSeq1", 2)
			TNT1 A 0 A_TakeInventory("PSeq2", 2)
			WPHA AABC 2
			WPHA DE 1 A_ChangeVelocity(45*Cos(pitch),0,-45*Sin(pitch),CVF_REPLACE|CVF_RELATIVE) 
			TNT1 A 0 A_PlaySound("weapons/gswing")
			"####" A 0 A_PlaySound("Paladin/SpellCast", 2)
			TNT1 A 0 A_Giveinventory("Punching",1)
			TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "GoingToReady")
			WPH3 E 1 BRIGHT 
			TNT1 A 0 A_FireCustomMissile("MeleePowerStrikePaladin", 0, 0, 0, -9)
			TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "GoingToReady")
			TNT1 A 0 A_ChangeVelocity(38*Cos(pitch),0,-38*Sin(pitch),CVF_REPLACE|CVF_RELATIVE) 
			WPH3 E 1 BRIGHT
			TNT1 A 0 A_ChangeVelocity(32*Cos(pitch),0,-32*Sin(pitch),CVF_REPLACE|CVF_RELATIVE)
			WPH3 F 1 BRIGHT
			TNT1 A 0 A_FireCustomMissile("MeleePowerStrikePaladin", 0, 0, 0, -9)
			TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "GoingToReady")
			TNT1 A 0 A_ChangeVelocity(27*Cos(pitch),0,-27*Sin(pitch),CVF_REPLACE|CVF_RELATIVE)
			WPH3 F 1 BRIGHT
			TNT1 A 0 A_ChangeVelocity(25*Cos(pitch),0,-25*Sin(pitch),CVF_REPLACE|CVF_RELATIVE)
			WPH3 G 1 BRIGHT
			TNT1 A 0 A_FireCustomMissile("MeleePowerStrikePaladin", 0, 0, 0, -9)
			TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "GoingToReady")
			TNT1 A 0 A_ChangeVelocity(22*Cos(pitch),0,-22*Sin(pitch),CVF_REPLACE|CVF_RELATIVE)
			WPH3 G 1 BRIGHT
			TNT1 A 0 A_ChangeVelocity(22*Cos(pitch),0,-22*Sin(pitch),CVF_REPLACE|CVF_RELATIVE)
			WPH3 G 1 BRIGHT
			TNT1 A 0 A_FireCustomMissile("MeleePowerStrikePaladin", 0, 0, 0, -9)
			TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "GoingToReady")
			TNT1 A 0 A_ChangeVelocity(18*Cos(pitch),0,-18*Sin(pitch),CVF_REPLACE|CVF_RELATIVE)
			WPH3 G 1 BRIGHT
			TNT1 A 0 A_ChangeVelocity(15*Cos(pitch),0,-15*Sin(pitch),CVF_REPLACE|CVF_RELATIVE)
			WPH3 G 1 BRIGHT
			TNT1 A 0 A_FireCustomMissile("MeleePowerStrikePaladin", 0, 0, 0, -9)
			TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "GoingToReady")
			TNT1 A 0 A_ChangeVelocity(12*Cos(pitch),0,-12*Sin(pitch),CVF_REPLACE|CVF_RELATIVE)
			WPH3 H 1 BRIGHT
			TNT1 A 0 A_ChangeVelocity(11*Cos(pitch),0,-11*Sin(pitch),CVF_REPLACE|CVF_RELATIVE)
			WPH3 H 1 BRIGHT
			TNT1 A 0 A_FireCustomMissile("MeleePowerStrikePaladin", 0, 0, 0, -9)
			TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "GoingToReady")
			TNT1 A 0 A_ChangeVelocity(8*Cos(pitch),0,-8*Sin(pitch),CVF_REPLACE|CVF_RELATIVE)
			WPH3 H 1 BRIGHT
			TNT1 A 0 A_FireCustomMissile("MeleePowerStrikePaladin", 0, 0, 0, -9)
			TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "GoingToReady")
			TNT1 A 0 A_ChangeVelocity(8*Cos(pitch),0,-8*Sin(pitch),CVF_REPLACE|CVF_RELATIVE)
			FlyingPunchEndF: //F simply stands for Fatality
			TNT1 A 0 
			WPHA I 2 //A_FireCustomMissile("CyberStomp", 0, 0, 0, -9)
			//TNT1 A 0 A_ChangeVelocity(-sin(pitch)-3,0,-sin(pitch)+0.4, CVF_RELATIVE)
			TNT1 A 0 A_TakeInventory("Hit")
			TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "GoingToReady")
			//TNT1 A 0 A_TakeInventory("HeavyStrikeUpward", 1)
			TNT1 A 0 SetPlayerProperty(0,0,0)
			WPHA JKLM 2 A_JumpIfInventory("Kicking",1,"KickRight")
			TNT1 AAAA 2 A_JumpIfInventory("Kicking",1,"KickRight")
			WPHA A 2 A_WeaponReady(1)
			TNT1 A 0 A_REfire
			Goto Ready	
			
			
			SmashPunch:
			TNT1 A 0
			TNT1 A 0 A_PlaySound("weapons/gswing")
			"####" A 0 A_PlaySound("Paladin/SpellCast", 2)
			TNT1 A 0 A_Giveinventory("Punching",1)
			//TNT1 A 0 A_Giveinventory("GoSpecial",1)
			TNT1 A 0 A_GiveInventory("HeavyStrikeUpward", 1)
			WSJP ABCC 1 A_SetPitch(pitch-6)
			WSJP C 3 A_SetPitch(pitch-5)
			TNT1 A 0 A_FireCustomMissile("PaladinStomp", 0, 0, 0, -9)
			WSJP DDEEFF 1 A_SetPitch(pitch-4)
			TNT1 A 0 A_TakeInventory("HeavyStrikeUpward", 1)
			TNT1 A 0 SetPlayerProperty(0,1,0)
			WSJP GGHH 1 A_SetPitch(pitch+5)
			WSJP IIJJ 1 A_SetPitch(pitch+4)
			WSJP KKLL 1 A_SetPitch(pitch+3)
			WSJP MMNN 1 A_SetPitch(pitch+2)
			TNT1 A 0 A_Stop
			TNT1 AAAAAAAAA 1  A_SetPitch(pitch+0.5) //A_JumpIfInventory("Kicking",1,"KickRight")
			TNT1 A 0 A_TakeInventory("Kicking",1)
			TNT1 A 0 SetPlayerProperty(0,0,0)
			Goto Ready	
			
			Uppercut:	
			TNT1 A 0
			TNT1 A 0 A_JumpIfInventory("rage",50,"RageUppercut")
			TNT1 A 6
			TNT1 A 0 A_Takeinventory("PSeq1",2)
			TNT1 A 0 A_TakeInventory("DoUppercutNow",1)
			TNT1 A 0 A_PlaySound("weapons/gswing")
			"####" A 0 A_PlaySound("Paladin/LongExert", 2)
			TNT1 A 0 A_Giveinventory("Punching",1)
			//TNT1 A 0 A_Giveinventory("GoSpecial",1)
			TNT1 A 0 A_GiveInventory("HeavyStrikeUpward", 1)
			TNT1 A 0 A_SetPitch(pitch-8)
			WPUC ABC 1 A_SetPitch(pitch-6)
			TNT1 A 0 A_FireCustomMissile("MeleeSmashStrikePaladin", 0, 0, 0, 0)
			TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "GoingToReady")
			WPUC DEF 2 A_SetPitch(pitch-6)
			TNT1 A 0 A_FireCustomMissile("SuperKickAttack", 0, 0, 0, 0)
			TNT1 A 0 A_TakeInventory("HeavyStrikeUpward", 1)
			TNT1 A 0 SetPlayerProperty(0,0,0)
			WPUC GGHHII 1 A_SetPitch(pitch+4)
			TNT1 A 0 A_JumpIfInventory("FiredSecondary", 1, "RightHeavyPunch")
			TNT1 A 0 A_JumpIfInventory("FiredPrimary", 1, "LeftJab")
			WPUC JJ 1 A_SetPitch(pitch+4)
			TNT1 A 0 A_JumpIfInventory("FiredSecondary", 1, "RightHeavyPunch")
			TNT1 A 0 A_JumpIfInventory("FiredPrimary", 1, "LeftJab")
			WPUC KK 1 A_SetPitch(pitch+4)
			TNT1 A 0 A_JumpIfInventory("FiredSecondary", 1, "RightHeavyPunch")
			TNT1 A 0 A_JumpIfInventory("FiredPrimary", 1, "LeftJab")
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
			TNT1 AAAAAAAAAA 1 A_JumpIfInventory("Kicking",1,"KickRight")
			//TNT1 A 0 A_PlaySound("PATHETIC",2,4.0)
			Goto Ready		
			
			RageUppercut:	
			TNT1 A 6
			TNT1 A 0 A_Takeinventory("PSeq1",2)
			TNT1 A 0 A_TakeInventory("DoUppercutNow",1)
			TNT1 A 0 A_PlaySound("weapons/gswing")
			"####" A 0 A_PlaySound("Paladin/LongExert", 2)
			TNT1 A 0 A_Giveinventory("Punching",1)
			//TNT1 A 0 A_Giveinventory("GoSpecial",1)
			TNT1 A 0 A_GiveInventory("HeavyStrikeUpward", 1)
			TNT1 A 0 A_SetPitch(pitch-8)
			WPUC ABC 1 A_SetPitch(pitch-6)
			"####" A 0 A_PlaySound("Paladin/LongExert", 2)
			"####" A 0 A_PlaySound("weapons/gswing")
			"####" A 0 A_Giveinventory("Punching",1)
			//rage level anim selection
			WPUC A 0 BRIGHT A_JumpIfInventory("Rage",150,"RageUppercut3")
			WPUC A 0 BRIGHT A_JumpIfInventory("Rage",100,"RageUppercut2")
			WPUC A 0 BRIGHT 
	
			RageUppercut1:
			WPUC DEF 2 BRIGHT A_SetPitch(pitch-6) //now it's same, but we gonna add new sprites soon
			goto RageUppercutRageSelect
			
			RageUppercut2:
			WPUC DEF 2 BRIGHT A_SetPitch(pitch-6) //now it's same, but we gonna add new sprites soon
			goto RageUppercutRageSelect
			
			RageUppercut3:
			WPUC DEF 2 BRIGHT A_SetPitch(pitch-6) //now it's same, but we gonna add new sprites soon
			
			RageUppercutRageSelect:
			TNT1 A 0 A_JumpIfInventory("Rage",150,"RageUppercutA")
			TNT1 A 0 A_JumpIfInventory("Rage",100,"RageUppercutB")
			TNT1 A 0 A_JumpIfInventory("Rage",50,"RageUppercutC")
			
			RageUppercutA:
			TNT1 A 0 A_FireCustomMissile("MeleeSmashStrikePaladin4", 0, 0, 0, 0)
			Goto RageUppercutEnd
			
			RageUppercutB:
			TNT1 A 0 A_FireCustomMissile("MeleeSmashStrikePaladin3", 0, 0, 0, 0)
			Goto RageUppercutEnd
			
			RageUppercutC:
			TNT1 A 0 A_FireCustomMissile("MeleeSmashStrikePaladin2", 0, 0, 0, 0)
			
			RageUppercutEnd:
			TNT1 A 0 A_FireCustomMissile("SuperKickAttack", 0, 0, 0, 0)
			TNT1 A 0 A_TakeInventory("HeavyStrikeUpward", 1)
			TNT1 A 0 SetPlayerProperty(0,0,0)
			WPUC GGHHII 1 A_SetPitch(pitch+4)
			TNT1 A 0 A_JumpIfInventory("FiredSecondary", 1, "RightHeavyPunch")
			TNT1 A 0 A_JumpIfInventory("FiredPrimary", 1, "LeftJab")
			WPUC JJ 1 A_SetPitch(pitch+4)
			TNT1 A 0 A_JumpIfInventory("FiredSecondary", 1, "RightHeavyPunch")
			TNT1 A 0 A_JumpIfInventory("FiredPrimary", 1, "LeftJab")
			WPUC KK 1 A_SetPitch(pitch+4)
			TNT1 A 0 A_JumpIfInventory("FiredSecondary", 1, "RightHeavyPunch")
			TNT1 A 0 A_JumpIfInventory("FiredPrimary", 1, "LeftJab")
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
			TNT1 AAAAAAAAAA 1 A_JumpIfInventory("Kicking",1,"KickRight")
			//TNT1 A 0 A_PlaySound("PATHETIC",2,4.0)
			Goto Ready		
			
				ReadyShotgunguyHEad:
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"DoKick")
			PTG1 B 2 A_WeaponReady
			Goto Ready	
				ShotgunguyHeadFire:
			PTG1 CDEFGHIJ 1
			TNT1 A 0 A_PlaySound("skeleton/swing")
			TNT1 A 0 A_Giveinventory("Punching",1)
			PTG1 K 1 A_FireCustomMissile("SergeantHeadThrown", 0, 0, 0, 0)
			PTG1 LMNOP 1
			TNT1 A 0 A_TakeInventory("ShotgunguyHead",1)
			Goto Ready	

			/*   Taunt:
			   TNT1 A 0 A_TakeInventory("Taunting", 1)
			   TNT1 A 0 A_JumpIfInventory("rage", 1, "TauntRageChecks")
			   TNT1 A 0 A_Print("Not enough \caRage")
			   Goto ReadyLoop
			   
			   TauntRageChecks:
			   TNT1 A 0 A_JumpIfInventory("LifeDrainToggle", 1, "TauntLifeDrainChecks")
			   TNT1 A 0 A_GiveInventory("LifeDrainToggle", 1)
			   TNT1 A 0 A_Print("\caLife Drain mode")
			   Goto ReadyLoop
			   
			   TauntLifeDrainChecks:
			   TNT1 A 0 A_TakeInventory("LifeDrainToggle", 1)
			   TNT1 A 0 A_Print("Life Drain off")
			   Goto ReadyLoop
	  // 		TNT1 A 0 A_JumpIfInventory("zeal",5,"Repulsion")
	//		TNT1 A 0 
	//		TNT1 A 0 A_Takeinventory("Taunting",1)
	//goto ReadyLoop
			*/
	
		Taunt:
		   TNT1 A 0 A_TakeInventory("Taunting", 1)
		   TNT1 A 0 A_JumpIfInventory("Zeal", 10, "Chain")
		   TNT1 A 0 A_Print("Not enough \caZeal")
		   goto ReadyLoop
		 		   
				   
		Chain:
			TNT1 A 0 //A_Blast
			TNT1 A 0 //A_FireBullets(0,0,1,40,"shotpuff",FBF_NORANDOM,128)
			TNT1 A 0 A_TakeInventory("zeal",10)
			//BLIN ABC 2 A_FireCustomMissile("ShieldAttack", 0, 0, 0, -7)
			"####" A 0 A_PlaySound("Paladin/SpellCast", 2)
			TNT1 A 0 //A_PlaySound("PARAPSI")
			TNT1 A 0 A_Takeinventory("Taunting",1)
			TNT1 A 0 A_GiveInventory("ReadyToQuickFire", 1)
			TNT1 A 0 A_GiveInventory("ReadyToSlashDown", 1)
			MYCH ABC 1 
			TNT1 A 0 A_FireCustomMissile("PaladinHook", 0, 0, 0, -15)
			MYCH DEF 1 
			MYCH FXX 1
			//2 A_WeaponReady 
			Goto ReadyLoop				   
				  
				   
		Repulsion:
			TNT1 A 0 A_Blast
			TNT1 A 0 A_FireBullets(0,0,1,40,"shotpuff",FBF_NORANDOM,128)
			TNT1 A 0 A_TakeInventory("zeal",10)
			BLIN A 1 A_FireCustomMissile("ParaPsiStrike", 0, 0, 0, 9)
			//BLIN ABC 2 A_FireCustomMissile("ShieldAttack", 0, 0, 0, -7)
			"####" A 0 A_PlaySound("Paladin/SpellCast", 2)
			TNT1 A 0 A_PlaySound("PARAPSI")
			TNT1 A 0 A_Takeinventory("Taunting",1)
			TNT1 A 0 A_GiveInventory("ReadyToQuickFire", 1)
			TNT1 A 0 A_GiveInventory("ReadyToSlashDown", 1)
			BLIN DEF 1 A_WeaponReady
			BLIN DFE 1 A_WeaponReady 
			BLIN CBA 1 A_WeaponReady 
			Goto ReadyLoop
			
			//old code for block//
			/*
			Block:
			WDBR CD 2 
			"####" A 0 A_PlaySound("Paladin/ShortExert", 2)
			WDBR EF 2 A_SpawnItemEx("ShieldDefense", 25,5,15,0,0,0,0,SXF_NOCHECKPOSITION,0)
			TNT1 A 0 A_JumpIfInventory("zeal",10,"CastDefense")
			BlockHold:
			WDBR F 2 A_SpawnItemEx("ShieldDefense", 25,5,15,0,0,0,0,SXF_NOCHECKPOSITION,0)
			TNT1 A 0 A_Refire("BlockHold")
			BlockEnd:
			WDBR JKL 1 A_SpawnItemEx("ShieldDefense", 25,5,15,0,0,0,0,SXF_NOCHECKPOSITION,0)
			WDBR MNO 1 A_WeaponReady
			TNT1 A 0 A_JumpIfInventory("FiredPrimary", 1, "LeftHeavyPunch")
			TNT1 A 0 A_JumpIfInventory("FiredSecondary", 1, "Uppercut")
			goto ReadyLoop
			*/
		Salute:
			WDBR ABCD 1 
			WDBR EF 2 A_SpawnItemEx("ShieldDefense", 25,5,15,0,0,0,0,SXF_NOCHECKPOSITION,0)
			TNT1 A 0 A_JumpIfInventory("zeal",10,"CastDefense")
			WDBR FFF 2 A_SpawnItemEx("ShieldDefense", 25,5,15,0,0,0,0,SXF_NOCHECKPOSITION,0)
			goto SaluteEnd
			CastDefense:
				TNT1 A 0 A_ALertMonsters
			TNT1 A 0 A_TakeInventory("zeal",1)
			TNT1 A 0 A_GiveInventory("ArmorBonus", 1)
			//TNT1 A 0 A_GiveInventory("BracerPowerGiver", 1)
			WDBR GHI 2 BRIGHT A_SpawnItemEx("ShieldDefense", 25,5,15,0,0,0,0,SXF_NOCHECKPOSITION,0)
				SaluteEnd:		
			WDBR JKL 2 A_SpawnItemEx("ShieldDefense", 25,5,15,0,0,0,0,SXF_NOCHECKPOSITION,0)
			WDBR MNO 1
			SBLL A 0 A_PlaySound("PortalHit")
			TNT1 A 0 A_TakeInventory("Salute1",1)
			TNT1 A 0 A_TakeInventory("Salute2",1)
			Goto Ready
			
				TauntFemale:
			FUCK L 1 A_PlaySound("FTAUNT", 2)
			FUCK MN 1 A_AlertMonsters
			FUCK O 15 A_Takeinventory("Taunting",1)
			FUCK NMLK 1
			Goto ReadyLoop		
				
				DoKick:
			TNT1 AA 0 A_JumpIfInventory("GoFatality", 1, "GoingToReady")
			TNT1 A 0 A_Takeinventory("HasPlasmaWeapon",1)
			TNT1 A 0 A_TAkeinventory("HasCutingWeapon",1)
			TNT1 A 0 A_Takeinventory("Zoomed",1)
			TNT1 A 0 A_Takeinventory("PowerLightAmp",1)
			TNT1 A 0 A_ZoomFactor(1.0)
			TNT1 A 0 A_Takeinventory("ADSmode",1)
			NULL A 0 A_JumpIf (momZ > 0, "AirKick")
			NULL A 0 A_JumpIf (momZ < 0, "AirKick")
			TNT1 A 0 A_JumpIfInventory("IsCrouching", 1, "SlideAttack")
			TNT1 A 0 A_jumpifinventory("PowerStrength",1,"BerserkerKick")
			//TNT1 A 0 A_JumpIfInventory("RifleSelected", 1, "RifleBash")
			"####" A 0 A_PlaySound("Paladin/MediumExert", 2)
			TNT1 A 0 A_PlaySound("KICK")
			TNT1 A 0 SetPlayerProperty(0,1,0)
			K1CK A 0 A_Recoil(-6)
						
		K1CK ABCD 1
		TNT1 A 0 A_FireCustomMissile("KickAttack", 0, 0, 0, -7)
        K1CK H 3 A_Takeinventory("Kicking",1)
		K1CK HIGF 1
		TNT1 A 0 A_Takeinventory("Kicking",1)
		TNT1 A 0 SetPlayerProperty(0,0,0)
		K1CK EDCBA 1 A_JumpIfInventory("Kicking",1,"KickRight")

/*			K1CK ABCDE 1
			K1CK A 0 A_FireCustomMissile("KickAttack", 0, 0, 0, -7)
			K1CK A 0 A_Takeinventory("Kicking",1)
			K1CK FGH 1
			TNT1 A 0 SetPlayerProperty(0,0,0)
			K1CK GF 1
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
			K1CK DCBA 1 A_JumpIfInventory("Kicking",1,"KickRight") */
			
			
			
			TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "GoingToReady")
			RIBA A 0 A_Takeinventory("Kicking",1)
			Goto Select
			
			KickRight:
			TNT1 A 0 A_Recoil(-10)
			K1K2 ABC 1
			TNT1 A 0 A_PlaySound("Paladin/MediumExert", 2)
			TNT1 A 0 A_PlaySound("KICK")
			TNT1 A 0 A_Giveinventory("Kicking",1)
			TNT1 A 0 A_SetPitch(pitch-9)
			TNT1 A 0 A_SetAngle(angle+9)
			TNT1 AA 0 A_FireCustomMissile("KickAttack", 0, 0, 0, 0)
			TNT1 A 0 A_TakeInventory("Kicking",1)
			K1K2 D 2
			TNT1 A 0 A_SetPitch(pitch+2)
			TNT1 A 0 A_SetAngle(angle-2)
			K1K2 E 1
			TNT1 A 0 A_SetPitch(pitch+2)
			TNT1 A 0 A_SetAngle(angle-2)
			K1K2 E 2 A_JumpIfInventory("Kicking",1,"AirKick")
			TNT1 A 0 A_SetPitch(pitch+1)
			TNT1 A 0 A_SetAngle(angle-1)
			K1K2 D 2 A_JumpIfInventory("Kicking",1,"AirKick")
			TNT1 A 0 A_SetPitch(pitch+1)
			TNT1 A 0 A_SetAngle(angle-1)
			K1K2 C 1 A_JumpIfInventory("Kicking",1,"AirKick")
			TNT1 A 0 A_SetPitch(pitch+1)
			TNT1 A 0 A_SetAngle(angle-1)
			K1K2 B 1 A_JumpIfInventory("Kicking",1,"AirKick")
			TNT1 A 0 A_SetPitch(pitch+1)
			TNT1 A 0 A_SetAngle(angle-1)
			K1K2 A 1 A_JumpIfInventory("Kicking",1,"AirKick")
			TNT1 A 0 A_JumpIfInventory("FiredPrimary", 1, "LeftHeavyPunch")
			TNT1 A 0 A_JumpIfInventory("FiredSecondary", 1, "RightHeavyPunch")
			TNT1 A 0 A_SetPitch(pitch+1)
			TNT1 A 0 A_SetAngle(angle-1)
		Goto Ready
			AirKick:
		  //  TNT1 A 0 A_jumpifinventory("PowerStrength",1,"SuperAirKick")
			TNT1 A 0 A_PlaySound("Paladin/MediumExert", 2)
			TNT1 A 0 A_PlaySound("KICK")
			TNT1 A 0 A_Recoil (-15)
			K1CK JKLMN 1
			RIFF A 0 A_FireCustomMissile("AirKickAttack", 0, 0, 0, -31)
			K1CK A 0 A_Takeinventory("Kicking",1)
			K1CK O 3
			K1CK PQ 2
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"FinishingKick")
			K1CK RST 2 A_JumpIfInventory("Kicking",1,"FinishingKick")
			
			TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "GoingToReady")
			RIBA A 0 A_Takeinventory("Kicking",1)
			Goto Ready3
			
			FinishingKick:
			TNT1 A 0 A_Recoil(-20)
			K1K3 ABC 1
			"####" A 0 A_PlaySound("Paladin/LongExert", 2)
			TNT1 A 0 A_PlaySound("KICK")
			TNT1 A 0 A_Giveinventory("Kicking",1)
			TNT1 A 0 A_SetPitch(pitch-9)
			TNT1 A 0 A_SetAngle(angle-9)
			K1K3 D 1 A_FireCustomMissile("KickAttack", 0, 0, 0, 0)
			TNT1 A 0 A_SetPitch(pitch+2)
			TNT1 A 0 A_SetAngle(angle+3)
			K1K3 E 1
			TNT1 A 0 A_SetPitch(pitch+2)
			TNT1 A 0 A_SetAngle(angle+3)
			K1K3 F 1 A_FireCustomMissile("KickAttack", 0, 0, 0, 0)
			TNT1 A 0 A_SetPitch(pitch+1)
			TNT1 A 0 A_SetAngle(angle+3)
			K1K3 G 1 
			TNT1 A 0 A_SetPitch(pitch+1)
			TNT1 A 0 A_SetAngle(angle+2)
			K1K3 H 1 A_FireCustomMissile("KickAttack", 0, 0, 0, 0)
			TNT1 A 0 A_SetPitch(pitch+1)
			TNT1 A 0 A_SetAngle(angle+2)
			K1K3 I 1
			TNT1 A 0 A_SetPitch(pitch+1)
			TNT1 A 0 A_SetAngle(angle+1)
			K1K3 J 1 A_FireCustomMissile("KickAttack", 0, 0, 0, 0)
			TNT1 A 0 A_SetPitch(pitch+1)
			TNT1 A 0 A_SetAngle(angle+1)
			K1K3 K 1
			TNT1 A 5 A_TakeInventory("Kicking",1)
			Goto Ready3	
				ReadySoul:
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"DoKick")
			TNT1 A 0 A_JumpIfInventory("Reloading",1,"KillLS")
			THEA A 7 BRIGHT A_WeaponReady
			TNT1 A 0 A_FireCustomMissile("LostSoulOnHandFireSpawner",40,0,0,5)
			THEA B 7 BRIGHT A_WeaponReady
			TNT1 A 0 A_FireCustomMissile("LostSoulOnHandFireSpawner",40,0,0,5)
			THEA A 7 BRIGHT A_WeaponReady
			TNT1 A 0 A_FireCustomMissile("LostSoulOnHandFireSpawner",40,0,0,5)
			THEA B 7 BRIGHT A_WeaponReady
			TNT1 A 0 A_FireCustomMissile("LostSoulOnHandFireSpawner",40,0,0,5)
			THEA C 7 BRIGHT A_WeaponReady
			TNT1 A 0 A_FireCustomMissile("LostSoulOnHandFireSpawner",40,0,0,5)
			THEA D 7 BRIGHT A_WeaponReady
			TNT1 A 0 A_FireCustomMissile("LostSoulOnHandFireSpawner",40,0,0,5)
			THEA C 7 BRIGHT A_WeaponReady
			TNT1 A 0 A_FireCustomMissile("LostSoulOnHandFireSpawner",40,0,0,5)
			THEA D 7 BRIGHT A_WeaponReady
			TNT1 A 0 A_FireCustomMissile("LostSoulOnHandFireSpawner",40,0,0,5)
			Goto Ready
				LSFire:
			TH3F A 4
			"####" A 0 A_PlaySound("Paladin/LongExert", 2)
			TNT1 A 0 A_PlaySound("skeleton/swing")
			TNT1 A 0 A_Giveinventory("Punching",1)
			TH3F B 1 A_FireCustomMissile("PoorLostSoul", 0, 1, 0, 0)
			TH3F CDEF 1
			TNT1 A 0 A_TakeInventory("LostSoulFatality",1)
			Goto Ready
				KillLS:
			THEA E 8
			TNT1 A 0 A_FireCustomMissile("LSOHK",40,0,0,5)
			TNT1 A 0 A_Takeinventory("LostSoulFatality",1)
			THEA F 8
			THEA F 1 A_Lower
			Wait		
				ReadyBarrel:
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"DoKick")
			MARN A 0 ACS_ExecuteAlways(294, 0, 0, 0, 0)//Makes player slower.
			THRG C 1 A_WeaponReady
			TNT1 A 0 A_JumpIfInventory("ImpactMovesSling", 1, "ReadyBarrelShake")
			Goto ReadyBarrel
			PickBarrel:	
			TNT1 A 0
			MARN A 0 ACS_ExecuteAlways(294, 0, 0, 0, 0)//Makes player slower.
			THRG C 1 offset(-12,48)
			THRG C 1 offset(-9,42)
			THRG C 1 offset(-7,39)
			THRG C 1 offset(-4,36)
			THRG C 1 offset(-2,33)
		ReadyBarrelShake:
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"DoKick")
			MARN A 0 ACS_ExecuteAlways(294, 0, 0, 0, 0)//Makes player slower.
			TNT1 A 0 A_TakeInventory("ImpactMovesSling", 1)
			THRG DE 1 A_WeaponReady
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"DoKick")
			THRG EDCBA 1 A_WeaponReady
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"DoKick")
			THRG ABC 1 A_WeaponReady
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"DoKick")
			TNT1 A 0 A_JumpIfInventory("ImpactMovesSling", 1, "ReadyBarrelShake")
			THRG DEEDCBA 2 A_WeaponReady
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"DoKick")
			TNT1 A 0 A_JumpIfInventory("ImpactMovesSling", 1, "ReadyBarrelShake")
			THRG AB 3 A_WeaponReady
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"DoKick")
			TNT1 A 0 A_JumpIfInventory("ImpactMovesSling", 1, "ReadyBarrelShake")
			Goto ReadyBarrel	
				FireBarrel:
			THRG C 1 offset(4,34)
			THRG C 1 offset(24,41)
			THRG C 1 offset(48,49)
			THRG C 1 offset(56,51)
			THRG C 1 offset(52,49)
			THRG C 1 offset(36,41)
			THRG C 1 offset(12,34)
			THRG C 1 offset(-6,32)
			THRG C 1 offset(-14,32)
			"####" A 0 A_PlaySound("Paladin/SpellCast", 2)
			TNT1 A 0 A_FireCustomMissile("ThrowedBarrel", 0, 1, 0, 0)
			TNT1 A 0 A_PlaySound("skeleton/swing")
			TNT1 A 0 A_Giveinventory("Punching",1)
			TNT1 A 0 A_TakeInventory("HasBarrel",1)
			MARN A 0 ACS_ExecuteAlways(295, 0, 0, 0, 0)//Makes player have normal speed.
			THRF ABCDEF 3 
			Goto Ready
		AltFireBarrel:
			THRG C 1 offset(-2,33)
			THRG C 1 offset(-4,36)
			THRG C 1 offset(-7,39)
			THRG C 1 offset(-9,42)
			THRG C 1 offset(-12,48)
			"####" A 0 A_PlaySound("Paladin/ShortExert", 2)
			THRF A 0 A_SpawnItemEx ("ExplosiveBarrel",40,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
			MARN A 0 ACS_ExecuteAlways(295, 0, 0, 0, 0)//Makes player have normal speed.
			TNT1 A 0 A_PlaySound("skeleton/swing")
			TNT1 A 0 A_Giveinventory("Punching",1)
			TNT1 A 0 A_TakeInventory("HasBarrel",1)
			PONG A 5
			Goto Ready
				//PICKING UP ENEMIES ////////////////////////////////////////////////////////////////////
		PickZombieman:	
			TNT1 A 0
			GR71 C 1 offset(12, 32)
			GR71 C 1 offset(6, 32)
			GR71 C 1  A_WeaponReady(WRF_NOSWITCH)
			TNT1 A 0
			TNT1 A 0 A_JumpIfInventory("MeatAmmo", 60, "ZombiemanDie")
			TNT1 A 0 A_SpawnItemEx("MeatShield", 15, 0, 15, 0)
			GR71 A 3 A_WeaponReady(WRF_NOSWITCH)
			TNT1 A 0 A_Jump(20, 2)
			Goto PickZombieman+5
			TNT1 AAAA 0
			GR71 ABACACA 4 A_WeaponReady(WRF_NOSWITCH)
			Goto PickZombieman+5
			ThrowZombieman:
			TNT1 A 0
			TNT1 A 0 A_JumpIfHealthLower(1, "ZombiemanDie")
			GR71 D 1 offset(-4, 32)
			GR71 D 1 offset(-9, 33)
			GR71 D 1 offset(-16, 34)
			GR71 D 2 offset(-24, 35)
			GR71 D 3 offset(-36, 48)
			GR71 D 1 offset(-24, 35)
			GR71 B 1 offset(-16, 34)
			GR71 B 1 offset(-9, 33)
			GR71 B 1 offset(-1, 32)
			"####" A 0 A_PlaySound("Paladin/SpellCast", 2)
			TNT1 A 0 A_PlaySound("skeleton/swing")
			TNT1 A 0 A_FireCustomMissile("ThrowedZman", 0, 0, 0, 0)
			TNT1 A 0 A_TakeInventory("GoSpecial",1)
			TNT1 A 0 A_TakeInventory("GotMeatShield", 1)
			TNT1 A 0 A_TakeInventory("HasZmanShield",1)
			TNT1 A 0 A_Giveinventory("Punching",1)
			TNT1 A 0 A_TakeInventory("GrabbedAZombieman",1)
			TNT1 A 0 A_Giveinventory("Punching",1)
			TH3F BCDEF 1 
			TNT1 A 10
			Goto Ready
				ShieldZombieman:
			TNT1 A 0 A_TakeInventory("GrabbedAZombieman",1)
			TNT1 A 0 A_TakeInventory("GrabbedAShotgunguy",1)
			TNT1 A 0 A_TakeInventory("GrabbedAChaingunguy",1)
			TNT1 A 0 A_TakeInventory("GrabbedAZombieCivilian",1)
			TNT1 A 0 A_TakeInventory("GrabbedAImp",1)
			TNT1 A 0 A_GiveInventory("ZMANShield",1)
			GR71 A 1 offset(0,40)
			GR71 A 1 offset(0,48)
			TNT1 A 0 A_SelectWeapon("ZMANShield")
			TNT1 A 1 A_WeaponReady(WRF_NOFIRE)
			Goto Ready
				ZombiemanDie:
			TNT1 A 0
			TNT1 A 0 A_SpawnItem("SargeXDeath", 0, 40)
			TNT1 A 0 A_TakeInventory("GoSpecial",1)
			TNT1 A 0 A_TakeInventory("GotMeatShield", 1)
			TNT1 A 0 A_TakeInventory("HasZmanShield",1)
			TNT1 A 0 A_Giveinventory("Punching",1)
			TNT1 A 0 A_TakeInventory("GrabbedAZombieman",1)
			TNT1 A 0 A_Giveinventory("Punching",1)
			Goto Ready
				//---------------------------------------------------Zombieman End
		//Imp Start
			PickImp:	
			TNT1 A 0
			GR73 C 1 offset(12, 32)
			GR73 C 1 offset(6, 32)
			GR73 C 1  A_WeaponReady(WRF_NOSWITCH)
			TNT1 A 0
			TNT1 A 0 A_JumpIfInventory("MeatAmmo", 60, "ImpDie")
			TNT1 A 0 A_SpawnItemEx("MeatShield", 15, 0, 15, 0)
			GR73 A 3 A_WeaponReady(WRF_NOSWITCH)
			TNT1 A 0 A_Jump(20, 2)
			Goto PickImp+5
			TNT1 AAAA 0
			GR73 ABACACA 4 A_WeaponReady(WRF_NOSWITCH)
			Goto PickImp+5
			ThrowImp:
			TNT1 A 0
			TNT1 A 0 A_JumpIfHealthLower(1, "ImpDie")
			GR73 D 1 offset(-4, 32)
			GR73 D 1 offset(-9, 33)
			GR73 D 1 offset(-16, 34)
			GR73 D 2 offset(-24, 35)
			GR73 D 3 offset(-36, 48)
			GR73 D 1 offset(-24, 35)
			GR73 B 1 offset(-16, 34)
			GR73 B 1 offset(-9, 33)
			GR73 B 1 offset(-1, 32)
			"####" A 0 A_PlaySound("Paladin/SpellCast", 2)
			TNT1 A 0 A_PlaySound("skeleton/swing")
			TNT1 A 0 A_FireCustomMissile("ThrowedImp", 0, 0, 0, 0)
			TNT1 A 0 A_TakeInventory("GoSpecial",1)
			TNT1 A 0 A_TakeInventory("GotMeatShield", 1)
			TNT1 A 0 A_TakeInventory("HasZmanShield",1)
			TNT1 A 0 A_Giveinventory("Punching",1)
			TNT1 A 0 A_TakeInventory("GrabbedAImp",1)
			TNT1 A 0 A_Giveinventory("Punching",1)
			TH3F BCDEF 1 
			TNT1 A 10
			Goto Ready
				ShieldImp:
			TNT1 A 0 A_TakeInventory("GrabbedAImp",1)
			TNT1 A 0 A_TakeInventory("GrabbedAShotgunguy",1)
			TNT1 A 0 A_TakeInventory("GrabbedAChaingunguy",1)
			TNT1 A 0 A_TakeInventory("GrabbedAZombieCivilian",1)
			TNT1 A 0 A_TakeInventory("GrabbedAImp",1)
			TNT1 A 0 A_GiveInventory("ImpShield",1)
			GR73 A 1 offset(0,40)
			GR73 A 1 offset(0,48)
			TNT1 A 0 A_SelectWeapon("ImpShield")
			TNT1 A 1 A_WeaponReady(WRF_NOFIRE)
			Goto Ready
				ImpDie:
			TNT1 A 0
			TNT1 A 0 A_SpawnItem("ImpXDeath", 0, 40)
			TNT1 A 0 A_TakeInventory("GoSpecial",1)
			TNT1 A 0 A_TakeInventory("GotMeatShield", 1)
			TNT1 A 0 A_TakeInventory("HasZmanShield",1)
			TNT1 A 0 A_Giveinventory("Punching",1)
			TNT1 A 0 A_TakeInventory("GrabbedAImp",1)
			TNT1 A 0 A_Giveinventory("Punching",1)
			Goto Ready
				//---------------------------------------------------Imp End
		//Shotgunguy Start	----------------------------------------
		PickShotgunguy:	
			TNT1 A 0
			GR72 C 1 offset(12, 32)
			GR72 C 1 offset(6, 32)
			GR72 C 1  A_WeaponReady(WRF_NOSWITCH)
			TNT1 A 0
			TNT1 A 0 A_JumpIfInventory("MeatAmmo", 60, "ShotgunguyDie")
			TNT1 A 0 A_SpawnItemEx("MeatShield", 15, 0, 15, 0)
			GR72 A 3 A_WeaponReady(WRF_NOSWITCH)
			TNT1 A 0 A_Jump(20, 2)
			Goto PickShotgunguy+5
			TNT1 AAAA 0
			GR72 ABACACA 4 A_WeaponReady(WRF_NOSWITCH)
			Goto PickShotgunguy+5
			ThrowShotgunguy:
			TNT1 A 0
			TNT1 A 0 A_JumpIfHealthLower(1, "ShotgunguyDie")
			GR72 D 1 offset(-4, 32)
			GR72 D 1 offset(-9, 33)
			GR72 D 1 offset(-16, 34)
			GR72 D 2 offset(-24, 35)
			GR72 D 3 offset(-36, 48)
			GR72 D 1 offset(-24, 35)
			GR72 B 1 offset(-16, 34)
			GR72 B 1 offset(-9, 33)
			GR72 B 1 offset(-1, 32)
			"####" A 0 A_PlaySound("Paladin/SpellCast", 2)
			TNT1 A 0 A_PlaySound("skeleton/swing")
			TNT1 A 0 A_FireCustomMissile("ThrowedShotgunguy", 0, 0, 0, 0)
			TNT1 A 0 A_TakeInventory("GoSpecial",1)
			TNT1 A 0 A_TakeInventory("GotMeatShield", 1)
			TNT1 A 0 A_TakeInventory("HasZmanShield",1)
			TNT1 A 0 A_Giveinventory("Punching",1)
			TNT1 A 0 A_TakeInventory("GrabbedAShotgunguy",1)
			TNT1 A 0 A_Giveinventory("Punching",1)
			TH3F BCDEF 1 
			TNT1 A 10
			Goto Ready
				ShieldShotgunguy:
			TNT1 A 0 A_TakeInventory("GrabbedAShotgunguy",1)
			TNT1 A 0 A_TakeInventory("GrabbedAShotgunguy",1)
			TNT1 A 0 A_TakeInventory("GrabbedAChaingunguy",1)
			TNT1 A 0 A_TakeInventory("GrabbedAZombieCivilian",1)
			TNT1 A 0 A_TakeInventory("GrabbedAImp",1)
			TNT1 A 0 A_GiveInventory("SguyShield",1)
			GR72 A 1 offset(0,40)
			GR72 A 1 offset(0,48)
			TNT1 A 0 A_SelectWeapon("SGuyShield")
			TNT1 A 1 A_WeaponReady(WRF_NOFIRE)
			Goto Ready
				ShotgunguyDie:
			TNT1 A 0
			TNT1 A 0 A_SpawnItem("SargeXDeath", 0, 40)
			TNT1 A 0 A_TakeInventory("GoSpecial",1)
			TNT1 A 0 A_TakeInventory("GotMeatShield", 1)
			TNT1 A 0 A_TakeInventory("HasZmanShield",1)
			TNT1 A 0 A_Giveinventory("Punching",1)
			TNT1 A 0 A_TakeInventory("GrabbedAShotgunguy",1)
			TNT1 A 0 A_Giveinventory("Punching",1)
			Goto Ready
				//End Shotgunguy-------------------------------------------------
		//CHaingunguy Start------------------------------------------------
			PickChaingunguy:	
			TNT1 A 0
			GR74 C 1 offset(12, 32)
			GR74 C 1 offset(6, 32)
			GR74 C 1  A_WeaponReady(WRF_NOSWITCH)
			TNT1 A 0
			TNT1 A 0 A_JumpIfInventory("MeatAmmo", 60, "ChaingunguyDie")
			TNT1 A 0 A_SpawnItemEx("MeatShield", 15, 0, 15, 0)
			GR74 A 3 A_WeaponReady(WRF_NOSWITCH)
			TNT1 A 0 A_Jump(20, 2)
			Goto PickChaingunguy+5
			TNT1 AAAA 0
			GR74 ABACACA 4 A_WeaponReady(WRF_NOSWITCH)
			Goto PickChaingunguy+5
			ThrowChaingunguy:
			TNT1 A 0
			TNT1 A 0 A_JumpIfHealthLower(1, "ChaingunguyDie")
			GR74 D 1 offset(-4, 32)
			GR74 D 1 offset(-9, 33)
			GR74 D 1 offset(-16, 34)
			GR74 D 2 offset(-24, 35)
			GR74 D 3 offset(-36, 48)
			GR74 D 1 offset(-24, 35)
			GR74 B 1 offset(-16, 34)
			GR74 B 1 offset(-9, 33)
			GR74 B 1 offset(-1, 32)
			"####" A 0 A_PlaySound("Paladin/SpellCast", 2)
			TNT1 A 0 A_PlaySound("skeleton/swing")
			TNT1 A 0 A_FireCustomMissile("ThrowedChaingunguy", 0, 0, 0, 0)
			TNT1 A 0 A_TakeInventory("GoSpecial",1)
			TNT1 A 0 A_TakeInventory("GotMeatShield", 1)
			TNT1 A 0 A_TakeInventory("HasZmanShield",1)
			TNT1 A 0 A_Giveinventory("Punching",1)
			TNT1 A 0 A_TakeInventory("GrabbedAChaingunguy",1)
			TNT1 A 0 A_Giveinventory("Punching",1)
			TH3F BCDEF 1 
			TNT1 A 10
			Goto Ready
				ShieldChaingunguy:
			TNT1 A 0 A_TakeInventory("GrabbedAChaingunguy",1)
			TNT1 A 0 A_TakeInventory("GrabbedAImp",1)
			TNT1 A 0 A_GiveInventory("SguyShield",1)
			GR74 A 1 offset(0,40)
			GR74 A 1 offset(0,48)
			TNT1 A 0 A_SelectWeapon("SGuyShield")
			TNT1 A 1 A_WeaponReady(WRF_NOFIRE)
			Goto Ready
				ChaingunguyDie:
			TNT1 A 0
			TNT1 A 0 A_SpawnItem("SargeXDeath", 0, 40)
			TNT1 A 0 A_TakeInventory("GoSpecial",1)
			TNT1 A 0 A_TakeInventory("GotMeatShield", 1)
			TNT1 A 0 A_TakeInventory("HasZmanShield",1)
			TNT1 A 0 A_Giveinventory("Punching",1)
			TNT1 A 0 A_TakeInventory("GrabbedAChaingunguy",1)
			TNT1 A 0 A_Giveinventory("Punching",1)
			Goto Ready
				//End Chaingunguy-------------------------------------------------
		//Labguy Start------------------------------------------------	
			PickZombieCivilian:	
			TNT1 A 0
			GR77 C 1 offset(12, 32)
			GR77 C 1 offset(6, 32)
			GR77 C 1  A_WeaponReady(WRF_NOSWITCH)
			TNT1 A 0
			TNT1 A 0 A_JumpIfInventory("MeatAmmo", 60, "ZombieCivilianDie")
			TNT1 A 0 A_SpawnItemEx("MeatShield", 15, 0, 15, 0)
			GR77 A 3 A_WeaponReady(WRF_NOSWITCH)
			TNT1 A 0 A_Jump(20, 2)
			Goto PickZombieCivilian+5
			TNT1 AAAA 0
			GR77 ABACACA 4 A_WeaponReady(WRF_NOSWITCH)
			Goto PickZombieCivilian+5
			ThrowZombieCivilian:
			TNT1 A 0
			TNT1 A 0 A_JumpIfHealthLower(1, "ZombieCivilianDie")
			GR77 D 1 offset(-4, 32)
			GR77 D 1 offset(-9, 33)
			GR77 D 1 offset(-16, 34)
			GR77 D 2 offset(-24, 35)
			GR77 D 3 offset(-36, 48)
			GR77 D 1 offset(-24, 35)
			GR77 B 1 offset(-16, 34)
			GR77 B 1 offset(-9, 33)
			GR77 B 1 offset(-1, 32)
			"####" A 0 A_PlaySound("Paladin/SpellCast", 2)
			TNT1 A 0 A_PlaySound("skeleton/swing")
			TNT1 A 0 A_FireCustomMissile("ThrowedZombieCivilian", 0, 0, 0, 0)
			TNT1 A 0 A_TakeInventory("GoSpecial",1)
			TNT1 A 0 A_TakeInventory("GotMeatShield", 1)
			TNT1 A 0 A_TakeInventory("HasZmanShield",1)
			TNT1 A 0 A_Giveinventory("Punching",1)
			TNT1 A 0 A_TakeInventory("GrabbedAZombieCivilian",1)
			TNT1 A 0 A_Giveinventory("Punching",1)
			TH3F BCDEF 1 
			TNT1 A 10
			Goto Ready
				ShieldZombieCivilian:
			TNT1 A 0 A_TakeInventory("GrabbedAZombieCivilian",1)
			TNT1 A 0 A_TakeInventory("GrabbedAImp",1)
			TNT1 A 0 A_GiveInventory("SguyShield",1)
			GR77 A 1 offset(0,40)
			GR77 A 1 offset(0,48)
			TNT1 A 0 A_SelectWeapon("SGuyShield")
			TNT1 A 1 A_WeaponReady(WRF_NOFIRE)
			Goto Ready
				ZombieCivilianDie:
			TNT1 A 0
			TNT1 A 0 A_SpawnItem("SargeXDeath", 0, 40)
			TNT1 A 0 A_TakeInventory("GoSpecial",1)
			TNT1 A 0 A_TakeInventory("GotMeatShield", 1)
			TNT1 A 0 A_TakeInventory("HasZmanShield",1)
			TNT1 A 0 A_Giveinventory("Punching",1)
			TNT1 A 0 A_TakeInventory("GrabbedAZombieCivilian",1)
			TNT1 A 0 A_Giveinventory("Punching",1)
			Goto Ready
				//Civilian End------------------------------------------------	
		//Evil Marine Start------------------------------------------------
			PickEvilMarine:	
			TNT1 A 0
			GR75 C 1 offset(12, 32)
			GR75 C 1 offset(6, 32)
			GR75 C 1  A_WeaponReady(WRF_NOSWITCH)
			TNT1 A 0
			TNT1 A 0 A_JumpIfInventory("MeatAmmo", 60, "EvilMarineDie")
			TNT1 A 0 A_SpawnItemEx("MeatShield", 15, 0, 15, 0)
			GR75 A 3 A_WeaponReady(WRF_NOSWITCH)
			TNT1 A 0 A_Jump(20, 2)
			Goto PickEvilMarine+5
			TNT1 AAAA 0
			GR75 ABACACA 4 A_WeaponReady(WRF_NOSWITCH)
			Goto PickEvilMarine+5
			ThrowEvilMarine:
			TNT1 A 0
			TNT1 A 0 A_JumpIfHealthLower(1, "EvilMarineDie")
			GR75 D 1 offset(-4, 32)
			GR75 D 1 offset(-9, 33)
			GR75 D 1 offset(-16, 34)
			GR75 D 2 offset(-24, 35)
			GR75 D 3 offset(-36, 48)
			GR75 D 1 offset(-24, 35)
			GR75 B 1 offset(-16, 34)
			GR75 B 1 offset(-9, 33)
			GR75 B 1 offset(-1, 32)
			"####" A 0 A_PlaySound("Paladin/SpellCast", 2)
			TNT1 A 0 A_PlaySound("skeleton/swing")
			TNT1 A 0 A_FireCustomMissile("ThrowedEvilMarine", 0, 0, 0, 0)
			TNT1 A 0 A_TakeInventory("GoSpecial",1)
			TNT1 A 0 A_TakeInventory("GotMeatShield", 1)
			TNT1 A 0 A_TakeInventory("HasZmanShield",1)
			TNT1 A 0 A_Giveinventory("Punching",1)
			TNT1 A 0 A_TakeInventory("GrabbedAEvilMarine",1)
			TNT1 A 0 A_Giveinventory("Punching",1)
			TH3F BCDEF 1 
			TNT1 A 10
			Goto Ready
				ShieldEvilMarine:
			TNT1 A 0 A_TakeInventory("GrabbedAEvilMarine",1)
			TNT1 A 0 A_TakeInventory("GrabbedAImp",1)
			TNT1 A 0 A_GiveInventory("SguyShield",1)
			GR75 A 1 offset(0,40)
			GR75 A 1 offset(0,48)
			TNT1 A 0 A_SelectWeapon("SGuyShield")
			TNT1 A 1 A_WeaponReady(WRF_NOFIRE)
			Goto Ready
				EvilMarineDie:
			TNT1 A 0
			TNT1 A 0 A_SpawnItem("SargeXDeath", 0, 40)
			TNT1 A 0 A_TakeInventory("GoSpecial",1)
			TNT1 A 0 A_TakeInventory("GotMeatShield", 1)
			TNT1 A 0 A_TakeInventory("HasZmanShield",1)
			TNT1 A 0 A_Giveinventory("Punching",1)
			TNT1 A 0 A_TakeInventory("GrabbedAEvilMarine",1)
			TNT1 A 0 A_Giveinventory("Punching",1)
			Goto Ready	
				//Evil Marine End------------------------------------------------	
		//Nazi Start------------------------------------------------
			PickNazi:	
			TNT1 A 0
			GR76 C 1 offset(12, 32)
			GR76 C 1 offset(6, 32)
			GR76 C 1  A_WeaponReady(WRF_NOSWITCH)
			TNT1 A 0
			TNT1 A 0 A_JumpIfInventory("MeatAmmo", 60, "NaziDie")
			TNT1 A 0 A_SpawnItemEx("MeatShield", 15, 0, 15, 0)
			GR76 A 3 A_WeaponReady(WRF_NOSWITCH)
			TNT1 A 0 A_Jump(20, 2)
			Goto PickNazi+5
			TNT1 AAAA 0
			GR76 ABACACA 4 A_WeaponReady(WRF_NOSWITCH)
			Goto PickNazi+5
			ThrowNazi:
			TNT1 A 0
			TNT1 A 0 A_JumpIfHealthLower(1, "NaziDie")
			GR76 D 1 offset(-4, 32)
			GR76 D 1 offset(-9, 33)
			GR76 D 1 offset(-16, 34)
			GR76 D 2 offset(-24, 35)
			GR76 D 3 offset(-36, 48)
			GR76 D 1 offset(-24, 35)
			GR76 B 1 offset(-16, 34)
			GR76 B 1 offset(-9, 33)
			GR76 B 1 offset(-1, 32)
			"####" A 0 A_PlaySound("Paladin/SpellCast", 2)
			TNT1 A 0 A_PlaySound("skeleton/swing")
			TNT1 A 0 A_FireCustomMissile("ThrowedNazi", 0, 0, 0, 0)
			TNT1 A 0 A_TakeInventory("GoSpecial",1)
			TNT1 A 0 A_TakeInventory("GotMeatShield", 1)
			TNT1 A 0 A_TakeInventory("HasZmanShield",1)
			TNT1 A 0 A_Giveinventory("Punching",1)
			TNT1 A 0 A_TakeInventory("GrabbedANazi",1)
			TNT1 A 0 A_Giveinventory("Punching",1)
			TH3F BCDEF 1 
			TNT1 A 10
			Goto Ready
				ShieldNazi:
			TNT1 A 0 A_TakeInventory("GrabbedANazi",1)
			TNT1 A 0 A_TakeInventory("GrabbedAImp",1)
			TNT1 A 0 A_GiveInventory("SguyShield",1)
			GR76 A 1 offset(0,40)
			GR76 A 1 offset(0,48)
			TNT1 A 0 A_SelectWeapon("SGuyShield")
			TNT1 A 1 A_WeaponReady(WRF_NOFIRE)
			Goto Ready
				NaziDie:
			TNT1 A 0
			TNT1 A 0 A_SpawnItem("SargeXDeath", 0, 40)
			TNT1 A 0 A_TakeInventory("GoSpecial",1)
			TNT1 A 0 A_TakeInventory("GotMeatShield", 1)
			TNT1 A 0 A_TakeInventory("HasZmanShield",1)
			TNT1 A 0 A_Giveinventory("Punching",1)
			TNT1 A 0 A_TakeInventory("GrabbedANazi",1)
			TNT1 A 0 A_Giveinventory("Punching",1)
			Goto Ready		
		}
	}
	
	
Actor Schism_TomeOfPower : PowerupGiver Replaces ArtiTomeOfPower {
	Game Raven
	Powerup.Type Weaponlevel2
	+COUNTITEM
	+FLOATBOB
	+NOGRAVITY
	+INVENTORY.PERSISTENTPOWER
	Inventory.Amount 1
	Inventory.MaxAmount 16
	Inventory.Icon "ARTIPW2K" // Because of zandronum shenanigans
	Inventory.PickupMessage "$TXT_ARTITOMEOFPOWER"
	Tag "$TAG_ARTITOMEOFPOWER"
	States {
		Spawn:
			PW2K A 350 // Because of zandronum shenanigans
			Loop
	}
}
	
Actor Schism_SidheAmmoGiverLimit : TokenBase {}