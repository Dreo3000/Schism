Actor Schism_QuadShotgunGiver : Schism_BaseWeaponGiver {
	scale 0.8
	Inventory.PickupMessage "You got THE QUAD SHOTGUN!!!! (Slot 3)"
	Inventory.PickupSound "CLIPINSS"
	Inventory.ForbiddenTo Schism_Sorcerer, Schism_Warrior, Schism_Corvus, BaronPlayer, RevenantPlayer
    States {
		Spawn:
			QSGS A -1
			Stop

		Pickup:
			TNT1 A 0
			TNT1 A 0 A_JumpIfInventory("IsSorcerer", 1, "ItsNotForSorcerer")
			TNT1 A 0 A_JumpIfInventory("Schism_QuadShotgun", 1, "GiveAmmo")
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("Schism_CounInvG", 3) >= 2, "DontGive")
			TNT1 A 0 A_GiveInventory("Schism_QuadShotgun",1)
			Goto GiveAmmo

		ItsNotForSorcerer:
			TNT1 A 0 A_Print("Sorcerers don't use such primitive kind of firepower",1)
			QSGS A 30
			Fail

		GiveAmmo:
			TNT1 A 0 A_GiveInventory("AmmoShell", 8)
			Stop

		DontGive:
			TNT1 A 0 A_Print("You can't carry too many shotguns",1)
			QSGS A 30
			Fail

		DontGiveSecondWeapon:
			TNT1 A 0 A_Print("You don't need four more barrels...",1)
			QSGS A 30
			Fail

    }
}

Actor Schism_QuadShotgunEmptyGiver : Schism_BaseWeaponGiver {
	scale 0.8
	Inventory.ForbiddenTo Schism_Sorcerer, Schism_Warrior, Schism_Corvus, BaronPlayer, RevenantPlayer
	Inventory.PickupMessage "You got THE QUAD SHOTGUN!!!! (Slot 3)"
	Inventory.PickupSound "CLIPINSS"
    States {
		Spawn:
			QSGS A -1
			Stop

		Pickup:
			TNT1 A 0
			TNT1 A 0 A_JumpIfInventory("IsSorcerer", 1, "ItsNotForSorcerer")
			TNT1 A 0 A_JumpIfInventory("Schism_QuadShotgun", 1, "DontGiveSecondWeapon")
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("Schism_CounInvG", 3) >= 2, "DontGive")
			TNT1 A 0 A_GiveInventory("Schism_QuadShotgun",1)
			Stop

		ItsNotForSorcerer:
			TNT1 A 0 A_Print("Sorcerers don't use such primitive kind of firepower",1)
			QSGS A 30
			Fail

		DontGive:
			TNT1 A 0 A_Print("You can't carry too many shotguns",1)
			QSGS A 30
			Fail

		DontGiveSecondWeapon:
			TNT1 A 0 A_Print("You don't need four more barrels...",1)
			QSGS A 30
			Fail

    }
}

Actor Schism_QuadShotgun : Schism_Weapon
{
	Weapon.SelectionOrder 700
	Weapon.SlotPriority 1
	Weapon.KickBack 50
	Weapon.AmmoType1 "QSSGAmmo"
	Weapon.AmmoGive1 0
	Weapon.AmmoUse1 0
	Weapon.AmmoType2 "AmmoShell"
	Weapon.AmmoGive2 0
	Weapon.AmmoUse2 0
	Weapon.UpSound "weapons/quadshotgun/close"
	Inventory.ForbiddenTo Schism_Sorcerer, Schism_Corvus, Schism_Warrior
	Inventory.PickupMessage "You got THE QUAD SHOTGUN!!!! (Slot 3)"
	Obituary "%o's brain exploded by %k's QUAD Shotgun."
	+WEAPON.AMMO_OPTIONAL
	+WEAPON.NOAUTOAIM
	Tag "Quad Shotgun"
	Scale 0.9
	States
	{
		Spawn:
			TNT1 A 2
			TNT1 A 1 A_SpawnItem("Schism_QuadShotgunEmptyGiver", 50)
			Stop

		Select:
			QBSG A 0 A_Raise
			Wait

		Deselect:
			QSHS FEDCBA 1
			QBSG A 0 A_Lower
			Wait

		Ready:
			TNT1 A 0 A_PlaySound("CLIPINSS")
			QSHS ABCDEF 1 A_WeaponReady(WRF_NOFIRE)
			ReadyLoop:
			QBSG A 1 A_WeaponReady(WRF_ALLOWRELOAD)
			TNT1 A 0 A_JumpIfInventory("Kicking", 1, "DoKick")
			TNT1 A 0 A_JumpIfInventory("Reloading", 1, "Reload")
			TNT1 A 0 A_JumpIfInventory("StartDualWield", 1, "DualWield")
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("Schism_GetFireType") == 1, 3)
			TNT1 A 0 A_SetCrosshair(36)
			TNT1 A 0 A_Jump(256,2)
			TNT1 A 0 A_SetCrosshair(40)
			TNT1 A 0
			Loop

		DualWield:
			QBSG A 0 A_TakeInventory("StartDualWield", 1)
			QBSG A 0 A_JumpIf(ACS_NamedExecuteWithResult("Schism_GetFireType") == 1, 5)
			QBSG A 0 A_Print ("Fire = quad shot, altfire = double shot")
			QBSG A 0 ACS_NamedExecuteAlways("Schism_SetFireType")
			QBSG A 0 A_PlaySound("CLIPINSS")
			QBSG A 0 A_SetCrosshair(40)
			Goto ReadyLoop
			QBSG A 0 A_Print ("Fire = double shot, altfire = single shot")
			QBSG A 0 ACS_NamedExecuteAlways("Schism_SetFireType")
			QBSG A 0 A_PlaySound("CLIPINSS")
			QBSG A 0 A_SetCrosshair(36)
			Goto ReadyLoop

		Fire:
			QBSG A 0 A_JumpIfInventory("QSSGAmmo", 1, 1)
			Goto NoAmmo
			QBSG A 0 A_JumpIf(ACS_NamedExecuteWithResult("Schism_GetFireType") == 1, "QuadrupleFire")
			QBSG A 0 A_JumpIfInventory("QSSGAmmo", 4, "TopDoubleFire")
			QBSG A 0 A_JumpIfInventory("QSSGAmmo", 3, "TopLeftBarrel")
			QBSG A 0 A_JumpIfInventory("QSSGAmmo", 2, "DoubleFire")
			QBSG A 0 A_JumpIfInventory("QSSGAmmo", 1, "LeftBarrel")
			Goto ReadyLoop

		QuadrupleFire:
			QBSG A 0 A_JumpIfInventory("QSSGAmmo", 4, 1)
			Goto TripleFire
			QBSG A 0 A_TakeInventory("QSSGAmmo", 4, TIF_NOTAKEINFINITE)
			QBSG A 0 A_PlaySound("SSHFIRE", CHAN_WEAPON)
			QBSG A 0 A_PlaySound("SSHFIRE", CHAN_5)
			QBSG A 0 A_GunFlash

			TNT1 A 0 A_Recoil(8)
			PKTA A 1 Bright Offset(0, 44) A_FireBullets(14, 10, 55, random(7, 14), "ShotPuff", 0)
			SHTZ A 0 A_FireBullets (10, 1, 9, 13, "ShotgunPuff", FBF_NORANDOM)
			SHTZ A 0 A_FireBullets (6, 3, 9, 13, "ShotgunPuff", FBF_NORANDOM)
			PKTA B 1 Bright Offset(0, 49) A_AlertMonsters
			QBSG A 0 A_SetPitch(pitch + 1.2)
			QBSG A 0 A_FireCustomMissile("SmokeSpawner", 0, 0, random(-8, 8), 0)
			QBSG AAAA 0 A_FireCustomMissile("GunFireSmoke", 0, 0, 0, 5)
			QBSG A 0 A_SetPitch(pitch - 20)

			QBSG A 1 Offset(0, 46)
			QBSG A 1 Offset(0, 39)
			QBSG A 1 Offset(0, 33)
			QBSG A 8
			QBSG A 1
			Goto Reload

		TripleFire:
			QBSG A 0 A_JumpIfInventory("QSSGAmmo", 3, 1)
			Goto RightBarrel
			Goto DoubleFire

		TopDoubleFire:
			QBSG A 0 A_JumpIfInventory("QSSGAmmo", 4, 1)
			Goto DoubleFire
			QBSG A 0 A_TakeInventory("QSSGAmmo", 2, TIF_NOTAKEINFINITE)
			QBSG A 0 A_playsound("SSHFIRE", 5)
			QBSG A 0 A_GunFlash
			QBSG A 0 A_JumpIfInventory("IsPaladin", 1, 3)
			QBSG A 0 A_JumpIfInventory("PowerStrength", 1, 2)
			TNT1 A 0 A_Recoil(4)
			SHO9 A 0 A_FireBullets (0,0,1,40,"shotpuff",FBF_NORANDOM,300)
			PKTA A 1 Bright //A_FireBullets(8, 6, 25, random(7, 14), "ShotPuff", 0)
			SHTZ A 0 A_FireBullets (10, 1, 9, 13, "ShotgunPuff", FBF_NORANDOM)
			SHTZ A 0 A_FireBullets (6, 3, 9, 13, "ShotgunPuff", FBF_NORANDOM)
			PKTA B 1 Bright A_AlertMonsters
			TNT1 A 0 A_FireCustomMissile("ShakeYourAss", 0, 0, 0, 0)
			TNT1 AAAAAAAAAA 0 A_FireCustomMissile("DecorativeTracer", random(-5,5), 0, 0, -12, 0, random(-5,5))
			QBSG A 0 A_FireCustomMissile("SmokeSpawner", 0, 0, random(-4, 4), 0)
			QBSG AAAA 0 A_FireCustomMissile("GunFireSmoke", 0, 0, 0, 5)
			QBSG A 0 A_SetPitch(pitch - 10)

			QSGK AABBCDDEF 1 A_SetPitch(pitch + 1.0)
			QBSG A 2
			Goto ReadyLoop

		DoubleFire:
			QBSG A 0 A_JumpIfInventory("QSSGAmmo", 2, 1)
			Goto LeftBarrel
			QBSG A 0 A_TakeInventory("QSSGAmmo", 2, TIF_NOTAKEINFINITE)
			QBSG A 0 A_playsound("SSHFIRE", 5)
			QBSG A 0 A_GunFlash
			QBSG A 0 A_JumpIfInventory("IsPaladin", 1, 3)
			QBSG A 0 A_JumpIfInventory("PowerStrength", 1, 2)
			TNT1 A 0 A_Recoil(4)
			SHO9 A 0 A_FireBullets (0,0,1,40,"shotpuff",FBF_NORANDOM,300)
			PKBA A 1 Bright //A_FireBullets(8, 6, 25, random(7, 14), "ShotPuff", 0)
			SHTZ A 0 A_FireBullets (10, 1, 9, 13, "ShotgunPuff", FBF_NORANDOM)
			SHTZ A 0 A_FireBullets (6, 3, 9, 13, "ShotgunPuff", FBF_NORANDOM)
			PKBA B 1 Bright A_AlertMonsters
			TNT1 A 0 A_FireCustomMissile("ShakeYourAss", 0, 0, 0, 0)
			TNT1 AAAAAAAAAA 0 A_FireCustomMissile("DecorativeTracer", random(-5,5), 0, 0, -12, 0, random(-5,5))
			QBSG A 0 A_FireCustomMissile("SmokeSpawner", 0, 0, random(-4, 4), 0)
			QBSG AAAA 0 A_FireCustomMissile("GunFireSmoke", 0, 0, 0, 5)
			QBSG A 0 A_SetPitch(pitch - 5)

			QSGK AABBCDDEF 1 A_SetPitch(pitch + 0.5)
			QBSG A 2
			QBSG A 0 A_JumpIfInventory("QSSGAmmo", 1, 2)
			TNT1 A 0
			goto reload
			TNT1 A 0
			Goto ReadyLoop

		AltFire:
			QBSG A 0 A_JumpIfInventory("QSSGAmmo", 1, 1)
			Goto NoAmmo
			QBSG A 0 A_JumpIf(ACS_NamedExecuteWithResult("Schism_GetFireType") == 1, "TopDoubleFire")
			QBSG A 0 A_JumpIfInventory("QSSGAmmo", 4, "TopRightBarrel")
			QBSG A 0 A_JumpIfInventory("QSSGAmmo", 3, "TopLeftBarrel")
			QBSG A 0 A_JumpIfInventory("QSSGAmmo", 2, "RightBarrel")
			QBSG A 0 A_JumpIfInventory("QSSGAmmo", 1, "LeftBarrel")
			Goto ReadyLoop

		TopRightBarrel:
			QBSG A 0 A_TakeInventory("QSSGAmmo", 1, TIF_NOTAKEINFINITE)
			QBSG A 0 A_PlayWeaponSound("weapons/sg")
			TNT1 A 0 A_AlertMonsters
			RIFF A 0 A_FireCustomMissile("DistantFireSoundShotgun", random(-1,1), 0, 0, -12, 0, random(-1,1))

			TNT1 A 0 A_FireCustomMissile("ShakeYourAssMinor", 0, 0, 0, 0)
			PKTR A 1 Bright A_FireBullets(5, 4, 10, 11, "ShotgunPuff", FBF_NORANDOM)
			PKTR A 1 Bright A_SpawnItemEx("PlayerMuzzle1",30,5,30)
			TNT1 AAAAA 0 A_FireCustomMissile("DecorativeTracer", random(-5,5), 0, 0, -12, 0, random(-5,5))
			TNT1 A 0 A_Recoil(2)
			QBSG A 0 A_SetPitch(-5.0 + pitch)

			TNT1 A 0 A_SpawnItemEx("PlayerMuzzle1",30,5,30)
			TNT1 AAAAAA 0 BRIGHT A_FireCustomMissile("ShotgunParticles", random(-12,12), 0, -1, 0, 0, random(-9,9))
			TNT1 AAAA 0 BRIGHT A_FireCustomMissile("ShotgunParticles2", random(-12,12), 0, -1, 0, 0, random(-9,9))
			QBSG A 0 A_FireCustomMissile("SmokeSpawner", 0, 0, random(-2, 2), 0)
			QBSG AAAA 0 A_FireCustomMissile("GunFireSmoke", 0, 0, 0, 5)

			QSGK DEF 2 A_SetPitch(pitch + 1)
			QBSG A 2
			Goto ReadyLoop

		TopLeftBarrel:
			QBSG A 0 A_JumpIfInventory("QSSGAmmo", 3, 1)
			Goto RightBarrel
			QBSG A 0 A_TakeInventory("QSSGAmmo", 1, TIF_NOTAKEINFINITE)
			QBSG A 0 A_PlayWeaponSound("weapons/sg")
			TNT1 A 0 A_AlertMonsters
			RIFF A 0 A_FireCustomMissile("DistantFireSoundShotgun", random(-1,1), 0, 0, -12, 0, random(-1,1))

			TNT1 A 0 A_FireCustomMissile("ShakeYourAssMinor", 0, 0, 0, 0)
			PKTL A 1 Bright A_FireBullets(5, 4, 10, 11, "ShotgunPuff", FBF_NORANDOM)
			PKTL A 1 Bright A_SpawnItemEx("PlayerMuzzle1",30,5,30)
			TNT1 AAAAA 0 A_FireCustomMissile("DecorativeTracer", random(-5,5), 0, 0, -12, 0, random(-5,5))
			TNT1 A 0 A_Recoil(2)
			QBSG A 0 A_SetPitch(-5.0 + pitch)

			TNT1 A 0 A_SpawnItemEx("PlayerMuzzle1",30,5,30)
			TNT1 AAAAAA 0 BRIGHT A_FireCustomMissile("ShotgunParticles", random(-12,12), 0, -1, 0, 0, random(-9,9))
			TNT1 AAAA 0 BRIGHT A_FireCustomMissile("ShotgunParticles2", random(-12,12), 0, -1, 0, 0, random(-9,9))
			QBSG A 0 A_FireCustomMissile("SmokeSpawner", 0, 0, random(-2, 2), 0)
			QBSG AAAA 0 A_FireCustomMissile("GunFireSmoke", 0, 0, 0, 5)

			QSGK DEF 2 A_SetPitch(pitch + 1)
			QBSG A 2
			Goto ReadyLoop

		RightBarrel:
			QBSG A 0 A_JumpIfInventory("QSSGAmmo", 2, 1)
			Goto LeftBarrel
			QBSG A 0 A_TakeInventory("QSSGAmmo", 1, TIF_NOTAKEINFINITE)
			QBSG A 0 A_PlayWeaponSound("weapons/sg")
			TNT1 A 0 A_AlertMonsters
			RIFF A 0 A_FireCustomMissile("DistantFireSoundShotgun", random(-1,1), 0, 0, -12, 0, random(-1,1))

			TNT1 A 0 A_FireCustomMissile("ShakeYourAssMinor", 0, 0, 0, 0)
			PKBR A 1 Bright A_FireBullets(5, 4, 10, 11, "ShotgunPuff", FBF_NORANDOM)
			PKBR A 1 Bright A_SpawnItemEx("PlayerMuzzle1",30,5,30)
			TNT1 AAAAA 0 A_FireCustomMissile("DecorativeTracer", random(-5,5), 0, 0, -12, 0, random(-5,5))
			TNT1 A 0 A_Recoil(2)
			QBSG A 0 A_SetPitch(-2.5 + pitch)

			TNT1 A 0 A_SpawnItemEx("PlayerMuzzle1",30,5,30)
			TNT1 AAAAAA 0 A_FireCustomMissile("ShotgunParticles", random(-12,12), 0, -1, 0, 0, random(-9,9))
			TNT1 AAAA 0 A_FireCustomMissile("ShotgunParticles2", random(-12,12), 0, -1, 0, 0, random(-9,9))
			QBSG A 0 A_FireCustomMissile("SmokeSpawner", 0, 0, random(-2, 2), 0)
			QBSG AAAA 0 A_FireCustomMissile("GunFireSmoke", 0, 0, 0, 5)

			QSGK DEF 2 A_SetPitch(pitch + 0.5)

			QBSG A 1 A_Refire
			Goto ReadyLoop

		LeftBarrel:
			QBSG A 0 A_TakeInventory("QSSGAmmo", 1, TIF_NOTAKEINFINITE)
			QBSG A 0 A_PlayWeaponSound("weapons/sg")
			TNT1 A 0 A_AlertMonsters
			RIFF A 0 A_FireCustomMissile("DistantFireSoundShotgun", random(-1,1), 0, 0, -12, 0, random(-1,1))

			TNT1 A 0 A_FireCustomMissile("ShakeYourAssMinor", 0, 0, 0, 0)
			PKBL A 1 Bright A_FireBullets(5, 4, 10, 11, "ShotgunPuff", FBF_NORANDOM)
			PKBL A 1 Bright A_SpawnItemEx("PlayerMuzzle1",30,5,30)
			TNT1 AAAAA 0 A_FireCustomMissile("DecorativeTracer", random(-5,5), 0, 0, -12, 0, random(-5,5))
			TNT1 A 0 A_Recoil(2)
			QBSG A 0 A_SetPitch(pitch - 2.5)
			TNT1 A 0 A_SpawnItemEx("PlayerMuzzle1",30,5,30)
			TNT1 AAAAAA 0 A_FireCustomMissile("ShotgunParticles", random(-12,12), 0, -1, 0, 0, random(-9,9))
			TNT1 AAAA 0 A_FireCustomMissile("ShotgunParticles2", random(-12,12), 0, -1, 0, 0, random(-9,9))

			QSGK DEF 2 A_SetPitch(pitch + 0.5)
			QBSG A 1
			Goto Reload

		Reload:
			TNT1 A 0 A_TakeInventory("Reloading",1)
			TNT1 A 0 A_JumpIfInventory("QSSGAmmo", 4, "ReadyLoop")
			TNT1 A 0 A_JumpIfInventory("AmmoShell", 1, "ReallyReload")
			Goto ReadyLoop
		ReallyReload:
			TNT1 A 0 A_SetCrosshair(41)
			PKS2 BCDE 2
			quad B 0 A_JumpIfInventory("QSSGAmmo", 3, "Reload1")
			quad B 0 A_JumpIfInventory("QSSGAmmo", 2, "Reload2")
			quad B 0 A_JumpIfInventory("QSSGAmmo", 1, "Reload3")
		Reload4:
			TNT1 A 0 A_JumpIfInventory("AmmoShell", 4, 4)
			TNT1 A 0 A_JumpIfInventory("AmmoShell", 3, "Reload3")
			TNT1 A 0 A_JumpIfInventory("AmmoShell", 2, "Reload2")
			TNT1 A 0 A_JumpIfInventory("AmmoShell", 1, "Reload1")
			PKS2 E 2 A_PlayWeaponSound("weapons/quadshotgun/open")
			PKS2 FFFF 0 A_FireCustomMissile("SSGCaseSpawner",0,0,-10, -20)
			QSGR ABCD 2
			PKS2 J 0 A_GiveInventory("QSSGAmmo", 2)
			PKS2 J 0 A_TakeInventory("AmmoShell", 2)
			QSGR E 1 A_PlayWeaponSound("weapons/quadshotgun/load")
			QSGR FGHI 2
			PKS2 P 0 A_GiveInventory("QSSGAmmo", 2)
			PKS2 P 0 A_TakeInventory("AmmoShell", 2)
			QSGR J 1 A_PlayWeaponSound("weapons/quadshotgun/load")

			PKS1 ABCD 3
			PKS1 E 1 A_PlayWeaponSound("weapons/quadshotgun/close")
			PKS1 F 2
			PKS1 G 1
			PKS1 H 1
			PKS1 I 1
			QBSG A 4
			QBSG A 1 A_Refire
			Goto ReadyLoop
		Reload3:
			TNT1 A 0 A_JumpIfInventory("AmmoShell", 3, 3)
			TNT1 A 0 A_JumpIfInventory("AmmoShell", 2, "Reload2")
			TNT1 A 0 A_JumpIfInventory("AmmoShell", 1, "Reload1")
			PKS2 E 2 A_PlayWeaponSound("weapons/quadshotgun/open")
			PKS2 FFF 0 A_FireCustomMissile("SSGCaseSpawner",0,0,-10, -20)
			PKS2 LOPQ 3
			PKS2 P 0 A_GiveInventory("QSSGAmmo", 1)
			PKS2 P 0 A_TakeInventory("AmmoShell", 1)
			PKS2 R 1 A_PlayWeaponSound("weapons/quadshotgun/load")

			QSGR FGHI 2
			PKS2 P 0 A_GiveInventory("QSSGAmmo", 2)
			PKS2 P 0 A_TakeInventory("AmmoShell", 2)
			QSGR J 1 A_PlayWeaponSound("weapons/quadshotgun/load")

			PKS1 ABCD 3
			PKS1 E 1 A_PlayWeaponSound("weapons/quadshotgun/close")
			PKS1 F 2
			PKS1 G 1
			PKS1 H 1
			PKS1 I 1
			QBSG A 4
			QBSG A 1 A_Refire
			Goto ReadyLoop
		Reload2:
			TNT1 A 0 A_JumpIfInventory("AmmoShell", 2, 2)
			TNT1 A 0 A_JumpIfInventory("AmmoShell", 1, "Reload1")
			PKS2 E 2 A_PlayWeaponSound("weapons/quadshotgun/open")
			PKS2 FF 0 A_FireCustomMissile("SSGCaseSpawner",0,0,-10, -20)
			QSGR FGHI 2
			PKS2 P 0 A_GiveInventory("QSSGAmmo", 2)
			PKS2 P 0 A_TakeInventory("AmmoShell", 2)
			QSGR J 1 A_PlayWeaponSound("weapons/quadshotgun/load")
			PKS1 ABCD 3
			PKS1 E 1 A_PlayWeaponSound("weapons/quadshotgun/close")
			PKS1 F 2
			PKS1 G 1
			PKS1 H 1
			PKS1 I 1
			QBSG A 4
			QBSG A 1 A_Refire
			Goto ReadyLoop
		Reload1:
			TNT1 A 0 A_JumpIfInventory("AmmoShell", 1, 1)
			Goto ReadyLoop
			PKS2 E 2 A_PlayWeaponSound("weapons/quadshotgun/open")
			PKS2 F 0 A_FireCustomMissile("SSGCaseSpawner",0,0,-10, -20)
			PKS2 WXYZ 3
			PKS2 Z 0 A_GiveInventory("QSSGAmmo", 1)
			PKS2 Z 0 A_TakeInventory("AmmoShell", 1)
			PKS2 Z 1 A_PlayWeaponSound("weapons/quadshotgun/load")
			PKS1 ABCD 3
			PKS1 E 1 A_PlayWeaponSound("weapons/quadshotgun/close")
			PKS1 F 2
			PKS1 G 1
			PKS1 H 1
			PKS1 I 1
			QBSG A 4
			QBSG A 1 A_Refire
			Goto ReadyLoop

		Flash:
			TNT1 A 5 Bright A_Light1
			TNT1 A 3 Bright A_Light2
			Goto LightDone

		NoAmmo:
			TNT1 A 0 A_Log("Done successfully")
			QBSG A 4
			TNT1 A 0 A_PlaySound("weapons/common/empty", 0)
			QBSG A 8
			Goto Reload

		ClearInv:
			"####" "#" 0 A_TakeInventory("Quickspell", 1)
			"####" "#" 0 A_TakeInventory("Unloading", 1)
			"####" "#" 0 A_TakeInventory("Salute1", 1)
			"####" "#" 0 A_TakeInventory("Salute2", 1)
			Goto ReadyLoop

		DoKick: //14 tic
			TNT1 A 0 A_GunFlash("KickFlash")
			TNT1 A 0 A_TakeInventory("Kicking", 1)
			TNT1 A 0 A_Takeinventory("Zoomed", 1)
			TNT1 A 0 A_Takeinventory("PowerLightAmp", 1)
			TNT1 A 0 A_ZoomFactor(1.0)
			TNT1 A 0 A_Takeinventory("ADSmode", 1)
			TNT1 A 0 A_JumpIf (momZ > 0, "KickInAir")
			TNT1 A 0 A_JumpIf (momZ < 0, "KickInAir")
			TNT1 A 0 A_JumpIf((Abs(VelY) < 1) && (Abs(VelX) < 1), 2)
			TNT1 A 0 A_JumpIfInventory("IsCrouching", 1, "SlideAttack")
			TNT1 A 0 A_JumpIfInventory("PowerStrength", 1, "DoKickWithBerserk")
			TNT1 A 0 A_PlaySound("KICK")
			TNT1 A 0 SetPlayerProperty(0, 1, 0)
			K1CK A 0 A_JumpIfInventory("IsPaladin", 1, 3)
			K2CK A 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			KICK A 0
			"####" BCD 1
			"####" A 0 A_FireCustomMissile("KickAttack", 0, 0, 0, -7)
			"####" H 3
			"####" IGF 1
			"####" "#" 0 SetPlayerProperty(0, 0, 0)
			"####" EDCBA 1 A_JumpIfInventory("Kicking", 1, "KickRight")
			TNT1 A 0 A_JumpIfInventory("Kicking", 1, "KickRight")
			Goto ReadyLoop


		DoKickWithBerserk:
			TNT1 A 0 A_PlaySound("KICK")
			K1CK A 0 A_JumpIfInventory("IsPaladin", 1, 3)
			K2CK A 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			KICK A 0
			"####" BCD 1
			"####" A 0 A_FireCustomMissile("SuperKickAttack", 0, 0, 0, -7)
			"####" H 3
			"####" IGF 1
			"####" ED 1
			"####" CBA 1 A_JumpIfInventory("Kicking", 1, "KickRight")
			TNT1 A 0 A_JumpIfInventory("Kicking", 1, "KickRight")
			Goto ReadyLoop

		KickRight: // 15 tic
			TNT1 A 0 A_GunFlash("RightKickFlash")
			K1K2 A 0 A_JumpIfInventory("IsPaladin", 1, 3)
			K2K2 A 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			KIK2 A 0
			"####" "#" 0 A_TakeInventory("Kicking", 1)
			"####" ABC 1
			"####" A 0 A_PlaySound("KICK")
			"####" A 0
			"####" A 0 A_SetPitch(pitch-9)
			"####" A 0 A_SetAngle(angle+9)
			"####" A 0 A_FireCustomMissile("KickAttack", 0, 0, 0, 0)
			"####" D 1
			"####" A 0 A_SetPitch(pitch+2)
			"####" A 0 A_SetAngle(angle-2)
			"####" D 1
			"####" A 0 A_SetPitch(pitch+2)
			"####" A 0 A_SetAngle(angle-2)
			"####" E 1
			"####" A 0 A_SetPitch(pitch+1)
			"####" A 0 A_SetAngle(angle-1)
			"####" E 1
			"####" A 0 A_SetPitch(pitch+1)
			"####" A 0 A_SetAngle(angle-1)
			"####" C 1 A_JumpIfInventory("Kicking", 1, "KickInAir")
			"####" A 0 A_SetPitch(pitch+1)
			"####" A 0 A_SetAngle(angle-1)
			"####" B 2 A_JumpIfInventory("Kicking", 1, "KickInAir")
			"####" A 0 A_SetPitch(pitch+1)
			"####" A 0 A_SetAngle(angle-1)
			"####" A 2 A_JumpIfInventory("Kicking", 1, "KickInAir")
			"####" A 0 A_SetPitch(pitch+1)
			"####" A 0 A_SetAngle(angle-1)
			"####" A 2 A_JumpIfInventory("Kicking", 1, "KickInAir")
			"####" A 1 A_JumpIfInventory("Kicking", 1, "KickInAir")
			Goto ReadyLoop

		KickInAir: // 18 tics
			TNT1 A 0 A_GunFlash("KickInAirFlash")
			TNT1 A 0 A_TakeInventory("Kicking", 1)
			K1CK J 0 A_JumpIfInventory("IsPaladin", 1, 3)
			K2CK J 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			KICK J 1
			"####" A 0 A_JumpIfInventory("PowerStrength", 1, "KickInAirWithBerserk")
			"####" A 0 A_PlaySound("KICK")
			"####" A 0 A_Recoil(-15)
			"####" JKLMN 1
			"####" A 0 A_FireCustomMissile("AirKickAttack", 0, 0, 0, -31)
			"####" O 3
			"####" PQ 2
			"####" RS 1
			"####" T 1 A_JumpIfInventory("Kicking", 1, "LeftFinishingKick")
			"####" A 2 A_JumpIfInventory("Kicking", 1, "LeftFinishingKick")
			"####" A 1 A_JumpIfInventory("Kicking", 1, "LeftFinishingKick")
			Goto ReadyLoop

		KickInAirWithBerserk: //18 tics
			K1CK J 0 A_JumpIfInventory("IsPaladin", 1, 3)
			K2CK J 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			KICK J 0
			"####" A 0 A_PlaySound("KICK")
			"####" A 0 A_Recoil (-15)
			"####" JKLMN 1
			"####" A 0 A_FireCustomMissile("SuperAirKickAttack", 0, 0, 0, -31)
			"####" O 3
			"####" PQ 2
			"####" RS 1
			"####" T 1 A_JumpIfInventory("Kicking", 1, "LeftFinishingKick")
			"####" A 2 A_JumpIfInventory("Kicking", 1, "LeftFinishingKick")
			"####" A 1 A_JumpIfInventory("Kicking", 1, "LeftFinishingKick")
			Goto ReadyLoop

		LeftFinishingKick: // 11 tics
			TNT1 A 0 A_GunFlash("LeftKickFlash")
			K1K3 A 0 A_JumpIfInventory("IsPaladin", 1, 3)
			K2K3 A 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			KIK3 A 0
			"####" "#" 0 A_TakeInventory("Kicking", 1)
			"####" A 0 A_Recoil(-10)
			"####" ABC 1
			"####" A 0 A_PlaySound("KICK")
			"####" A 0 A_SetPitch(pitch-9)
			"####" A 0 A_SetAngle(angle-9)
			"####" D 1 A_FireCustomMissile("KickAttack", 0, 0, 0, 0)
			"####" A 0 A_SetPitch(pitch+2)
			"####" A 0 A_SetAngle(angle+3)
			"####" E 1
			"####" A 0 A_SetPitch(pitch+2)
			"####" A 0 A_SetAngle(angle+3)
			"####" F 1 A_FireCustomMissile("KickAttack", 0, 0, 0, 0)
			"####" A 0 A_SetPitch(pitch+1)
			"####" A 0 A_SetAngle(angle+3)
			"####" G 1
			"####" A 0 A_SetPitch(pitch+1)
			"####" A 0 A_SetAngle(angle+2)
			"####" H 1 A_FireCustomMissile("KickAttack", 0, 0, 0, 0)
			"####" A 0 A_SetPitch(pitch+1)
			"####" A 0 A_SetAngle(angle+2)
			"####" I 1
			"####" A 0 A_SetPitch(pitch+1)
			"####" A 0 A_SetAngle(angle+1)
			"####" J 1 A_FireCustomMissile("KickAttack", 0, 0, 0, 0)
			"####" A 0 A_SetPitch(pitch+1)
			"####" A 0 A_SetAngle(angle+1)
			"####" K 1
			Goto ReadyLoop

		SlideAttack:
			TNT1 A 0 A_GunFlash("SlideKickFlashStart")
			TNT1 A 0 SetPlayerProperty(0,1,0)
			KICK A 0 A_Takeinventory("Kicking",1)
			TNT1 A 0 A_PlaySound("KICK")
			TNT1 A 0 A_Recoil (-16)
			TNT1 A 0 A_PlaySound("SlideKickStart", 5)
			S1DK A 0 A_JumpIfInventory("IsPaladin",1,3)
			S2DK A 0 A_JumpIfInventory("IsSorcerer",1,2)
			SLDK A 1
			"####" ABC 1
			"####" A 0 A_SetPItch(10)
			"####" A 0 A_FireCustomMissile("SlideAttack", 0, 0, 0, 10)
			"####" E 1
			"####" A 0 A_Recoil (-14)
			"####" A 0 A_SetPItch(10)
			"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
			"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
			Goto FinishSlide
			"####" F 1 A_FireCustomMissile("SlideAttack", 0, 0, 0, 10)
			"####" A 0 A_Recoil (-12)
			"####" A 0 A_SetPItch(10)
			"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
			"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
			Goto FinishSlide

			"####" G 1 A_FireCustomMissile("SlideAttack", 0, 0, 0, 10)
			"####" A 0 A_Recoil (-8)
			"####" A 0 A_SetPItch(10)
			"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
			"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
			Goto FinishSlide

			"####" F 1 A_FireCustomMissile("SlideAttack", 0, 0, 0, 10)
			"####" A 0 A_Recoil (-6)
			"####" A 0 A_SetPItch(10)
			"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
			"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
			Goto FinishSlide

			"####" G 1 A_FireCustomMissile("SlideAttack", 0, 0, 0, 10)
			"####" A 0 A_Recoil (-4)
			"####" A 0 A_SetPItch(10)
			"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
			"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
			Goto FinishSlide

			"####" F 1 A_FireCustomMissile("SlideAttack", 0, 0, 0, 10)
			"####" A 0 A_Recoil (-4)
			"####" A 0 A_SetPItch(10)
			"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
			"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
			Goto FinishSlide

			"####" G 1 A_FireCustomMissile("SlideAttack", 0, 0, 0, 10)
			"####" A 0 A_Recoil (-3)
			"####" A 0 A_SetPItch(10)
			"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
			"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
			Goto FinishSlide

			"####" F 1 A_FireCustomMissile("SlideAttack", 0, 0, 0, 10)
			"####" A 0 A_Recoil (-3)
			"####" A 0 A_SetPItch(10)
			"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
			"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
			Goto FinishSlide

			"####" G 1 A_FireCustomMissile("SlideAttack", 0, 0, 0, 10)
			"####" A 0 A_Recoil (-3)
			"####" A 0 A_SetPItch(10)
			"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
			"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
			Goto FinishSlide

			"####" F 1 A_FireCustomMissile("SlideAttack", 0, 0, 0, 10)
			"####" A 0 A_Recoil (-2)
			"####" A 0 A_SetPItch(10)
			"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
			"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
			Goto FinishSlide

			"####" G 1 A_FireCustomMissile("SlideAttack", 0, 0, 0, 10)
			"####" A 0 A_Recoil (-1)
			"####" A 0 A_SetPItch(10)
			"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
			"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
			Goto FinishSlide

			"####" F 1 A_FireCustomMissile("SlideAttack", 0, 0, 0, 10)
			"####" A 0 A_Recoil (-1)
			"####" A 0 A_SetPItch(10)
			"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
			"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
			Goto FinishSlide

			"####" G 1 A_FireCustomMissile("SlideAttack", 0, 0, 0, 10)
			"####" A 0 A_Recoil (-2)
			"####" A 0 A_SetPItch(10)
			"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
			"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
			"####" A 0 A_TakeInventory("KickHasHit", 1)
			Goto FinishSlide

		FinishSlide:  //10 tic
			TNT1 A 0 A_Takeinventory("Kicking",1)
			TNT1 A 0 A_GunFlash("SlideKickFlashEnd")
			TNT1 A 0 A_PlaySound("SlideKickStop", 5)
			S1DK H 0 A_JumpIfInventory("IsPaladin",1,3)
			S2DK H 0 A_JumpIfInventory("IsSorcerer",1,2)
			SLDK H 0
			"####" A 0 SetPlayerProperty(0,0,0)
			"####" A 0 A_JumpIfInventory("IsPaladin",1,2)
			"####" A 0 A_Jump(256,5)
			"####" A 0 A_JumpIfInventory("FiredSecondary",1,2)
			"####" A 0 A_Jump(256,3)
			"####" A 0 A_GiveInventory("DoUppercutNow",1)
			"####" A 0 A_SelectWeapon("Berserker_Melee_Attacks")
			"####" HD 2 A_JumpIfInventory("Kicking", 1, "LeftFinishingKick")
			"####" A 0 A_JumpIfInventory("Kicking", 1, "LeftFinishingKick")
			"####" CBA 2 A_JumpIfInventory("Kicking", 1, "LeftFinishingKick")
			"####" A 0 A_Takeinventory("Kicking",1)
			Goto ReadyLoop

		FinishSlideHitwall:
			TNT1 A 0 A_GunFlash("SlideKickFlashEnd")
			S1DK H 0 A_JumpIfInventory("IsPaladin",1,3)
			S2DK H 0 A_JumpIfInventory("IsSorcerer",1,2)
			SLDK H 1
			"####" A 0 A_Stop
			"####" HDCBA 2
			"####" A 0 A_TAkeInventory("KickHasHit", 1)
			"####" A 0 A_Takeinventory("Kicking",1)
			"####" A 0 SetPlayerProperty(0,0,0)
			Goto ReadyLoop

		GrenadeFlash:
			QSHS F 0
			"####" FEDCBA 1
			Stop

		KickFlash: //14 tics
			QSHS A 0 A_JumpIfInventory("IsPaladin", 1, 2)
			QSHS A 0
			"####" FEDCBBB 1
			"####" "#" 0 A_SetCrosshair(41)
			"####" BBBCDEF 1
			Stop

		KickInAirFlash: //19 tics
			QSHS A 0 A_JumpIfInventory("IsPaladin", 1, 2)
			QSHS A 0
			"####" FEDCBBBBB 1
			"####" "#" 0 A_SetCrosshair(41)
			"####" BBBBBBCDEF 1
			Stop

		RightKickFlash:
			QSHS A 0 A_JumpIfInventory("IsPaladin", 1, 2)
			QSHS A 0
			"####" BBBBBBBBBBBCDEF 1
			Stop

		LeftKickFlash: // 11 tics
			QSHS A 0 A_JumpIfInventory("IsPaladin", 1, 2)
			QSHS A 0
			"####" BBBBBBBCDEF 1
			Stop

		SlideKickFlashStart: //27
			TNT1 A 0
			Stop

		SlideKickFlashEnd: //10 tic
			TNT1 A 0
			Stop
	}
}

Actor QSSGAmmo : Ammo
{
	+IGNORESKILL
	Inventory.Icon "QSGSA0"
	Inventory.MaxAmount 4
}