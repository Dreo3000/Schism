Actor Schism_AMLGiver : Schism_BaseWeaponGiver
{
	scale 0.8
	Inventory.PickupSound "ROCKPKUP"
	Inventory.PickupMessage "You got the Advanced Missile Launcher!"
	Inventory.ForbiddenTo Schism_Corvus, Schism_Sorcerer, BaronPlayer, RevenantPlayer
    States
    {
		Spawn:
			LAUN C -1
			Stop

		Pickup:
			TNT1 A 0
			TNT1 A 0 A_JumpIfInventory("Schism_AdvancedMissileLauncher", 1, "GiveAmmo")
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("Schism_CounInvG", 5) >= 2, "DontGive")
			TNT1 A 0 A_GiveInventory("Schism_AdvancedMissileLauncher", 1)
			Goto GiveAmmo

		GiveAmmo:
			TNT1 A 0 A_GiveInventory("AmmoRocket", 2)
			Stop

		DontGive:
			LAUN C 30
			Fail
    }
}

Actor Schism_AMLEmptyGiver : Schism_BaseWeaponGiver
{
	scale 0.8
	Inventory.PickupSound "ROCKPKUP"
	Inventory.PickupMessage "You got the Advanced Missile Launcher!"
	Inventory.ForbiddenTo Schism_Corvus, Schism_Sorcerer
    States
    {
		Spawn:
			LAUN C -1
			Stop

		Pickup:
			TNT1 A 0
			TNT1 A 0 A_JumpIfInventory("Schism_AdvancedMissileLauncher", 1, "DontGive")
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("Schism_CounInvG", 5) >= 2, "DontGive")
			TNT1 A 0 A_GiveInventory("Schism_AdvancedMissileLauncher", 1)
			Stop

		DontGive:
			LAUN C 30
			Fail
    }
}

Actor Schism_AMLMag : Ammo {
    Inventory.Amount 0
    Inventory.MaxAmount 6
    Ammo.BackpackAmount 0
    Ammo.BackpackMaxAmount 6
    Inventory.Icon "LAUNC0"
}

Actor Schism_AdvancedMissileLauncher : Schism_Weapon {
	Weapon.AmmoUse1 1
	Weapon.AmmoUse2 0
	Weapon.AmmoGive2 0
	Weapon.AmmoGive1 0
	Weapon.AmmoType1 "Schism_AMLMag"
	Weapon.AmmoType2 "AmmoRocket"
	Inventory.PickupSound "ROCKPKUP"
	+WEAPON.NOALERT
	+WEAPON.NOAUTOAIM
	+WEAPON.AMMO_OPTIONAL
	+WEAPON.NO_AUTO_SWITCH
	+INVENTORY.RESTRICTABSOLUTELY
	Weapon.SelectionOrder 9500
	Inventory.PickupMessage "You got the Advanced Grenade Launcher (Slot 5)!"
	Inventory.ForbiddenTo Schism_Sorcerer, Schism_Corvus
	Tag "Advanced Missile Launcher"
	States {
		Spawn:
			TNT1 A 2
			TNT1 A 1 A_SpawnItem("Schism_AMLEmptyGiver", 50)
			Stop

		Select:
			TNT1 A 0 A_Raise
			Wait

		Deselect:
			AMPS A 0 A_JumpIfInventory("IsPaladin",1,2)
			AMLS A 0
			"####" FEDCBA 1
			DeselectLoop:
			"####" "#" 0 A_Lower
			Wait

		Ready:
		    AMPS A 0 A_JumpIfInventory("IsPaladin", 1, 2)
		    AMLS A 0
		    "####" "ABCDEF" 1
		    ReadyLoop:
		    TNT1 A 0 A_GunFlash("LightDone", GFF_NOEXTCHANGE)
			AMPG A 0 A_JumpIfInventory("IsPaladin", 1, 2)
			AMLG A 0
			"####" A 0 A_JumpIfInventory("Reloading", 1,"Reload")
			"####" A 0 A_JumpIfInventory("Kicking", 1, "DoKick")
// 			"####" A 0 A_JumpIfInventory("StartDualWield", 1, "DualWield")
			"####" A 1 A_WeaponReady(WRF_ALLOWRELOAD)
			Loop

		ReadyNoAmmo:
			"####" A 0 A_JumpIfInventory("Reloading", 1, "Reload")
			"####" A 0 A_JumpIfInventory("Kicking", 1, "DoKick")
// 			"####" A 0 A_JumpIfInventory("StartDualWield", 1, "DualWield")
			AMPR I 0 A_JumpIfInventory("IsPaladin", 1, 2)
			AMLR I 0
			"####" I 1 A_WeaponReady(WRF_ALLOWRELOAD)
			Loop

		Fire:
	        TNT1 A 0 A_JumpIfNoAmmo("ReadyLoop")
	        TNT1 A 0 A_GunFlash("Flash")
			TNT1 A 0 A_FireCustomMissile("RedFlareSpawn", -5, 0, 0, 0)
			TNT1 A 0 A_FireCustomMissile("Alerter", 0, 0)
			TNT1 A 0 A_FireCustomMissile("GrenadeMissileBreaksGlass", 0, 0, 0, -10)
			AMPF A 0 A_JumpIfInventory("IsPaladin", 1, 2)
		    AMLF A 0
			"####" A 1 BRIGHT A_FireCustomMissile("ShortGrenade", 0, 0, 0, -10) //rocket2
			"####" A 0 A_TakeInventory("Schism_AMLMag", 1)
			"####" A 0 A_Recoil(5)
			"####" A 0 A_PlaySound("Weapons/GrenadeFire", CHAN_5)
			"####" BCD 1 BRIGHT
		    "####" E 1 A_SetPitch(Pitch - 8)
			AMPG A 0 A_JumpIfInventory("IsPaladin", 1, 2)
		    AMLG A 0
			"####" BCD 2 A_SetPitch(2.0 + pitch)
			"####" EF 2 A_SetPitch(1.0 + pitch)
	        "####" A 0
        	"####" A 0 A_Refire
		    Goto ReadyLoop

		Flash:
		    TNT1 A 1 A_Light1
			TNT1 A 1 A_Light1
			TNT1 A 1 A_Light2
		    TNT1 A 1 A_Light1
		    Goto LightDone

		AltFire:
        	AMPG A 0 A_JumpIfInventory("IsPaladin", 1, 2)
		    AMLG A 0
			"####" A 0 A_JumpIfInventory("Schism_AMLMag", 1, 1)
			Goto Reload
			"####" A 0 A_PlaySound("Weapons/GrenadeOpen")
			"####" A 4
			"####" A 0 A_PlaySound("Weapons/GrenadeLoad")
			"####" A 4
			"####" A 0 A_PlaySound("Weapons/GrenadeClose")
			"####" A 8
			//"####" A 0 A_ReFire

		AltHold:
			AMPG A 0 A_JumpIfInventory("IsPaladin",1,2)
        	AMLG A 0
			"####" A 0 A_PlaySound("BEP")
			"####" A 1
			//"####" A 0 A_ReFire
		// Let Fly --------------------------------------------------------------------------
			"####" A 0 A_FireCustomMissile("RedFlareSpawn", -5, 0, 0, 0)
			"####" AAAAAA 0 A_FireCustomMissile("ShotgunParticles", random(-16,16), 0, -1, random(-9,9))
			"####" A 0 A_FireCustomMissile("Alerter", 0, 0)
			"####" A 0 A_FireCustomMissile("GrenadeMissileBreaksGlass", 0, 0, 0, 0)
			"####" A 0 A_JumpIfInventory("IsPaladin", 1, 2)
		    "####" A 0
			"####" A 1 BRIGHT A_FireCustomMissile("GrenadeMissile", 0, 0, 0, 0)
			"####" A 0 A_Recoil(5)
			"####" A 0 A_Takeinventory("Schism_AMLMag", 1)
			"####" A 0 A_SetPitch(-10.0 + pitch)
			"####" A 0 A_PlaySound("Weapons/GrenadeFire", 5)
			"####" BCD 1 BRIGHT
	        "####" E 1 A_SetPitch(-6.0 + pitch)
	        "####" BCD 2 A_SetPitch(2.0 + pitch)
			"####" EF 2
		    "####" A 0
		    "####" A 0 A_ReFire
			Goto ReadyLoop

		Reload:
			AMPG A 0 A_JumpIfInventory("IsPaladin", 1, 2)
			AMLG A 0
			"####" A 0 A_Takeinventory("Reloading", 1)
		    "####" A 0 A_JumpIfInventory("Schism_AMLMag", 6, "ReadyLoop")
        	"####" A 0 A_JumpIfInventory("AmmoRocket", 1, 1)
		    Goto ReadyLoop
		    "####" "#" 0 A_GiveInventory("Reloading2", 1)
			"####" "#" 0 A_GunFlash("FlashReload")
			ReloadLoop:
			"TNT1" "A" 1 A_JumpIfInventory("Kicking", 1, "DoKick")
			"####" "#" 0 A_JumpIfInventory("Reloading2", 1, "ReloadLoop")
			Goto ReadyLoop

		FlashReload:
			"####" A 0 A_PlaySound("Reload")
			"####" A 0 A_SetAngle(-2 + angle)
		    "####" A 0 A_SetPitch(+2 + pitch)
			AMPR A 0 A_JumpIfInventory("IsPaladin", 1, 2)
		    AMLR A 0
		    "####" ABCDDE 1
        	"####" A 0 A_FireCustomMissile("RocketCaseSpawn",-30,0,-4,-4)
		    "####" EFFGG 1
			"####" A 0 A_SetAngle(+2 + angle)
		    "####" A 0 A_SetPitch(-2 + pitch)
			"####" HHIIJJKLM 1
			"####" A 0 A_SetAngle(+1 + angle)
		    "####" MMMNOP 1
			"####" A 0 A_SetAngle(-1 + angle)
			"####" Q 3
			"####" PR 1
			AMPG A 0 A_JumpIfInventory("IsPaladin",1,2)
        	AMLG A 0
			"####" DEF 2
			"####" A 6
			Goto RefillTo6

		RefillTo6:
			"####" "#" 0 A_TakeInventory("AmmoRocket", 1, TIF_NOTAKEINFINITE)
			"####" "#" 0 A_GiveInventory("Schism_AMLMag", 1)
			"####" "#" 0 A_JumpIfInventory("Schism_AMLMag", 6, "FinishReload")
			"####" "#" 0 A_JumpIfInventory("AmmoRocket", 1, "RefillTo6")
			Goto FinishReload

		FinishReload:
			"####" "#" 0 A_TakeInventory("Reloading2", 1)
			AMPG A 0 A_JumpIfInventory("IsPaladin", 1, 2)
			AMLG A 0
			"####" "#" 0 A_ReFire //wtf better to remove it
			"####" "#" 0 A_JumpIfInventory("Kicking", 1, "KickFlash")
			"####" "#" 2100
			Stop

		Steady:
			TNT1 A 1
			Goto ReadyLoop

		DoKick: //14 tic
			TNT1 A 0
			TNT1 A 0 A_JumpIfInventory("Reloading2", 1, 2)
			TNT1 A 0 A_GunFlash("KickFlash")
			TNT1 A 0 A_TakeInventory("Kicking", 1)
			TNT1 A 0 A_TakeInventory("Zoomed", 1)
			TNT1 A 0 A_ZoomFactor(1.0)
			TNT1 A 0 A_TakeInventory("ADSmode", 1)
			TNT1 A 0 A_JumpIf (momZ > 0, "KickInAir")
			TNT1 A 0 A_JumpIf (momZ < 0, "KickInAir")
			TNT1 A 0 A_JumpIf((Abs(VelY) < 1) && (Abs(VelX) < 1), 2)
			TNT1 A 0 A_JumpIfInventory("IsCrouching", 1, "SlideAttack")
			TNT1 A 0 A_PlaySound("KICK")
			TNT1 A 0 SetPlayerProperty(0, 1, 0)
			K1CK A 0 A_JumpIfInventory("IsPaladin", 1, 3)
			K2CK A 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			KICK A 0
			"####" BCD 1
			"####" A 0 A_GiveInventory("Schism_Kick", 1)
			"####" H 3
			"####" IGF 1
			"####" "#" 0 SetPlayerProperty(0, 0, 0)
			"####" EDCBA 1 A_JumpIfInventory("Kicking", 1, "KickRight")
			TNT1 A 0 A_JumpIfInventory("Kicking", 1, "KickRight")
			"####" "#" 0 A_JumpIfInventory("Reloading2", 1, "ReloadLoop")
			Goto ReadyLoop

		KickRight: // 15 tic
			TNT1 A 0 A_JumpIfInventory("Reloading2", 1, 2)
			TNT1 A 0 A_GunFlash("RightKickFlash")
			K1K2 A 0 A_JumpIfInventory("IsPaladin", 1, 3)
			K2K2 A 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			KIK2 A 0
			"####" "#" 0 A_TakeInventory("Kicking", 1)
			"####" ABC 1
			"####" A 0 A_PlaySound("KICK")
			"####" A 0
			"####" A 0 A_SetPitch(pitch-9)
			"####" A 0 A_SetAngle(angle+9)
			"####" A 0 A_GiveInventory("Schism_Kick", 1)
			"####" D 1
			"####" A 0 A_SetPitch(pitch+2)
			"####" A 0 A_SetAngle(angle-2)
			"####" D 1
			"####" A 0 A_SetPitch(pitch+2)
			"####" A 0 A_SetAngle(angle-2)
			"####" E 1
			"####" A 0 A_SetPitch(pitch+1)
			"####" A 0 A_SetAngle(angle-1)
			"####" E 1
			"####" A 0 A_SetPitch(pitch+1)
			"####" A 0 A_SetAngle(angle-1)
			"####" C 1 A_JumpIfInventory("Kicking", 1, "KickInAir")
			"####" A 0 A_SetPitch(pitch+1)
			"####" A 0 A_SetAngle(angle-1)
			"####" B 2 A_JumpIfInventory("Kicking", 1, "KickInAir")
			"####" A 0 A_SetPitch(pitch+1)
			"####" A 0 A_SetAngle(angle-1)
			"####" A 2 A_JumpIfInventory("Kicking", 1, "KickInAir")
			"####" A 0 A_SetPitch(pitch+1)
			"####" A 0 A_SetAngle(angle-1)
			"####" A 2 A_JumpIfInventory("Kicking", 1, "KickInAir")
			"####" A 1 A_JumpIfInventory("Kicking", 1, "KickInAir")
			"####" "#" 0 A_JumpIfInventory("Reloading2", 1, "ReloadLoop")
			Goto ReadyLoop

		KickInAir: // 18 tics
			TNT1 A 0 A_JumpIfInventory("Reloading2", 1, 2)
			TNT1 A 0 A_GunFlash("KickInAirFlash")
			TNT1 A 0 A_TakeInventory("Kicking", 1)
			K1CK J 0 A_JumpIfInventory("IsPaladin", 1, 3)
			K2CK J 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			KICK J 1
			"####" A 0 A_PlaySound("KICK")
			"####" A 0 A_Recoil(-15)
			"####" JKLMN 1
			"####" A 0 A_GiveInventory("Schism_AirKick", 1)
			"####" O 3
			"####" PQ 2
			"####" RS 1
			"####" T 1 A_JumpIfInventory("Kicking", 1, "LeftFinishingKick")
			"####" A 2 A_JumpIfInventory("Kicking", 1, "LeftFinishingKick")
			"####" A 1 A_JumpIfInventory("Kicking", 1, "LeftFinishingKick")
			"####" "#" 0 A_JumpIfInventory("Reloading2", 1, "ReloadLoop")
			Goto ReadyLoop

		LeftFinishingKick: // 11 tics
			TNT1 A 0 A_JumpIfInventory("Reloading2", 1, 2)
			TNT1 A 0 A_GunFlash("LeftKickFlash")
			K1K3 A 0 A_JumpIfInventory("IsPaladin", 1, 3)
			K2K3 A 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			KIK3 A 0
			"####" "#" 0 A_TakeInventory("Kicking", 1)
			"####" A 0 A_Recoil(-10)
			"####" ABC 1
			"####" A 0 A_PlaySound("KICK")
			"####" A 0 A_SetPitch(pitch-9)
			"####" A 0 A_SetAngle(angle-9)
			"####" D 1 A_GiveInventory("Schism_Kick", 1)
			"####" A 0 A_SetPitch(pitch+2)
			"####" A 0 A_SetAngle(angle+3)
			"####" E 1
			"####" A 0 A_SetPitch(pitch+2)
			"####" A 0 A_SetAngle(angle+3)
			"####" F 1 A_GiveInventory("Schism_Kick", 1)
			"####" A 0 A_SetPitch(pitch+1)
			"####" A 0 A_SetAngle(angle+3)
			"####" G 1
			"####" A 0 A_SetPitch(pitch+1)
			"####" A 0 A_SetAngle(angle+2)
			"####" H 1 A_GiveInventory("Schism_Kick", 1)
			"####" A 0 A_SetPitch(pitch+1)
			"####" A 0 A_SetAngle(angle+2)
			"####" I 1
			"####" A 0 A_SetPitch(pitch+1)
			"####" A 0 A_SetAngle(angle+1)
			"####" J 1 A_GiveInventory("Schism_Kick", 1)
			"####" A 0 A_SetPitch(pitch+1)
			"####" A 0 A_SetAngle(angle+1)
			"####" K 1
			"####" "#" 0 A_JumpIfInventory("Reloading2", 1, "ReloadLoop")
			Goto ReadyLoop

		SlideAttack:
			TNT1 A 0 A_JumpIfInventory("Reloading2", 1, 2)
			TNT1 A 0 A_GunFlash("SlideKickFlashStart")
			TNT1 A 0 SetPlayerProperty(0, 1, 0)
			KICK A 0 A_TakeInventory("Kicking", 1)
			TNT1 A 0 A_PlaySound("KICK")
			TNT1 A 0 A_Recoil(-16)
			TNT1 A 0 A_PlaySound("SlideKickStart", CHAN_5)
			S1DK A 0 A_JumpIfInventory("IsPaladin", 1, 3)
			S2DK A 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			SLDK A 1
			"####" ABC 1
			"####" A 0 A_SetPitch(10)
			"####" A 0 A_GiveInventory("Schism_SlideKick", 1)
			"####" E 1
			"####" A 0 A_Recoil(-14)
			"####" A 0 A_SetPitch(10)
			"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
			"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
			Goto FinishSlide
			"####" F 1 A_GiveInventory("Schism_SlideKick", 1)
			"####" A 0 A_Recoil(-12)
			"####" A 0 A_SetPitch(10)
			"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
			"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
			Goto FinishSlide

			"####" G 1 A_GiveInventory("Schism_SlideKick", 1)
			"####" A 0 A_Recoil(-8)
			"####" A 0 A_SetPitch(10)
			"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
			"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
			Goto FinishSlide

			"####" F 1 A_GiveInventory("Schism_SlideKick", 1)
			"####" A 0 A_Recoil(-6)
			"####" A 0 A_SetPitch(10)
			"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
			"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
			Goto FinishSlide

			"####" G 1 A_GiveInventory("Schism_SlideKick", 1)
			"####" A 0 A_Recoil(-4)
			"####" A 0 A_SetPitch(10)
			"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
			"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
			Goto FinishSlide

			"####" F 1 A_GiveInventory("Schism_SlideKick", 1)
			"####" A 0 A_Recoil(-4)
			"####" A 0 A_SetPitch(10)
			"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
			"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
			Goto FinishSlide

			"####" G 1 A_GiveInventory("Schism_SlideKick", 1)
			"####" A 0 A_Recoil(-3)
			"####" A 0 A_SetPitch(10)
			"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
			"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
			Goto FinishSlide

			"####" F 1 A_GiveInventory("Schism_SlideKick", 1)
			"####" A 0 A_Recoil(-3)
			"####" A 0 A_SetPitch(10)
			"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
			"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
			Goto FinishSlide

			"####" G 1 A_GiveInventory("Schism_SlideKick", 1)
			"####" A 0 A_Recoil(-3)
			"####" A 0 A_SetPitch(10)
			"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
			"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
			Goto FinishSlide

			"####" F 1 A_GiveInventory("Schism_SlideKick", 1)
			"####" A 0 A_Recoil(-2)
			"####" A 0 A_SetPitch(10)
			"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
			"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
			Goto FinishSlide

			"####" G 1 A_GiveInventory("Schism_SlideKick", 1)
			"####" A 0 A_Recoil(-1)
			"####" A 0 A_SetPitch(10)
			"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
			"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
			Goto FinishSlide

			"####" F 1 A_GiveInventory("Schism_SlideKick", 1)
			"####" A 0 A_Recoil(-1)
			"####" A 0 A_SetPitch(10)
			"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
			"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
			Goto FinishSlide

			"####" G 1 A_GiveInventory("Schism_SlideKick", 1)
			"####" A 0 A_Recoil(-2)
			"####" A 0 A_SetPitch(10)
			"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
			"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
			"####" A 0 A_TakeInventory("KickHasHit", 1)
			Goto FinishSlide

		FinishSlide:  //10 tic
			TNT1 A 0 A_TakeInventory("Kicking",1)
			TNT1 A 0 A_JumpIfInventory("Reloading2", 1, 2)
			TNT1 A 0 A_GunFlash("SlideKickFlashEnd")
			TNT1 A 0 A_PlaySound("SlideKickStop", CHAN_5)
			S1DK H 0 A_JumpIfInventory("IsPaladin", 1, 3)
			S2DK H 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			SLDK H 0
			"####" A 0 SetPlayerProperty(0, 0, 0)
			"####" A 0 A_JumpIfInventory("IsPaladin", 1, 2)
			"####" A 0 A_Jump(256,5)
			"####" A 0 A_JumpIfInventory("FiredSecondary", 1, 2)
			"####" A 0 A_Jump(256,3)
			"####" A 0 A_GiveInventory("DoUppercutNow", 1)
			"####" A 0 A_SelectWeapon("Berserker_Melee_Attacks")
			"####" HD 2 A_JumpIfInventory("Kicking", 1, "LeftFinishingKick")
			"####" A 0 A_JumpIfInventory("Kicking", 1, "LeftFinishingKick")
			"####" CBA 2 A_JumpIfInventory("Kicking", 1, "LeftFinishingKick")
			"####" A 0 A_Takeinventory("Kicking", 1)
			"####" "#" 0 A_JumpIfInventory("Reloading2", 1, "ReloadLoop")
			Goto ReadyLoop

		FinishSlideHitwall:
			TNT1 A 0 A_JumpIfInventory("Reloading2", 1, 2)
			TNT1 A 0 A_GunFlash("SlideKickFlashEnd")
			S1DK H 0 A_JumpIfInventory("IsPaladin", 1, 3)
			S2DK H 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			SLDK H 0
			"####" A 0 A_Stop
			"####" HDCBA 2
			"####" A 0 A_TAkeInventory("KickHasHit", 1)
			"####" A 0 A_Takeinventory("Kicking", 1)
			"####" A 0 SetPlayerProperty(0, 0, 0)
			"####" "#" 0 A_JumpIfInventory("Reloading2", 1, "ReloadLoop")
			Goto ReadyLoop

		KickFlash: //14 tics
			AMPS A 0 A_JumpIfInventory("IsPaladin", 1, 2)
		    AMLS A 0
		    "####" "FEDCBAAAABCDEF" 1
			Stop

		KickInAirFlash: //19 tics
			AMPS A 0 A_JumpIfInventory("IsPaladin", 1, 2)
		    AMLS A 0
		    "####" "FEDCBAAAAAAAAABCDEF" 1
			Stop

		RightKickFlash: // 15 tics
			AMPS A 0 A_JumpIfInventory("IsPaladin", 1, 2)
		    AMLS A 0
		    "####" "AAAAAAAAAABCDEF" 1
			Stop

		LeftKickFlash: // 11 tics
			AMPS A 0 A_JumpIfInventory("IsPaladin", 1, 2)
		    AMLS A 0
		    "####" "AAAAAABCDEF" 1
			Stop

		SlideKickFlashStart: //27
			AMPS A 0 A_JumpIfInventory("IsPaladin", 1, 2)
		    AMLS A 0
		    "####" "FEDCB" 1
			"####" "A" 22
			Stop

		SlideKickFlashEnd: //10 tic
			AMPS A 0 A_JumpIfInventory("IsPaladin", 1, 2)
		    AMLS A 0
		    "####" "AAAAABCDEF" 1
			Stop
	}
}