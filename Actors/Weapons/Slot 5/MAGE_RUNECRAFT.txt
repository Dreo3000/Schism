ACTOR ShieldModeSelected : Inventory
{inventory.maxamount 1}

ACTOR RuneModeSelected : Inventory
{inventory.maxamount 1}

ACTOR IsCastingShield : Inventory
{inventory.maxamount 1}

ACTOR IsRunecaster : Inventory
{inventory.maxamount 1}

ACTOR ShieldDeathTimer1 : Inventory
{
Inventory.MaxAmount 1001
}

ACTOR UltimateSpellInHand : Inventory
{inventory.maxamount 1}

ACTOR RuneTargetSpawnerCounter : Inventory
{Inventory.MaxAmount 7}

ACTOR RuneTargetHitsCounter : Ammo
{Inventory.MaxAmount 7
Inventory.Icon "RUNEA0"}

ACTOR RuneTargetSectionCounter : Inventory
{Inventory.MaxAmount 8}

ACTOR RuneTargetFail : Inventory
{Inventory.MaxAmount 1}

ACTOR RuneTargetSuccess : Inventory
{Inventory.MaxAmount 1}

ACTOR KillSpecificRuneTargets : Inventory
{Inventory.MaxAmount 2}

ACTOR RuneAmmo : Ammo
{
inventory.maxamount 50
Inventory.Icon "RUNEA0"
}

ACTOR HeptCounter1 : Inventory
{inventory.maxamount 1000}

ACTOR HeptCounter2 : Inventory
{inventory.maxamount 1000}

ACTOR HeptFinish : Inventory
{inventory.maxamount 1}

ACTOR Runecraft : Schism_Weapon
{
	Height 20
	Weapon.SelectionOrder 1300
	Weapon.AmmoUse 0
	Weapon.AmmoGive 10
	Weapon.AmmoType "RuneAmmo"
	Weapon.AmmoType2 "RuneTargetHitsCounter"
    Inventory.PickupSound "BFGREADY"
	Weapon.KickBack 200
     +WEAPON.NOAUTOAIM
	 +WEAPON.CHEATNOTWEAPON
	 +WEAPON.NOALERT
	Inventory.PickupMessage "You become the Custodian of the legendary Tome of Power!"
	Inventory.ForbiddenTo Schism_Ranger, Schism_Warrior, Schism_Corvus

	States
	{
	Steady:
	TNT1 A 1
	Goto Ready

	HeptGotShot1:
		RNBR B 0 A_JumpIfInventory("HeptCounter2",7,2)	//Rune 1
		"####" "#" 0 A_Jump(256, 2)
		RNB1 G 0 A_Jump(256, "ReadyTransfer")			//Rune 1-7
		RNBR B 0 A_JumpIfInventory("HeptCounter2",6,2)	//Rune 1
		"####" "#" 0 A_Jump(256, 2)
		RNB1 F 0 A_Jump(256, "ReadyTransfer")			//Rune 1-6
		RNBR B 0 A_JumpIfInventory("HeptCounter2",5,2)	//Rune 1
		"####" "#" 0 A_Jump(256, 2)
		RNB1 E 0 A_Jump(256, "ReadyTransfer")			//Rune 1-5
		RNBR B 0 A_JumpIfInventory("HeptCounter2",4,2)	//Rune 1
		"####" "#" 0 A_Jump(256, 2)
		RNB1 D 0 A_Jump(256, "ReadyTransfer")			//Rune 1-4
		RNBR B 0 A_JumpIfInventory("HeptCounter2",3,2)	//Rune 1
		"####" "#" 0 A_Jump(256, 2)
		RNB1 C 0 A_Jump(256, "ReadyTransfer")			//Rune 1-3
		RNBR B 0 A_JumpIfInventory("HeptCounter2",2,2)	//Rune 1
		"####" "#" 0 A_Jump(256, 2)
		RNB1 B 0 A_Jump(256, "ReadyTransfer")			//Rune 1-2
		RNBR B 0 A_JumpIfInventory("HeptCounter2",1,2)	//Rune 1
		"####" "#" 0 A_Jump(256, 2)
		RNB1 A 0 A_Jump(256, "ReadyTransfer")			//Rune 1-1
		"####" "#" 0
		Goto ReadyTransfer

	HeptGotShot2:
		RNBR B 0 A_JumpIfInventory("HeptCounter2",7,2)	//Rune 2
		"####" "#" 0 A_Jump(256, 2)
		BOOK B 0 A_Jump(256, "ReadyTransfer")			//Rune 2-7
		RNBR B 0 A_JumpIfInventory("HeptCounter2",6,2)	//Rune 2
		"####" "#" 0 A_Jump(256, 2)
		BOOK B 0 A_Jump(256, "ReadyTransfer")			//Rune 2-6
		RNBR B 0 A_JumpIfInventory("HeptCounter2",5,2)	//Rune 2
		"####" "#" 0 A_Jump(256, 2)
		BOOK B 0 A_Jump(256, "ReadyTransfer")			//Rune 2-5
		RNBR B 0 A_JumpIfInventory("HeptCounter2",4,2)	//Rune 2
		"####" "#" 0 A_Jump(256, 2)
		BOOK B 0 A_Jump(256, "ReadyTransfer")			//Rune 2-4
		RNBR B 0 A_JumpIfInventory("HeptCounter2",3,2)	//Rune 2
		"####" "#" 0 A_Jump(256, 2)
		BOOK B 0 A_Jump(256, "ReadyTransfer")			//Rune 2-3
		RNBR B 0 A_JumpIfInventory("HeptCounter2",2,2)	//Rune 2
		"####" "#" 0 A_Jump(256, 2)
		BOOK B 0 A_Jump(256, "ReadyTransfer")			//Rune 2-2
		RNBR B 0 A_JumpIfInventory("HeptCounter2",1,2)	//Rune 2
		"####" "#" 0 A_Jump(256, 2)
		BOOK B 0 A_Jump(256, "ReadyTransfer")			//Rune 2-1
		"####" "#" 0
		Goto ReadyTransfer

	HeptGotShot3:
		RNBR B 0 A_JumpIfInventory("HeptCounter2",7,2)	//Rune 3
		"####" "#" 0 A_Jump(256, 2)
		BOOK B 0 A_Jump(256, "ReadyTransfer")			//Rune 3-7
		RNBR B 0 A_JumpIfInventory("HeptCounter2",6,2)	//Rune 3
		"####" "#" 0 A_Jump(256, 2)
		BOOK B 0 A_Jump(256, "ReadyTransfer")			//Rune 3-6
		RNBR B 0 A_JumpIfInventory("HeptCounter2",5,2)	//Rune 3
		"####" "#" 0 A_Jump(256, 2)
		BOOK B 0 A_Jump(256, "ReadyTransfer")			//Rune 3-5
		RNBR B 0 A_JumpIfInventory("HeptCounter2",4,2)	//Rune 3
		"####" "#" 0 A_Jump(256, 2)
		BOOK B 0 A_Jump(256, "ReadyTransfer")			//Rune 3-4
		RNBR B 0 A_JumpIfInventory("HeptCounter2",3,2)	//Rune 3
		"####" "#" 0 A_Jump(256, 2)
		BOOK B 0 A_Jump(256, "ReadyTransfer")			//Rune 3-3
		RNBR B 0 A_JumpIfInventory("HeptCounter2",2,2)	//Rune 3
		"####" "#" 0 A_Jump(256, 2)
		BOOK B 0 A_Jump(256, "ReadyTransfer")			//Rune 3-2
		RNBR B 0 A_JumpIfInventory("HeptCounter2",1,2)	//Rune 3
		"####" "#" 0 A_Jump(256, 2)
		BOOK B 0 A_Jump(256, "ReadyTransfer")			//Rune 3-1
		"####" "#" 0
		Goto ReadyTransfer

	HeptGotShot4:
		RNBR B 0 A_JumpIfInventory("HeptCounter2",7,2)	//Rune 4
		"####" "#" 0 A_Jump(256, 2)
		BOOK B 0 A_Jump(256, "ReadyTransfer")			//Rune 4-7
		RNBR B 0 A_JumpIfInventory("HeptCounter2",6,2)	//Rune 4
		"####" "#" 0 A_Jump(256, 2)
		BOOK B 0 A_Jump(256, "ReadyTransfer")			//Rune 4-6
		RNBR B 0 A_JumpIfInventory("HeptCounter2",5,2)	//Rune 4
		"####" "#" 0 A_Jump(256, 2)
		BOOK B 0 A_Jump(256, "ReadyTransfer")			//Rune 4-5
		RNBR B 0 A_JumpIfInventory("HeptCounter2",4,2)	//Rune 4
		"####" "#" 0 A_Jump(256, 2)
		BOOK B 0 A_Jump(256, "ReadyTransfer")			//Rune 4-4
		RNBR B 0 A_JumpIfInventory("HeptCounter2",3,2)	//Rune 4
		"####" "#" 0 A_Jump(256, 2)
		BOOK B 0 A_Jump(256, "ReadyTransfer")			//Rune 4-3
		RNBR B 0 A_JumpIfInventory("HeptCounter2",2,2)	//Rune 4
		"####" "#" 0 A_Jump(256, 2)
		BOOK B 0 A_Jump(256, "ReadyTransfer")			//Rune 4-2
		RNBR B 0 A_JumpIfInventory("HeptCounter2",1,2)	//Rune 4
		"####" "#" 0 A_Jump(256, 2)
		BOOK B 0 A_Jump(256, "ReadyTransfer")			//Rune 4-1
		"####" "#" 0
		Goto ReadyTransfer

	HeptGotShot5:
		RNBR B 0 A_JumpIfInventory("HeptCounter2",7,2)	//Rune 5
		"####" "#" 0 A_Jump(256, 2)
		BOOK B 0 A_Jump(256, "ReadyTransfer")			//Rune 5-7
		RNBR B 0 A_JumpIfInventory("HeptCounter2",6,2)	//Rune 5
		"####" "#" 0 A_Jump(256, 2)
		BOOK B 0 A_Jump(256, "ReadyTransfer")			//Rune 5-6
		RNBR B 0 A_JumpIfInventory("HeptCounter2",5,2)	//Rune 5
		"####" "#" 0 A_Jump(256, 2)
		BOOK B 0 A_Jump(256, "ReadyTransfer")			//Rune 5-5
		RNBR B 0 A_JumpIfInventory("HeptCounter2",4,2)	//Rune 5
		"####" "#" 0 A_Jump(256, 2)
		BOOK B 0 A_Jump(256, "ReadyTransfer")			//Rune 5-4
		RNBR B 0 A_JumpIfInventory("HeptCounter2",3,2)	//Rune 5
		"####" "#" 0 A_Jump(256, 2)
		BOOK B 0 A_Jump(256, "ReadyTransfer")			//Rune 5-3
		RNBR B 0 A_JumpIfInventory("HeptCounter2",2,2)	//Rune 5
		"####" "#" 0 A_Jump(256, 2)
		BOOK B 0 A_Jump(256, "ReadyTransfer")			//Rune 5-2
		RNBR B 0 A_JumpIfInventory("HeptCounter2",1,2)	//Rune 5
		"####" "#" 0 A_Jump(256, 2)
		BOOK B 0 A_Jump(256, "ReadyTransfer")			//Rune 5-1
		"####" "#" 0
		Goto ReadyTransfer

	HeptGotShot6:
		RNBR B 0 A_JumpIfInventory("HeptCounter2",7,2)	//Rune 6
		"####" "#" 0 A_Jump(256, 2)
		BOOK B 0 A_Jump(256, "ReadyTransfer")			//Rune 6-7
		RNBR B 0 A_JumpIfInventory("HeptCounter2",6,2)	//Rune 6
		"####" "#" 0 A_Jump(256, 2)
		BOOK B 0 A_Jump(256, "ReadyTransfer")			//Rune 6-6
		RNBR B 0 A_JumpIfInventory("HeptCounter2",5,2)	//Rune 6
		"####" "#" 0 A_Jump(256, 2)
		BOOK B 0 A_Jump(256, "ReadyTransfer")			//Rune 6-5
		RNBR B 0 A_JumpIfInventory("HeptCounter2",4,2)	//Rune 6
		"####" "#" 0 A_Jump(256, 2)
		BOOK B 0 A_Jump(256, "ReadyTransfer")			//Rune 6-4
		RNBR B 0 A_JumpIfInventory("HeptCounter2",3,2)	//Rune 6
		"####" "#" 0 A_Jump(256, 2)
		BOOK B 0 A_Jump(256, "ReadyTransfer")			//Rune 6-3
		RNBR B 0 A_JumpIfInventory("HeptCounter2",2,2)	//Rune 6
		"####" "#" 0 A_Jump(256, 2)
		BOOK B 0 A_Jump(256, "ReadyTransfer")			//Rune 6-2
		RNBR B 0 A_JumpIfInventory("HeptCounter2",1,2)	//Rune 6
		"####" "#" 0 A_Jump(256, 2)
		BOOK B 0 A_Jump(256, "ReadyTransfer")			//Rune 6-1
		"####" "#" 0
		Goto ReadyTransfer

	HeptGotShot7:
		RNBR B 0 A_JumpIfInventory("HeptCounter2",7,2)	//Rune 7
		"####" "#" 0 A_Jump(256, 2)
		BOOK B 0 A_Jump(256, "ReadyTransfer")			//Rune 7-7
		RNBR B 0 A_JumpIfInventory("HeptCounter2",6,2)	//Rune 7
		"####" "#" 0 A_Jump(256, 2)
		BOOK B 0 A_Jump(256, "ReadyTransfer")			//Rune 7-6
		RNBR B 0 A_JumpIfInventory("HeptCounter2",5,2)	//Rune 7
		"####" "#" 0 A_Jump(256, 2)
		BOOK B 0 A_Jump(256, "ReadyTransfer")			//Rune 7-5
		RNBR B 0 A_JumpIfInventory("HeptCounter2",4,2)	//Rune 7
		"####" "#" 0 A_Jump(256, 2)
		BOOK B 0 A_Jump(256, "ReadyTransfer")			//Rune 7-4
		RNBR B 0 A_JumpIfInventory("HeptCounter2",3,2)	//Rune 7
		"####" "#" 0 A_Jump(256, 2)
		BOOK B 0 A_Jump(256, "ReadyTransfer")			//Rune 7-3
		RNBR B 0 A_JumpIfInventory("HeptCounter2",2,2)	//Rune 7
		"####" "#" 0 A_Jump(256, 2)
		BOOK B 0 A_Jump(256, "ReadyTransfer")			//Rune 7-2
		RNBR B 0 A_JumpIfInventory("HeptCounter2",1,2)	//Rune 7
		"####" "#" 0 A_Jump(256, 2)
		BOOK B 0 A_Jump(256, "ReadyTransfer")			//Rune 7-1
		"####" "#" 0
		Goto ReadyTransfer


	ReadyTransfer:
		"####" "#" 0
		Goto Ready+11

	Ready:
		// This is placed here for now, should be moved if there is a replaying
		// idle animation for weapons
	ReadyLoop:
	    TNT1 A 0
		TNT1 A 0 A_PlaySound("Runecraft/Draw", 7, 1)
        RNBA ABCDEFG 2
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
		RNBR A 0
        "####" "#" 0 A_JumpIfInventory("Kicking",1,"DoKick")
        "####" "#" 0 A_JumpIfInventory("Taunting",1,"Taunt")
		"####" "#" 0 A_JumpIfInventory("Salute1", 1, "Salute")
		"####" "#" 0 A_JumpIfInventory("Salute2", 1, "Salute")
		"####" "#" 0 A_TakeInventory("DetonateProx", 100)
		"####" "#" 0 A_JumpIfInventory("Reloading",1,"Reload")
		"####" "#" 0 A_JumpIfInventory("Quickspell",1,"Quickspell")
		"####" "#" 0 A_TakeInventory("IsCastingShield", 1)
		"####" "#" 1 A_WeaponReady
		TNT1 A 0 A_JumpIfInventory("HeptCounter1",7,"HeptGotShot7")
		TNT1 A 0 A_JumpIfInventory("HeptCounter1",6,"HeptGotShot6")
		TNT1 A 0 A_JumpIfInventory("HeptCounter1",5,"HeptGotShot5")
		TNT1 A 0 A_JumpIfInventory("HeptCounter1",4,"HeptGotShot4")
		TNT1 A 0 A_JumpIfInventory("HeptCounter1",3,"HeptGotShot3")
		TNT1 A 0 A_JumpIfInventory("HeptCounter1",2,"HeptGotShot2")
		TNT1 A 0 A_JumpIfInventory("HeptCounter1",1,"HeptGotShot1")
		TNT1 A 0 A_JumpIfInventory("UltimateSpellInHand", 1, "UltimateSpellReady")
	//	TNT1 A 0 A_StopSound(CHAN_WEAPON)
		Goto Ready+10

	Deselect:
	    TNT1 A 0 A_StopSound(CHAN_WEAPON)
		TNT1 A 0 A_TakeInventory("FistsSelected",1)
		TNT1 A 0 A_TakeInventory("IsRunecaster",1)
		TNT1 A 0 A_TakeInventory("RuneModeSelected", 1)
		RNBA GFEDCBA 2

		DeselectLower:
		TNT1 A 1 A_Lower
		wait

	SpellFlash:
	TNT1 A 28
	stop

	Select:
		TNT1 A 0 A_GiveInventory("IsRunecaster",1)

		TNT1 A 0 A_GiveInventory("FistsSelected",1)
		TNT1 A 0 A_TakeInventory("ShieldModeSelected", 1)
		TNT1 A 0 A_GiveInventory("RuneModeSelected", 1)

		TNT1 A 0 A_Takeinventory("HasBarrel",1)

		TNT1 A 0 A_Raise
		wait
    Spawn:
        MANA H 1
        Loop

    Fire:
		TNT1 A 0 A_JumpIfInventory("UltimateSpellInHand",1,"CastBlackSun")
		TNT1 A 0 A_JumpIfInventory("HeptFinish",1,2)
		TNT1 A 0 A_Jump(256,3)
		TNT1 A 0 A_TakeInventory("HeptCounter1")
		TNT1 A 0 A_TakeInventory("HeptCounter2")

		TNT1 A 0 A_JumpIfInventory("RuneAmmo",1,2)
        Goto Ready+10
		TNT1 A 0
 		TNT1 A 0 A_JumpIfInventory("IsCastingShield", 1, "CastShield") //it means if player casting shield at the moment, then goto casting shield immidietly, kinda refire
        RNBC ABC 1
		RNBC DEF 2 BRIGHT
		TNT1 A 0 A_JumpIfInventory ("RuneModeSelected", 1, "CastRune")
		TNT1 A 0 A_JumpIfInventory ("ShieldModeSelected", 1, "CastShield")
		goto Ready+10

	CastRune:
		TNT1 A 0 A_PlaySound("Sorcerer/SpellCast", CHAN_VOICE)
		TNT1 A 0 A_PlaySound("Runecraft/ProjectileCast", 1)
		RNBC G 4 BRIGHT A_FireCustomMissile("RuneProxProj", 0, 0, 0, 0)
		TNT1 A 0 A_TakeInventory("RuneAmmo",1)
		TNT1 A 0 A_PlaySound("RUNECAST")
		RNBC DCBA 1
		goto Ready+10

	CastBlackSun:
		TNT1 A 0
        "####" "#" 0 A_TakeInventory("UltimateSpellInHand",1)
        "####" "#" 0 A_TakeInventory("Kicking",1)
		"####" "#" 0 A_TakeInventory("Reloading",1)
		"####" "#" 0 A_TakeInventory("Quickspell",1)

		/*
		TNT1 A 0 A_PlaySound("Sorcerer/SpellCast", CHAN_VOICE)
		TNT1 A 0 A_PlaySound("Runecraft/ProjectileCast", 1)
		RNBC G 4 BRIGHT A_FireCustomMissile("BlackSunBall", 0, 0, 0, 0)
		TNT1 A 0 A_TakeInventory("RuneAmmo",1)
		TNT1 A 0 A_PlaySound("RUNECAST")
		RNBC DCBA 1
		goto Ready+10
		*/

            TNT1 A 0 A_PlaySound("Runecraft/ShieldCast", 1)
			TNT1 A 0 A_FireCustomMissile ("GrapesOfWrathSpawner", 0, 0, 0, 32)
			//TNT1 A 0 A_SpawnItemEx  ("GrapesOfWrathSpawner", 0, 96, 48, 0, 0, 0, -270, SXF_SETTARGET)
			//TNT1 A 0 A_FireCustomMissile("WarriorFamiliar", 0, 0, 0, 0)  //("ShieldSpawnerPlacedCover", 0, 96, 0, 0, 0, 0, -270, 32)
			RNBC G 5 BRIGHT
			RNBC FED 2 BRIGHT
			RNBC CBA 3
			RNBR A 15
		goto ready+10


	CastShield:
		TNT1 A 0 A_GiveInventory("IsCastingShield",1) //it let us refire without wierd animation of first cast
		TNT1 A 0 A_PlaySound("ForceBarrier/Loop", CHAN_WEAPON, 6, 1)
		TNT1 A 0 //A_PlaySound("Runecraft/SwordCast", 1)
		RNBC G 1 BRIGHT
		TNT1 A 0 A_SpawnItemEx("ShieldSpawner", 0, 96, 0, 0, 0, 0, -270, 32) //A_SpawnItemEx ("ScimitarFamiliar", 0, 96, 0, 0, 0, 0, -270, 32)
		TNT1 A 0 A_JumpIfInventory ("FiredSecondary", 1, "CastShieldPermanent")
		TNT1 A 0 A_Refire
		goto ready

		CastShieldPermanent:
		//	TNT1 A 0 A_PlaySound("RUNESHLD")
            TNT1 A 0 A_PlaySound("Runecraft/ShieldCast", 1)
			TNT1 A 0 A_SpawnItemEx ("ShieldSpawnerPlacedCover", 0, 96, 0, 0, 0, 0, -270, 32)
			//TNT1 A 0 A_FireCustomMissile("WarriorFamiliar", 0, 0, 0, 0)  //("ShieldSpawnerPlacedCover", 0, 96, 0, 0, 0, 0, -270, 32)
			TNT1 A 0 A_TakeInventory("RuneAmmo",1)
			RNBC G 5 BRIGHT
			RNBC FED 2 BRIGHT
			RNBC CBA 3
			RNBR A 15
			TNT1 A 0 A_TakeInventory("IsCastingShield",1)
		Goto Ready

	AltFire:
		TNT1 A 0 A_JumpIfInventory("RuneAmmo",1,2)
        Goto Ready+10
        RNBC ABC 1
		RNBC DEF 1 BRIGHT
		TNT1 A 0 A_JumpIfInventory ("IsCastingShield", 1, "CastShieldPermanent")
		TNT1 A 0 A_JumpIfInventory ("ShieldModeSelected", 1, "CastHeptagram")
		TNT1 A 0 A_PlaySound("Sorcerer/SpellCastLarge", CHAN_VOICE)
		TNT1 A 0 A_PlaySound("Runecraft/ProjectileDetonate", 1)
		RNBC G 2 BRIGHT A_GiveInventory("DetonateProx", 1)
		RNBC G 1 A_TakeInventory("DetonateProx", 99)
		RNBC DCBA 2
		goto Ready +10

		CastHeptagram:
		//	TNT1 A 0 A_PlaySound("RUNESHLD")
            TNT1 A 0 A_PlaySound("Runecraft/ShieldCast", 1)
			TNT1 A 0 A_SpawnItemEx ("RuneTargetBase", 0, 96, 48, 0, 0, 0, -270, 32)
			//TNT1 A 0 A_FireCustomMissile("WarriorFamiliar", 0, 0, 0, 0)  //("ShieldSpawnerPlacedCover", 0, 96, 0, 0, 0, 0, -270, 32)
			TNT1 A 0 A_TakeInventory("RuneAmmo",1)
			RNBC G 5 BRIGHT
			RNBC FED 2 BRIGHT
			RNBC CBA 3
			RNBR A 15
		goto ready+10


	Reload:
			TNT1 A 0
			TNT1 A 0 A_JumpIfInventory("RuneModeSelected", 1, "SwitchToShield")
			//TNT1 A 0 A_JumpIfInventory("ShieldModeSelected", 1, "SwitchToRune")
			TNT1 A 0 A_TakeInventory("Reloading", 1)
		goto SwitchToRune

		SwitchToShield:
			RNBR ABCDE 1
			TNT1 A 0 A_TakeInventory("RuneModeSelected", 1)
			TNT1 A 0 A_GiveInventory("ShieldModeSelected", 1)
			TNT1 A 0 A_Print("Shield Mode")
			TNT1 A 0 A_TakeInventory("Reloading", 1)
			Goto Ready+10

		SwitchToRune:
			RNBR EDCBA 1
			TNT1 A 0 A_TakeInventory("ShieldModeSelected",1)
			TNT1 A 0 A_GiveInventory("RuneModeSelected",1)
			TNT1 A 0 A_Print("Rune Mode")
			TNT1 A 0 A_TakeInventory("Reloading", 1)
			Goto Ready+10

	//PRAISE THE 4PAGE FOR THIS ANIMATION, SUCKERS! (c) Lothar.
	UltimateSpellReady:
		RNH1 ABCDEFGHIJKLMNOPQRSTUVWXYZ 1 BRIGHT A_WeaponReady
		RNH2 ABCDEFGHIJKLMNOPQRSTUVWXYZ 1 BRIGHT A_WeaponReady
		RNH3 ABCDEFGHIJKLMNOPQRSTUVWXYZ 1 BRIGHT A_WeaponReady
		RNH4 ABCDEFGHIJKLMNOPQRSTUVWXYZ 1 BRIGHT A_WeaponReady
		RNH5 ABCDEFGHIJKLMNOPQRSTUVWXYZ 1 BRIGHT A_WeaponReady
		RNH6 ABCDEFGHIJKLMNOPQRSTUVWXYZ 1 BRIGHT A_WeaponReady
		RNH7 ABCDEFGHIJKLMNOPQRSTUVWXYZ 1 BRIGHT A_WeaponReady
		RNH8 ABCDEFGHIJKLMNOPQRS 1 BRIGHT A_WeaponReady
		Loop

    Taunt:
        //TNT1 A 0 A_Takeinventory("Zoomed",1)
        //TNT1 A 0 A_ZoomFactor(1.0)
		//TNT1 A 0 BRIGHT A_FireCustomMissile("Taunter", 0, 0, -1, 0)
		//TNT1 A 0 BRIGHT A_FireCustomMissile("Taunter", -9, 0, -1, 0)
		//TNT1 A 0 BRIGHT A_FireCustomMissile("Taunter", 9, 0, -1, 0)
        //CONE G 2
		//BLIN D 1 A_FireBullets(0.1, 0.1, -1, 9, "Blink")
		//MLNG E 2 A_FireCustomMissile("BlinkMissile", 0, 1, 8)

		//Goto Ready

		TNT1 A 0 A_TakeInventory("Taunting",1)
		BlinkageHold:
		//In order to actually Teleport you have to press the taunt button again.  If you want an instant teleport just get rid of this section.
        MLNG ABCD 4 BRIGHT A_JumpIfInventory("Taunting",1,"BlinkageHold2")
		TNT1 A 0 A_SpawnItemEx("BlinkTargetMissile",36*Cos(pitch),0,30-36*Sin(pitch),100*Cos(pitch),0,-100*Sin(pitch))//This is a preview of where your teleport path is. It's not perfect, but it helps, I think.
		//Make sure if you change the speeds of the teleport function below, change the speeds on the preview spawn function above.
		//If you change the amount of frames you're teleporting (right now it's 8) change how many frames the "BlinkTargetMissile" stays alive in that actor's spawn state.
		MLNG E 0 A_Jump(256,"BlinkageHold")
		BlinkageHold2:
		MLNG E 1 //A_FireCustomMissile("BlinkTargetMissile")  Don't need to use a projectile at all
		//Change the speeds (the 100s) to change how far you teleport, OR move the second ChangeVelocity to happen sooner.
		TNT1 A 0 A_ChangeVelocity(100*Cos(pitch),0,-100*Sin(pitch),CVF_REPLACE|CVF_RELATIVE)
		MLNG FG 2 BRIGHT A_ZoomFactor(0.70, ZOOM_INSTANT)
		MLNG HI 2 BRIGHT A_ZoomFactor(1.00)
		MLNG H 0 A_ChangeVelocity(0,0,0,CVF_REPLACE)
		//I might recommend creating an explosion here at the landing since it does take a moment to reorient and get ready to start shooting
		//Just something to think about.

		//MLNG E 1 A_FireBullets(0,0,1,0,"BlinkTargetPuff",FBF_NORANDOMPUFFZ,512)
		//TNT1 A 0 A_ReFire("BlinkageHold") Don't really need this at the moment
		TNT1 A 0 A_Takeinventory("Taunting",1)
	//	TNT1 A 0 A_Teleport("Teleportium","BlinkTarget",None,TF_TELEFRAG,0,0)
		//TNT1 A 0 A_Teleport("Teleportium","BlinkTargetFloor",None,TF_TELEFRAG,0,0)
		Goto Ready

	Teleportium:
		MLNG I 4 BRIGHT
		TNT1 A 0 A_StopSound(7)
		TNT1 A 0 A_PlaySound("DSBOSPIT", 2)
//		PUND CCBA 1
		Goto Ready


	}
}

Actor RuneProxProj
{

  Radius 2
  Height 2
  Damage 30
  Damagetype desintegrate
  Speed 10
  Health 10
 // Gravity 0.3
  Scale 0.1
  RenderStyle Add
  Obituary "%o learn power of %k's Arcane Runes..."
  Projectile
  +NoGravity
  +ThruGhost
  +THRUSPECIES
  +NoTarget
  +DONTFALL
  -SlidesOnWalls
  +FORCERADIUSDMG
  // +FRIENDLY
  Species "Rune"

   States
  {
  Spawn:
	TNT1 A 0 A_ChangeFlag("Friendly",1)
  	PRXD A 1 BRIGHT A_SpawnItem("RedFlareMedium")
	PRXD A 1 A_JumpIfInTargetInventory("DetonateProx", 1, "Detonate")
	PRXD A 0 A_JumpIfCloser(16, "Disappear")
	//PROX A 0 BRIGHT A_Look
    Loop
  Planted:
  	TNT1 A 0 A_SpawnItem("RedFlareMedium")
    PROX A 1 A_PlaySound("Weapons/ProxHit")
    Stop
  XDeath:
  	PROX C 0 Bright A_PlaySound("RUNEXP2")
	PRXD A 2 Bright //A_Explode(15, 64, 1)
	TNT1 A 0 A_SpawnItemEx ("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
	stop

  Death:
    PROX C 0 Bright A_Stop
	PROX A 0 BRIGHT A_Look

	See:
	TNT1 A 0 A_ChangeFlag("Friendly",0)
	PRXD A 1 BRIGHT A_SpawnItem("RedFlareMedium")
	PRXD A 0 A_JumpIfInTargetInventory("DetonateProx", 1, "Detonate")
	PRXD A 0 A_Chase("melee","",CHF_DONTMOVE)
	PRXD A 0 BRIGHT A_JumpIfCloser(160, "Melee")
	loop

  Melee:
	TNT1 A 0 A_JumpIfInTargetInventory("IsRunecaster",1,"Spawn")
	PRXD A 0 A_JumpIfCloser(16, "Disappear")
	PRXD A 1 BRIGHT A_SpawnItem("RedFlareMedium")
	goto Detonate

	Detonate:
	TNT1 A 0 A_ChangeFlag("Friendly",0)
	PROX C 0 Bright A_PlaySound("RUNEXP")
 TNT1 AAAAA 0 A_CustomMissile ("BluePlasmaParticle", 0, 0, random (0, 360), 2, random (0, 360))
	TNT1 A 0 A_SpawnItemEx ("RuneExplosion",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION,0)
	stop

	Disappear:
	PRXD AA 1 A_SpawnItem("RedFlareMedium")
	TNT1 AAAAAAAA 0 A_CustomMissile ("BluePlasmaParticle", 0, 0, random (0, 360), 2, random (0, 360))
	stop

  }
}

Actor RuneInTarget : RuneProxProj

{
	+NOCLIP
	+ISMONSTER
	States
	{
	Spawn:
	TNT1 A 0 A_JumpIfInventory("Mana1",5,2)
	TNT1 A 0 A_Jump(256,2)
	TNT1 A 0 A_ChangeFlag("NOCLIP",FALSE)
	TNT1 A 0 A_GiveInventory("Mana1",1)
	TNT1 A 0 A_ChangeFlag("Friendly",1)
  	PRXD A 1 BRIGHT A_SpawnItem("RedFlareMedium")
	PRXD A 1 A_JumpIfInventory("RuneTargetFail",1,"Detonate",AAPTR_MASTER)
	PRXD A 0 A_JumpIfInTargetInventory("DetonateProx", 1, "Detonate")
	PRXD A 0 //A_JumpIfInTargetInventory("RuneTargetFail", 1, "Detonate") //you better not experience that, just believe me...
	PRXD A 0 A_JumpIfInventory("RuneTargetSuccess",1,"Disappear",AAPTR_MASTER)
	PRXD A 0 A_JumpIfCloser(16, "Disappear")
	//PROX A 0 BRIGHT A_Look
    Loop
	}

}


ACTOR RuneSlash : SwordSlash
{
Damage 3
Damagetype Desintegrate
Speed 70 //speed of SwordSlash-like projectiles determines how far they will fly ('cause )
	SeeSound "none"
	DeathSound "none"
	+BOUNCEONWALLS
	+BOUNCEONFLOORS
	+BOUNCEONCEILINGS
	+RIPPER

States
	{
	Spawn:
		TNT1 A 1
		TNT1 A 1 BRIGHT
		Stop
	XDeath:
		//TNT1 A 0 A_PlaySound("SLMETA", 1) - silent, bitch!
		TNT1 A 1
		Stop
	Death:
		//TNT1 A 0 A_SpawnItemEx("SwordPuff",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
		TNT1 A 1
		Stop
	Crash:
		//TNT1 A 0 A_PlaySound("SLMETA", 1) - silent, bitch!
		//TNT1 A 0 A_SpawnItemEx("SwordPuff",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
		TNT1 A 1
		Stop
		}
}

Actor RuneExplosion
{
  +FORCERADIUSDMG
  +NoGravity
  +NOBLOCKMAP
+NOGRAVITY

States
{
Spawn:
    PROX C 0 Bright A_NoGravity
    PROX C 0 Bright A_SetTranslucent(0.5, 1)
	TNT1 A 0 A_SpawnItemEx ("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
    //PRXD A 2 Bright A_Explode(10, 176, 1)
	TNT1 AAAAAAAAAAAAAAAAAAAA 0 A_CustomMissile ("RuneSlash", 0, 0, random (0, 360), 2, random (0, 360))
	TNT1 A 0 A_SpawnItemEx ("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
	PRXD A 2 Bright
	TNT1 AAAAAAAAAAAAAAAAAAAA 0 A_CustomMissile ("RuneSlash", 0, 0, random (0, 360), 2, random (0, 360))
	TNT1 A 0 A_SpawnItemEx ("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
	PRXD A 2 Bright
	TNT1 AAAAAAAAAAAAAAAAAAAA 0 A_CustomMissile ("RuneSlash", 0, 0, random (0, 360), 2, random (0, 360))
	TNT1 A 0 A_SpawnItemEx ("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
	PRXD A 2 Bright
	TNT1 AAAAAAAAAAAAAAAAAAAA 0 A_CustomMissile ("RuneSlash", 0, 0, random (0, 360), 2, random (0, 360))
	TNT1 A 0 A_SpawnItemEx ("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
	PRXD A 2 Bright
	TNT1 AAAAAAAAAAAAAAAAAAAA 0 A_CustomMissile ("RuneSlash", 0, 0, random (0, 360), 2, random (0, 360))
	TNT1 A 0 A_SpawnItemEx ("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
	PRXD A 2 Bright
	TNT1 AAAAAAAAAAAAAAAAAAAA 0 A_CustomMissile ("RuneSlash", 0, 0, random (0, 360), 2, random (0, 360))
	TNT1 A 0 A_SpawnItemEx ("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
	PRXD A 2 Bright
	TNT1 AAAAAAAAAAAAAAAAAAAA 0 A_CustomMissile ("RuneSlash", 0, 0, random (0, 360), 2, random (0, 360))
	TNT1 A 0 A_SpawnItemEx ("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
	PRXD A 2 Bright
	TNT1 AAAAAAAAAAAAAAAAAAAA 0 A_CustomMissile ("RuneSlash", 0, 0, random (0, 360), 2, random (0, 360))
	TNT1 A 0 A_SpawnItemEx ("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
	PRXD A 2 Bright
	TNT1 AAAAAAAAAAAAAAAAAAAA 0 A_CustomMissile ("RuneSlash", 0, 0, random (0, 360), 2, random (0, 360))
	TNT1 A 0 A_SpawnItemEx ("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
	PRXD A 2 Bright
	TNT1 AAAAAAAAAAAAAAAAAAAA 0 A_CustomMissile ("RuneSlash", 0, 0, random (0, 360), 2, random (0, 360))
	TNT1 A 0 A_SpawnItemEx ("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
	PRXD A 2 Bright
	TNT1 AAAAAAAAAAAAAAAAAAAA 0 A_CustomMissile ("RuneSlash", 0, 0, random (0, 360), 2, random (0, 360))
	TNT1 A 0 A_SpawnItemEx ("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
	PRXD A 2 Bright
	TNT1 AAAAAAAAAAAAAAAAAAAA 0 A_CustomMissile ("RuneSlash", 0, 0, random (0, 360), 2, random (0, 360))
	TNT1 A 0 A_SpawnItemEx ("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
	PRXD A 2 Bright
	TNT1 AAAAAAAAAAAAAAAAAAAA 0 A_CustomMissile ("RuneSlash", 0, 0, random (0, 360), 2, random (0, 360))
	TNT1 A 0 A_SpawnItemEx ("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
	PRXD A 2 Bright
	TNT1 AAAAAAAAAAAAAAAAAAAA 0 A_CustomMissile ("RuneSlash", 0, 0, random (0, 360), 2, random (0, 360))
	TNT1 A 0 A_SpawnItemEx ("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
	PRXD A 2 Bright
	TNT1 AAAAAAAAAAAAAAAAAAAA 0 A_CustomMissile ("RuneSlash", 0, 0, random (0, 360), 2, random (0, 360))
	TNT1 A 0 A_SpawnItemEx ("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
	PRXD A 2 Bright
	TNT1 AAAAAAAAAAAAAAAAAAAA 0 A_CustomMissile ("RuneSlash", 0, 0, random (0, 360), 2, random (0, 360))
	TNT1 A 0 A_SpawnItemEx ("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
	PRXD A 2 Bright
	TNT1 AAAAAAAAAAAAAAAAAAAA 0 A_CustomMissile ("RuneSlash", 0, 0, random (0, 360), 2, random (0, 360))
	TNT1 A 0 A_SpawnItemEx ("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
	PRXD A 2 Bright
	TNT1 AAAAAAAAAAAAAAAAAAAA 0 A_CustomMissile ("RuneSlash", 0, 0, random (0, 360), 2, random (0, 360))
	TNT1 A 0 A_SpawnItemEx ("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
	PRXD A 2 Bright
	TNT1 AAAAAAAAAAAAAAAAAAAA 0 A_CustomMissile ("RuneSlash", 0, 0, random (0, 360), 2, random (0, 360))
	TNT1 A 0 A_SpawnItemEx ("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
	PRXD A 2 Bright
	TNT1 AAAAAAAAAAAAAAAAAAAA 0 A_CustomMissile ("RuneSlash", 0, 0, random (0, 360), 2, random (0, 360))
	TNT1 A 0 A_SpawnItemEx ("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
	PRXD A 2 Bright
	TNT1 AAAAAAAAAAAAAAAAAAAA 0 A_CustomMissile ("RuneSlash", 0, 0, random (0, 360), 2, random (0, 360))
	TNT1 A 0 A_SpawnItemEx ("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
	PRXD A 2 Bright
	TNT1 AAAAAAAAAAAAAAAAAAAA 0 A_CustomMissile ("RuneSlash", 0, 0, random (0, 360), 2, random (0, 360))
	TNT1 A 0 A_SpawnItemEx ("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
	PRXD A 2 Bright
	TNT1 AAAAAAAAAAAAAAAAAAAA 0 A_CustomMissile ("RuneSlash", 0, 0, random (0, 360), 2, random (0, 360))
	TNT1 A 0 A_SpawnItemEx ("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
	PRXD A 2 Bright
	TNT1 AAAAAAAAAAAAAAAAAAAA 0 A_CustomMissile ("RuneSlash", 0, 0, random (0, 360), 2, random (0, 360))
	TNT1 A 0 A_SpawnItemEx ("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
	PRXD A 2 Bright
	TNT1 AAAAAAAAAAAAAAAAAAAA 0 A_CustomMissile ("RuneSlash", 0, 0, random (0, 360), 2, random (0, 360))
	TNT1 A 0 A_SpawnItemEx ("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
	PRXD A 2 Bright
	TNT1 AAAAAAAAAAAAAAAAAAAA 0 A_CustomMissile ("RuneSlash", 0, 0, random (0, 360), 2, random (0, 360))
	TNT1 A 0 A_SpawnItemEx ("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
	PRXD A 2 Bright
	TNT1 AAAAAAAAAAAAAAAAAAAA 0 A_CustomMissile ("RuneSlash", 0, 0, random (0, 360), 2, random (0, 360))
	TNT1 A 0 A_SpawnItemEx ("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
	PRXD A 2 Bright
	stop
}
}

Actor Planted : Inventory { }

Actor DetonateProx : Inventory {
Inventory.MaxAmount 1}

Actor DetonateNow : Inventory {
Inventory.MaxAmount 1}

Actor IsAlive : Inventory { }

/*=================================================
=============RUNE SHIELD ACTORS=====================
==================================================*/

actor ShieldPart
{
  Radius 9
  Height 9
  Scale 0.5
  RenderStyle None
  Alpha 0.25
  +SHOOTABLE
  +INVULNERABLE
  +NOGRAVITY
  +NOTELEPORT
  +NODAMAGE
  +NOBLOOD
  +DONTRIP
  +NOBLOODDECALS
  +FLOORCLIP
  //+REFLECTIVE
  +SOLID
  +FRIENDLY
  +REFLECTIVE
  //+SHIELDREFLECT
  Species "Rune"
  //+GHOST	//Give projectiles that you wish to pass through the shield THRUGHOST flag
  States
  {
  Spawn:
    HEXA A 2 bright
    stop
  Death:
    TNT1 A 2
    stop
  }
}

actor ShieldPartVisual
{
  Radius 8
  Height 8
  Scale 0.5
  RenderStyle Add	//Fuzzy looks great in software mode
  Alpha 0.25
  +NOINTERACTION
  +CLIENTSIDEONLY
  +FLOORCLIP
  States
  {
  Spawn:
    HEXA A 2 bright
    stop
  Death:
    TNT1 A 2
    stop
  }
}

actor ShieldSpawner
{
  Radius 1
  Height 1
  +NOGRAVITY
  +NOINTERACTION
  States
  {
  Spawn:
	TNT1 A 0
    TNT1 A 1
    TNT1 A 0 A_SpawnItemEx ("ShieldSpawner4up", 0, 0, 0, 0, 0, 0, 0, 32)
    TNT1 A 0 A_SpawnItemEx ("ShieldSpawner5up", 24, 0, 0, 0, 0, 0, 0, 32)
    TNT1 A 0 A_SpawnItemEx ("ShieldSpawner5up", -24, 0, 0, 0, 0, 0, 0, 32)
    TNT1 A 0 A_SpawnItemEx ("ShieldSpawner4up", 48, 0, 0, 0, 0, 0, 0, 32)
    TNT1 A 0 A_SpawnItemEx ("ShieldSpawner4up", -48, 0, 0, 0, 0, 0, 0, 32)
    TNT1 A 0 A_SpawnItemEx ("ShieldSpawner3up", 72, 0, 0, 0, 0, 0, 0, 32)
    TNT1 A 0 A_SpawnItemEx ("ShieldSpawner3up", -72, 0, 0, 0, 0, 0, 0, 32)
    //TNT1 A 0 A_SpawnItemEx ("ShieldSpawner2up", 96, 0, 0, 0, 0, 0, 0, 32)
    //TNT1 A 0 A_SpawnItemEx ("ShieldSpawner2up", -96, 0, 0, 0, 0, 0, 0, 32)
    	stop
  }
}

actor ShieldSpawner2
{
  Radius 1
  Height 1
  +NOGRAVITY
  +NOINTERACTION
  States
  {
  Spawn:
	TNT1 A 0
    TNT1 A 1
    TNT1 A 0 A_SpawnItemEx ("RuneTargetSpawner", 0, 0, 0, 0, 0, 0, 0, 32)
    	stop
  }
}

/*=================================================
=============HEPTAGRAM ACTORS=====================
==================================================*/

ACTOR RuneTargetCounter : Inventory
{ Inventory.MaxAmount 7}

ACTOR HitTargetCounter : Inventory
{ Inventory.MaxAmount 7}

ACTOR HitTargetCounter2 : Inventory
{ Inventory.MaxAmount 7}

ACTOR FirstRuneToken : Inventory
{ Inventory.MaxAmount 1}

ACTOR RuneSpellSelector : Inventory
{ Inventory.MaxAmount 50}

ACTOR RunePatternSelector : Inventory
{ Inventory.MaxAmount 4}

actor RuneTarget
{
MASS 1000
  Radius 5
  Height 10
  Scale 0.2
  RenderStyle add
  Alpha 0.3
  health 300
  damagefactor "Desintegrate", 20.0
  +ISMONSTER
  +SHOOTABLE
  +NOGRAVITY
  +NOTELEPORT
  +NOBLOOD
  +DONTRIP
  +NOBLOODDECALS


  //+FLOORCLIP
  //+REFLECTIVE
  +FRIENDLY
  //+GHOST	//Give projectiles that you wish to pass through the shield THRUGHOST flag
  States
  {
  Spawn:
	TNT1 A 0
	TNT1 A 0 A_GiveInventory("FirstRuneToken",1,AAPTR_MASTER)
	TNT1 A 0 A_GiveInventory("RuneTargetSpawnerCounter",1,AAPTR_MASTER) //

	Stay:
    PRXD A 2 BRIGHT A_JumpIfInventory("RuneTargetFail",1,"Death2",AAPTR_MASTER)
	loop

	Death:
	TNT1 A 0 A_TakeInventory("FirstRuneToken",1,0,AAPTR_MASTER)
    TNT1 A 0 A_GiveInventory("RuneTargetHitsCounter",1,AAPTR_MASTER)
    stop
	Death2:
	TNT1 A 0 A_TakeInventory("FirstRuneToken",1,0,AAPTR_MASTER)
	TNT1 A 10
	TNT1 A 0 A_TakeInventory("RuneTargetFail",1,0,AAPTR_MASTER)
	TNT1 A 0 A_TakeInventory("KillSpecificRuneTargets",1,0,AAPTR_MASTER)
	stop
  }
}

//Below are the specific rune targets with numbers due it's points on star
//if you shot one of them, it supposed to kill all another specific targets

Actor SpecificRuneTarget : RuneTarget
{
	+ISMONSTER
	+DONTFALL
	+DONTCORPSE
	scale 0.15
	Radius 5
	Height 10
	States
	{
	Spawn:
	TNT1 A 0 //THIS ACTOR DON'T GIVE RuneTargetSpawnerCounter !
	//This all is so that the first rune can immediately be replaced and have the same number of tokens it had before
	TNT1 A 0 A_JumpIfInventory("HitTargetCounter",1,2,AAPTR_MASTER)
	TNT1 A 0 A_Jump(256,2)
	TNT1 A 0 A_GiveInventory("RuneTargetCounter",1)
	TNT1 A 0 A_JumpIfInventory("HitTargetCounter",2,2,AAPTR_MASTER)
	TNT1 A 0 A_Jump(256,2)
	TNT1 A 0 A_GiveInventory("RuneTargetCounter",1)
	TNT1 A 0 A_JumpIfInventory("HitTargetCounter",3,2,AAPTR_MASTER)
	TNT1 A 0 A_Jump(256,2)
	TNT1 A 0 A_GiveInventory("RuneTargetCounter",1)
	TNT1 A 0 A_JumpIfInventory("HitTargetCounter",4,2,AAPTR_MASTER)
	TNT1 A 0 A_Jump(256,2)
	TNT1 A 0 A_GiveInventory("RuneTargetCounter",1)
	TNT1 A 0 A_JumpIfInventory("HitTargetCounter",5,2,AAPTR_MASTER)
	TNT1 A 0 A_Jump(256,2)
	TNT1 A 0 A_GiveInventory("RuneTargetCounter",1)
	TNT1 A 0 A_JumpIfInventory("HitTargetCounter",6,2,AAPTR_MASTER)
	TNT1 A 0 A_Jump(256,2)
	TNT1 A 0 A_GiveInventory("RuneTargetCounter",1)
	TNT1 A 0 A_JumpIfInventory("HitTargetCounter",7,2,AAPTR_MASTER)
	TNT1 A 0 A_Jump(256,2)
	TNT1 A 0 A_GiveInventory("RuneTargetCounter",1)
	goto stay

	Stay:
    PRXD A 2 BRIGHT A_JumpIfInventory("RuneTargetFail",1,"Death2",AAPTR_MASTER)
	TNT1 A 0 A_JumpIfInventory("KillSpecificRuneTargets",2,"Death2",AAPTR_MASTER)	//Changed this number to 2 for checking the second rune
	loop

	Death:
	TNT1 A 0 A_JumpIfInventory("KillSpecificRuneTargets",1,2,AAPTR_MASTER)	//This is to prevent the second rune selected from giving the counter of the first rune
	TNT1 A 0 A_GiveInventory("HitTargetCounter",1,AAPTR_MASTER)
	TNT1 A 0 A_GiveInventory("HitTargetCounter2",1,AAPTR_MASTER)
	TNT1 A 0 A_TakeInventory("RuneTargetCounter",1)	//This counts down and is what basically signifies which number rune this is.
	TNT1 A 0 A_JumpIfInventory("RuneTargetCounter",1,"Death")	//Essentially a while loop.  While there is "RuneTargetCounter" > 1, it will loop the above stuff.

	TNT1 A 0 A_GiveInventory("RuneTargetHitsCounter",1,AAPTR_MASTER)	//This is a max inventory of 7
    TNT1 A 0 A_GiveInventory("KillSpecificRuneTargets",1,AAPTR_MASTER)
	stop

	Death2:
	TNT1 A 10 //Don't really need these anymore, since all the inventory things will be taken away when the RuneTargetBase dies.
	TNT1 A 0 //A_TakeInventory("RuneTargetFail",1,0,AAPTR_MASTER)
	TNT1 A 0 //A_TakeInventory("KillSpecificRuneTargets",1,0,AAPTR_MASTER)
	stop
	}
}

//////////////////
// RUNE TARGETS	//
// PLACEMENT	//
//		1		//	Rune targets take places on corners of heptagram - star with 7 rays
//	  7	  2		//	I count points in clockwise direction
//	 6     3	// 	According to this numbers right sequence for making
//	   5 4		//	heptagram is 1-4-7-3-6-2-5-1 if you start from top point and go in clockwise direction
//////////////////	However, different recipes will start from different point, and also use not all 7 point but sometimes 5.

// 1 = Sun 2 = Venus 3 = Mercury 4 = Moon 5 = Saturn 6 = Jupiter 7 = Mars

/////////////////
// 2 3 4 5 6 7 // magical square with all base recipes from point 1.
// 3 5 7 3 4 6 //
// 4 7 3 6 2 5 //
// 5 2 6 3 7 4 //
// 6 4 2 7 5 3 //
// 7 6 5 4 3 2 //
/////////////////





//Decorative heptagram lines actors
ACTOR HeptagramLine
{
Renderstyle ADD
Alpha 0.75
Radius 2
Scale 0.5 //because of high res 128x128 heptagram sprite
Height 16
	+ISMONSTER
    +NOGRAVITY
    +NOTELEPORT
    +NOBLOOD
    +GHOST
    }

ACTOR HeptagramLine1-4 : HeptagramLine
{States
    {
    Spawn:
    Stay:
    HP14 A 2 BRIGHT A_JumpIfInventory("RuneTargetFail",1,"Death",AAPTR_MASTER)
    loop

    Death:
    HP14 A 4 A_Fadeout(0.2)
    loop
    }
}

ACTOR HeptagramLine1-5 : HeptagramLine
{States
    {
    Spawn:
    Stay:
    HP15 A 2 BRIGHT A_JumpIfInventory("RuneTargetFail",1,"Death",AAPTR_MASTER)
    loop

    Death:
    HP15 A 4 A_Fadeout(0.2)
    loop
    }
}

ACTOR HeptagramLine2-5 : HeptagramLine
{States
    {
    Spawn:
    Stay:
    HP25 A 2 BRIGHT A_JumpIfInventory("RuneTargetFail",1,"Death",AAPTR_MASTER)
    loop

    Death:
    HP25 A 4 A_Fadeout(0.2)
    loop
    }
}

ACTOR HeptagramLine2-6 : HeptagramLine
{States
    {
    Spawn:
    Stay:
    HP26 A 2 BRIGHT A_JumpIfInventory("RuneTargetFail",1,"Death",AAPTR_MASTER)
    loop

    Death:
    HP26 A 4 A_Fadeout(0.2)
    loop
    }
}

ACTOR HeptagramLine3-6 : HeptagramLine
{States
    {
    Spawn:
    Stay:
    HP36 A 2 BRIGHT A_JumpIfInventory("RuneTargetFail",1,"Death",AAPTR_MASTER)
    loop

    Death:
    HP36 A 4 A_Fadeout(0.2)
    loop
    }
}

ACTOR HeptagramLine3-7 : HeptagramLine
{States
    {
    Spawn:
    Stay:
    HP37 A 2 BRIGHT A_JumpIfInventory("RuneTargetFail",1,"Death",AAPTR_MASTER)
    loop

    Death:
    HP37 A 4 A_Fadeout(0.2)
    loop
    }
}

ACTOR HeptagramLine4-7 : HeptagramLine
{States
    {
    Spawn:
    Stay:
    HP47 A 2 BRIGHT A_JumpIfInventory("RuneTargetFail",1,"Death",AAPTR_MASTER)
    loop

    Death:
    HP47 A 4 A_Fadeout(0.2)
    loop
    }
}

//Decorative heptagram lines actors
ACTOR HeptagramLine1-3 : HeptagramLine
{States
    {
    Spawn:
    Stay:
    HP13 A 2 BRIGHT A_JumpIfInventory("RuneTargetFail",1,"Death",AAPTR_MASTER)
    loop

    Death:
    HP13 A 4 A_Fadeout(0.2)
    loop
    }
}

ACTOR HeptagramLine1-6 : HeptagramLine
{States
    {
    Spawn:
    Stay:
    HP16 A 2 BRIGHT A_JumpIfInventory("RuneTargetFail",1,"Death",AAPTR_MASTER)
    loop

    Death:
    HP16 A 4 A_Fadeout(0.2)
    loop
    }
}

ACTOR HeptagramLine2-4 : HeptagramLine
{States
    {
    Spawn:
    Stay:
    HP24 A 2 BRIGHT A_JumpIfInventory("RuneTargetFail",1,"Death",AAPTR_MASTER)
    loop

    Death:
    HP24 A 4 A_Fadeout(0.2)
    loop
    }
}

ACTOR HeptagramLine2-7 : HeptagramLine
{States
    {
    Spawn:
    Stay:
    HP27 A 2 BRIGHT A_JumpIfInventory("RuneTargetFail",1,"Death",AAPTR_MASTER)
    loop

    Death:
    HP27 A 4 A_Fadeout(0.2)
    loop
    }
}

ACTOR HeptagramLine3-5 : HeptagramLine
{States
    {
    Spawn:
    Stay:
    HP35 A 2 BRIGHT A_JumpIfInventory("RuneTargetFail",1,"Death",AAPTR_MASTER)
    loop

    Death:
    HP35 A 4 A_Fadeout(0.2)
    loop
    }
}

ACTOR HeptagramLine4-6 : HeptagramLine
{States
    {
    Spawn:
    Stay:
    HP46 A 2 BRIGHT A_JumpIfInventory("RuneTargetFail",1,"Death",AAPTR_MASTER)
    loop

    Death:
    HP46 A 4 A_Fadeout(0.2)
    loop
    }
}

ACTOR HeptagramLine5-7 : HeptagramLine
{States
    {
    Spawn:
    Stay:
    HP57 A 2 BRIGHT A_JumpIfInventory("RuneTargetFail",1,"Death",AAPTR_MASTER)
    loop

    Death:
    HP57 A 4 A_Fadeout(0.2)
    loop
    }
}

actor ShieldSpawner5up
{
  Radius 1
  Height 1
  +NOGRAVITY
  +NOINTERACTION
  States
  {
  Spawn:
    TNT1 A 0
    TNT1 A 1
    TNT1 A 0 A_SpawnItemEx ("ShieldPart", 0, 0, 0, 0, 0, 0, 0, 32)
    TNT1 A 0 A_SpawnItemEx ("ShieldPart", 0, 0, 16, 0, 0, 0, 0, 32)
    TNT1 A 0 A_SpawnItemEx ("ShieldPart", 0, 0, 32, 0, 0, 0, 0, 32)
    TNT1 A 0 A_SpawnItemEx ("ShieldPart", 0, 0, 48, 0, 0, 0, 0, 32)
    TNT1 A 0 A_SpawnItemEx ("ShieldPart", 0, 0, 64, 0, 0, 0, 0, 32)
    //TNT1 A 0 A_SpawnItemEx ("ShieldPartVisual", 0, 0, 0, 0, 0, 0, 0, 32)
    TNT1 A 0 A_SpawnItemEx ("ShieldPartVisual", 0, 0, 16, 0, 0, 0, 0, 32)
    TNT1 A 0 A_SpawnItemEx ("ShieldPartVisual", 0, 0, 32, 0, 0, 0, 0, 32)
    TNT1 A 0 A_SpawnItemEx ("ShieldPartVisual", 0, 0, 48, 0, 0, 0, 0, 32)
    TNT1 A 0 A_SpawnItemEx ("ShieldPartVisual", 0, 0, 64, 0, 0, 0, 0, 32)
    stop
  }
}

actor ShieldSpawner4up
{
  Radius 1
  Height 1
  +NOGRAVITY
  +NOINTERACTION
  States
  {
  Spawn:
    TNT1 A 0
    TNT1 A 1
    TNT1 A 0 A_SpawnItemEx ("ShieldPart", 0, 0, 8, 0, 0, 0, 0, 32)
    TNT1 A 0 A_SpawnItemEx ("ShieldPart", 0, 0, 24, 0, 0, 0, 0, 32)
    TNT1 A 0 A_SpawnItemEx ("ShieldPart", 0, 0, 40, 0, 0, 0, 0, 32)
    TNT1 A 0 A_SpawnItemEx ("ShieldPart", 0, 0, 56, 0, 0, 0, 0, 32)
    //TNT1 A 0 A_SpawnItemEx ("ShieldPartVisual", 0, 0, 8, 0, 0, 0, 0, 32)
    TNT1 A 0 A_SpawnItemEx ("ShieldPartVisual", 0, 0, 24, 0, 0, 0, 0, 32)
    TNT1 A 0 A_SpawnItemEx ("ShieldPartVisual", 0, 0, 40, 0, 0, 0, 0, 32)
    TNT1 A 0 A_SpawnItemEx ("ShieldPartVisual", 0, 0, 56, 0, 0, 0, 0, 32)
    stop
  }
}

actor ShieldSpawner3up
{
  Radius 1
  Height 1
  +NOGRAVITY
  +NOINTERACTION
  States
  {
  Spawn:
    TNT1 A 0
    TNT1 A 1
    TNT1 A 0 A_SpawnItemEx ("ShieldPart", 0, 0, 16, 0, 0, 0, 0, 32)
    TNT1 A 0 A_SpawnItemEx ("ShieldPart", 0, 0, 32, 0, 0, 0, 0, 32)
    TNT1 A 0 A_SpawnItemEx ("ShieldPart", 0, 0, 48, 0, 0, 0, 0, 32)
    //TNT1 A 0 A_SpawnItemEx ("ShieldPartVisual", 0, 0, 16, 0, 0, 0, 0, 32)
    TNT1 A 0 A_SpawnItemEx ("ShieldPartVisual", 0, 0, 32, 0, 0, 0, 0, 32)
    TNT1 A 0 A_SpawnItemEx ("ShieldPartVisual", 0, 0, 48, 0, 0, 0, 0, 32)
    stop
  }
}


actor ShieldSpawner2up
{
  Radius 1
  Height 1
  +NOGRAVITY
  +NOINTERACTION
  States
  {
  Spawn:
    TNT1 A 0
    TNT1 A 1
    TNT1 A 0 A_SpawnItemEx ("ShieldPart", 0, 0, 24, 0, 0, 0, 0, 32)
    TNT1 A 0 A_SpawnItemEx ("ShieldPart", 0, 0, 40, 0, 0, 0, 0, 32)
    //TNT1 A 0 A_SpawnItemEx ("ShieldPartVisual", 0, 0, 24, 0, 0, 0, 0, 32)
    TNT1 A 0 A_SpawnItemEx ("ShieldPartVisual", 0, 0, 40, 0, 0, 0, 0, 32)
    stop
  }
}

actor ShieldHit
{
  Radius 1
  Height 1
  Scale 0.5
  Renderstyle Add
  +NOGRAVITY
  +NOINTERACTION
  States
  {
  Spawn:
    FHIT A 0 bright
    FHIT A 1 bright A_Stop
    FHIT A 0 bright A_PlaySound ("ForceBarrier/Hit")
    FHIT BCDEFGH 1 bright
    stop
  }
}

actor ShieldSpawnerPlacedCover
{
  Radius 60
  Height 50
  +NOGRAVITY
  +NOINTERACTION
  +SHOOTABLE
  +NOGRAVITY
  +NOTELEPORT
  +NODAMAGE
  +DONTRIP
  +NOBLOODDECALS
  +FLOORCLIP
  +Solid
  +FRIENDLY
  Damagetype "BFGShield"
  BloodType "ShieldHit"
  SeeSound "SHLDLP"
  DeathSound "SHLDSTT"
  //+REFLECTIVE
  States
  {
  Spawn:
    TNT1 A 0
    TNT1 A 1
	TNT1 A 0 A_PlaySound("ForceBarrier/Loop", 6,1,1)
    TNT1 A 0 A_SpawnItemEx ("ShieldSpawner4up", 0, 0, 0, 0, 0, 0, 0, 32)
    TNT1 A 0 A_SpawnItemEx ("ShieldSpawner5up", 24, 0, 0, 0, 0, 0, 0, 32)
    TNT1 A 0 A_SpawnItemEx ("ShieldSpawner5up", -24, 0, 0, 0, 0, 0, 0, 32)
    TNT1 A 0 A_SpawnItemEx ("ShieldSpawner4up", 48, 0, 0, 0, 0, 0, 0, 32)
    TNT1 A 0 A_SpawnItemEx ("ShieldSpawner4up", -48, 0, 0, 0, 0, 0, 0, 32)
    TNT1 A 0 A_SpawnItemEx ("ShieldSpawner3up", 72, 0, 0, 0, 0, 0, 0, 32)
    TNT1 A 0 A_SpawnItemEx ("ShieldSpawner3up", -72, 0, 0, 0, 0, 0, 0, 32)
   //TNT1 A 0 A_SpawnItemEx ("ShieldSpawner2up", 96, 0, 0, 0, 0, 0, 0, 32)
    //TNT1 A 0 A_SpawnItemEx ("ShieldSpawner2up", -96, 0, 0, 0, 0, 0, 0, 32)
	TNT1 A 0 A_GiveInventory("ShieldDeathTimer1", 1)
	TNT1 A 0 A_JumpIfInventory("ShieldDeathTimer1", 1000, "Death")
	Loop
    Death:
	TNT1 AAAAAAAAA 1 A_SpawnItemEx ("ShieldSpawner4up", 0, 0, 0, 0, 0, 0, 0, 32)
    TNT1 A 2
	TNT1 AAAAAAA 1 A_SpawnItemEx ("ShieldSpawner4up", 0, 0, 0, 0, 0, 0, 0, 32)
	TNT1 A 4
	TNT1 AAAAA 1 A_SpawnItemEx ("ShieldSpawner4up", 0, 0, 0, 0, 0, 0, 0, 32)
	TNT1 A 6
	TNT1 AAA 1 A_SpawnItemEx ("ShieldSpawner4up", 0, 0, 0, 0, 0, 0, 0, 32)
	TNT1 A 8
	TNT1 A 1 A_SpawnItemEx ("ShieldSpawner4up", 0, 0, 0, 0, 0, 0, 0, 32)
	TNT1 A 0 A_StopSound(6)
	TNT1 A 0 A_PlaySound("SHLDSTT")
	TNT1 AAA 0
	Stop
  }
}


ACTOR BlinkTargetMissile
{
renderstyle Shaded
StencilColor Red
Alpha 0.9
Speed 100
Gravity 1
Radius 12
Height 12
scale 0.5
Damage 0
mass 100
//Translation "80:127=192:207"
+RIPPER
+NOBLOCKMONST
+SOLID
+ISMONSTER
+CANPASS
+SLIDESONWALLS
States
{
Spawn:
PLA1 J 8 BRIGHT //PLA1
Death:
//BLNK B 2 BRIGHT
BLNK B 0 BRIGHT A_PlaySound("Portalhit")
		TNT1 A 0 A_ChangeVelocity(0,0,0,CVF_REPLACE)
		TNT1 A 0 A_SpawnItemEx("BlinkTarget",-5,0,0,0,0,0,0)
		TNT1 A 0 //A_SpawnItemEx("BlinkTargetFloor",-5,0,-CallACS("SectorFloorZ"),0,0,0,0)
		TNT1 A 0 //A_Warp(AAPTR_TARGET,0,0,0,0,WARPF_MOVEPTR)
//BLNK B 10 BRIGHT
Stop
}
}

/*
ACTOR BlinkTargetMissile
{
height 2
radius 1
speed 100
scale 1.0

+NOBLOCKMAP
+NOTRIGGER
+NOGRAVITY
+ALWAYSPUFF
+PUFFONACTORS
-BLOODSPLATTER
+BLOODLESSIMPACT

+FORCEXYBILLBOARD

States
	{
	Spawn:
		TNT1 AAAA 1

	Death:
		TNT1 A 0 A_SpawnItemEx("BlinkTarget",25,0,0,0,0,0,0)
		TNT1 A 0 A_SpawnItemEx("BlinkTargetFloor",25,0,-CallACS("SectorFloorZ"),0,0,0,0)
		Stop
	}
}

*/

Actor BlinkTarget : SpecialSpot
{
//+NOBLOCKMAP
+NOGRAVITY
+NOTRIGGER
+FORCEXYBILLBOARD
renderstyle add
scale 1.0
height 64
radius 32
alpha 0.5

States
	{
	Spawn:
		BLNK B 4 BRIGHT A_FadeOut(0.2)  //LIGHT("DHBlinkGlow")
		loop
	}
}

ACTOR BlinkTargetFloor : SpecialSpot
{
//+NOBLOCKMAP
+NOGRAVITY
+NOTRIGGER
+FORCEXYBILLBOARD
renderstyle add
scale 1.0
height 64
radius 32
alpha 0.4

States
	{
	Spawn:
		BLNK B 4 BRIGHT A_FadeOut(0.2)//LIGHT ("DHBlinkGlow")
		Stop
	}
}







ACTOR SpectralON : CustomInventory
{
	States
	{
	Pickup:
		TNT1 A 0 A_ChangeFlag ("SPECTRAL", 1)
		Stop
	}
}

ACTOR SpectralOFF : CustomInventory
{
	States
	{
	Pickup:
		TNT1 A 0 A_ChangeFlag ("SPECTRAL", 0)
		Stop
	}
}

ACTOR ShootSparkles : CustomInventory
{
	States
	{
	Pickup:
		TNT1 A 0 A_JumpIf(CallACS("Get Offset", 0), "Neutral")
		TNT1 AAAA 0 A_SpawnItemEx("TeleSparks", frandom(-16, 16), 0, frandom(16, 32), cos(CallACS("Get Offset", 2) + 180) * 6.4, 0,
		sin(CallACS("Get Offset", 2) + 180) * 6.4, (CallACS("Get Offset", 1)), SXF_TRANSFERTRANSLATION)
		Stop
	Neutral:
		TNT1 AAAA 0 A_SpawnItemEx("TeleSparks", frandom(-16, 16), frandom(-16, 16), frandom(16, 32), 3.2, 0, 0, frandom(0, 360), SXF_TRANSFERTRANSLATION)
		Stop
	}
}



ACTOR ShootSparkles2 : CustomInventory
{
	States
	{
	Pickup:
		TNT1 A 0 A_JumpIf(CallACS("Get Offset", 0), "Neutral")
		TNT1 AAAAAAAAAAAAAAAA 0 A_SpawnItemEx("TeleSparks", frandom(-8, 8), 0, frandom(20, 28), cos(CallACS("Get Offset", 2)) * 12.8, 0,
		sin(CallACS("Get Offset", 2)) * 12.8, (CallACS("Get Offset", 1)), SXF_TRANSFERTRANSLATION)
		Stop
	Neutral:
		TNT1 AAAAAAAAAAAAAAAA 0 A_SpawnItemEx("TeleSparks", frandom(-16, 16), frandom(-16, 16), frandom(16, 32), 9.6, 0, 0, frandom(0, 360), SXF_TRANSFERTRANSLATION)
		Stop
	}
}



ACTOR ShootSparkles3 : CustomInventory
{
	States
	{
	Pickup:
		TNT1 A 0 A_SpawnItemEx("TeleSparkFog", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERTRANSLATION)
		Stop
	}
}

ACTOR TeleSparks
{
	+NOBLOCKMAP
	+NOGRAVITY
	+NOTELEPORT
	Radius 4
	Height 6
	RenderStyle Add
	States
	{
	Spawn:
		TFOG A 0 NoDelay A_ScaleVelocity(frandom(0.7, 1.0))
		TFOG A 0 A_SetScale(frandom(-0.8, 0.8))
		TFOG ABCDEFGHIJ 2 Bright
		Stop
	}
}

ACTOR TeleSparkFog : TeleSparks
{
	States
	{
	Spawn:
		TFOG A 0 NoDelay A_PlaySound ("whoof/whoof")
		TFOG ABCDEFGHIJ 2 Bright
		Stop
	}
}