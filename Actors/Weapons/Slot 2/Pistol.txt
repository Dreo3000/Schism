Actor Schism_PistolGiver : Schism_BaseWeaponGiver {
	scale 0.8
	Inventory.PickupMessage "$GOTPISTOL"
	Inventory.PickupSound "CLIPIN"
	Inventory.ForbiddenTo Schism_Warrior, Schism_Corvus, BaronPlayer, RevenantPlayer
	States {
		Spawn:
			PIST G -1
			Stop

		Pickup:
			TNT1 A 0
			TNT1 A 0 A_JumpIfInventory("Schism_Pistol", 1, 2)
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("Schism_CounInvG", 2) == 3, "DontGive")
			TNT1 A 0 A_GiveInventory("Clip1", 10)
			TNT1 A 0 A_GiveInventory("Schism_Pistol", 1)
			Stop

// 		PickupNormal:
// 			TNT1 A 0 A_GiveInventory("Schism_Pistol", 1)
// 			TNT1 A 0 A_GiveInventory("Clip1", 10)
// 			Stop

		DontGive:
			TNT1 A 0
			Fail
    }
}

Actor Schism_PistolEmptyGiver : Schism_BaseWeaponGiver {
	scale 0.8
	Inventory.PickupMessage "$GOTPISTOL"
	Inventory.PickupSound "CLIPIN"
	Inventory.ForbiddenTo Schism_Warrior, Schism_Corvus, BaronPlayer, RevenantPlayer
	States {
		Spawn:
			PIST G -1
			Stop

		Pickup:
			TNT1 A 0
			TNT1 A 0 A_JumpIfInventory("Schism_Pistol", 1, 2)
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("Schism_CounInvG", 2) == 3, "DontGive")
			TNT1 A 0 A_GiveInventory("Schism_Pistol", 1)
			Stop

		DontGive:
			TNT1 A 0
			Fail
    }
}

Actor Schism_Pistol : Schism_Weapon {
	Weapon.AmmoType1 "Schism_PistolMag"
	Weapon.AmmoGive1 0
	Weapon.AmmoUse1 1
	Weapon.AmmoType2 "Clip1"
	Weapon.AmmoGive2 0
	Weapon.AmmoUse2 0
	Weapon.SelectionOrder 2300
	+WEAPON.NOAUTOAIM
	+WEAPON.NOAUTOFIRE
	+WEAPON.NOALERT
	+WEAPON.NO_AUTO_SWITCH
	+WEAPON.WIMPY_WEAPON
	+WEAPON.AMMO_OPTIONAL
	+THRUGHOST
	Obituary "$OB_PISTOL"
	Inventory.MaxAmount 2
    Inventory.Pickupmessage "$SGOT_PISTOL"
    Inventory.PickupSound "CLIPIN"
	Inventory.ForbiddenTo Schism_Warrior, Schism_Corvus
	AttackSound "None"
	Tag "$SW_PISTOL"
	Scale 0.9
	States {
		Spawn:
			TNT1 A 2
			TNT1 A 1 A_SpawnItem("Schism_PistolEmptyGiver", 50)
			Stop

		Select:
			TNT1 A 0 A_Raise
			Wait

		HelmetAnimation:
			"MHLM" "ABCDEFGHIJKLMNOPQRSTUVWXYZ" 1
			"MHL1" "ABCDEFGHIJKLMNOPQRSTUVWXYZ" 1
			"MHL2" "ABCDEFGH" 1
			"####" "#" 0 A_TakeInventory("PlayHelmetAnimation", 1)
			Goto Ready

		Deselect:
			MPID A 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			PISS D 0
			"####" ABCDE 1
			"####" E 0 A_JumpIfInventory("Zoomed", 1, "Deselect2")
			DeselectLoop:
			TNT1 A 0 A_Lower
			Wait

		Deselect2:
			TNT1 A 0 A_TakeInventory("Zoomed", 1)
			Deselect2Loop:
			TNT1 A 0 A_ZoomFactor(1.0)
			TNT1 A 0 A_Lower
			Loop

		Ready:
			TNT1 A 0 A_JumpIfInventory("PlayHelmetAnimation", 1, "HelmetAnimation")
			MPID A 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			PISS A 0
			"####" EDCBA 1 A_WeaponReady(WRF_NOFIRE|WRF_NOBOB)
			ReadyLoop:
			TNT1 A 0 A_GunFlash("LightDone", GFF_NOEXTCHANGE)
			TNT1 A 0 A_JumpIfNoAmmo("ReadyNoAmmo")
			MPIS F 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			PISG A 0
			"####" "#" 0 A_SetCrosshair(0)
			"####" "#" 0 A_JumpIfInventory("Kicking", 1, "DoKick")
			"####" "#" 0 A_JumpIfInventory("Reloading", 1, "Reload")
			"####" "#" 0 A_JumpIfInventory("Quickspell", 1, "Quickspell")
			"####" "#" 0 A_JumpIfInventory("GoFatality", 1, "Steady")
			"####" "#" 1 A_WeaponReady(WRF_ALLOWRELOAD)
			Loop

		ReadyInZoom:
			TNT1 A 0 A_JumpIfNoAmmo("ReadyNoAmmoInZoom")
			BESZ A 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			PISZ D 0
			"####" "#" 0 A_JumpIfInventory("Kicking", 1, "ExitFromZoom")
			"####" "#" 0 A_JumpIfInventory("Reloading", 1, "ExitFromZoom")
			"####" "#" 0 A_JumpIfInventory("Quickspell", 1, "ExitFromZoom")
			"####" "D" 1 A_WeaponReady(WRF_ALLOWRELOAD)
			Loop

		ReadyNoAmmo:
			MPIS B 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			PISF D 0
			"####" "#" 0 A_JumpIfInventory("Zoomed", 1, "ReadyNoAmmoInZoom")
			"####" "#" 0 A_JumpIfInventory("Kicking", 1, "DoKick")
			"####" "#" 0 A_JumpIfInventory("Reloading", 1, "Reload")
			"####" "#" 0 A_JumpIfInventory("Quickspell", 1, "Quickspell")
			"####" "#" 3 A_WeaponReady(WRF_ALLOWRELOAD)
			Loop

		ReadyNoAmmoInZoom:
			BESZ A 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			PISZ G 0
			"####" "#" 0 A_JumpIfInventory("Kicking", 1, "ExitFromZoom")
			"####" "#" 0 A_JumpIfInventory("Taunting", 1, "ExitFromZoom")
			"####" "#" 0 A_JumpIfInventory("Reloading", 1, "ExitFromZoom")
			"####" "#" 0 A_JumpIfInventory("Quickspell", 1, "ExitFromZoom")
			"####" "G" 3 A_WeaponReady(WRF_ALLOWRELOAD)
			Goto ReadyNoAmmo

		Fire:
			TNT1 A 0 A_JumpIfNoAmmo("NoAmmo")

			"####" "#" 0 A_TakeInventory("Schism_PistolMag", 1)
			"####" "#" 0 A_JumpIfInventory("FrostEnchantedBrutalPistol", 1, 2)
			"####" "#" 0 A_AlertMonsters
			"####" "#" 0 A_PlaySound("PFIRE", CHAN_WEAPON)
			"####" "#" 0 A_GunFlash("Flash")

			TNT1 A 0 A_JumpIfInventory("Zoomed", 1, "FireInZoom")
			MPIS A 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			PISF A 0
			"####" A 1 Bright ACS_NamedExecuteWithResult("Schism_FireBullets", 10, 10, 1, 18) // A_FireBullets(1, 1, 1, 18, "WeakPuff", FBF_NORANDOM | FBF_USEAMMO)

			"####" B 1
			"####" F 0 A_FireCustomMissile("PistolCaseSpawn", 5, 0, 0, -9)
			"####" C 0 A_JumpIfInventory("Schism_PistolMag", 1, 3)
			"####" B 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			"####" C 0

			"####" "#" 1 // C frame here
			"####" D 0 A_JumpIfInventory("Schism_PistolMag", 1, 3)
			"####" B 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			"####" C 0

			"####" "#" 1 A_WeaponReady(WRF_NOBOB | WRF_ALLOWRELOAD) // D frame
			"####" F 0 A_JumpIfInventory("Reloading", 1, "Reload")
			"####" A 0 A_JumpIfInventory("Quickspell", 1, "Quickspell")
			"####" B 0 A_JumpIfInventory("Schism_PistolMag", 1, 3)
			"####" B 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			"####" C 0

			"####" "#" 2 A_WeaponReady(WRF_NOBOB | WRF_ALLOWRELOAD)
			Goto ReadyLoop

		Flash:
			TNT1 A 1 A_Light1
			Goto LightDone

		FireInZoom:
			BESZ A 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			PISZ E 0
			"####" "#" 0 A_FireCustomMissile("PistolCaseSpawn", 5, 0, 6, -2)
			"####" E 1 Bright ACS_NamedExecuteWithResult("Schism_FireBullets", 10, 10, 1, 18) // A_FireBullets(0, 0, 1, 18, "WeakPuff", FBF_NORANDOM)
			"####" F 1 Bright A_SetPitch(Pitch - 0.5)
			"####" G 1 A_SetPitch(Pitch + 0.1)
			"####" H 1 A_WeaponReady
			"####" I 1 A_WeaponReady
			"####" "#" 0 //A_JumpIfInventory("FiredPrimary", 1, "Fire")
			"####" "#" 0 A_JumpIfInventory("FiredSecondary", 1, "ADSMode")
			"####" "#" 0 A_JumpIfINventory("ZoomHold", 1, "ExitFromZoom")
			Goto ReadyInZoom

		AltFire:
		Zoom:
			BESZ A 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			PISZ A 0
			"####" "#" 0 A_SetCrosshair(41)
			"####" "#" 0 A_GiveInventory("GoSpecial", 1)
			"####" "#" 0 A_JumpIfInventory("Zoomed", 1, "ExitFromZoom")
			"####" "#" 0 A_GiveInventory("Zoomed", 1)
			"####" "#" 0 A_ZoomFactor(1.5)
			"####" "#" 0 A_GiveInventory("ADSmode", 1)
			"####" ABC 1
			"####" "#" 0 A_JumpIfInventory("FiredPrimary", 1, "Fire")
			"####" "#" 0 A_JumpIfInventory("Reloading", 1, "ExitFromZoom")
			"####" D 7 A_WeaponReady
			"####" "#" 0 A_JumpIfInventory("FiredSecondary", 1, "ADSMode")
			"####" "#" 0 A_JumpIfNoAmmo("ReadyNoAmmoInZoom")
			Goto ReadyInZoom

		ADSMode:
			BESZ A 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			PISZ A 0
			"####" "#" 0 A_GiveInventory("ZoomHold", 1)
			"####" "#" 0 A_JumpIfInventory("FiredPrimary", 1, "Fire")
			"####" "#" 0 A_JumpIfInventory("Reloading", 1, "ExitFromZoom")
			"####" D 1 A_WeaponReady(WRF_ALLOWRELOAD)
			"####" "#" 0 A_JumpIfInventory("FiredSecondary", 1, "ADSMode")
			Goto ExitFromZoom

		ExitFromZoom:
			"####" "#" 0 A_TakeInventory("Zoomed", 1)
			"####" "#" 0 A_TakeInventory("ZoomHold", 1)
			"####" "#" 0 A_TakeInventory("ADSmode", 1)
			"####" "#" 0 A_ZoomFactor(1.0)
			"####" DCBA 1
			Goto ReadyLoop

		Reload:
			MPIR A 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			BRER A 0
			"####" "#" 0 A_TakeInventory("Reloading", 1)
			"####" "#" 0 A_TakeInventory("Zoomed", 1)
			"####" "#" 0 A_TakeInventory("ADSmode", 1)
			"####" "#" 0 A_ZoomFactor(1.0)
			"####" "#" 0 A_JumpIfInventory("Schism_PistolMag", 16, "ReadyLoop")
			"####" "#" 0 A_JumpIfInventory("Clip1", 1, 1)
			Goto ReadyLoop
			"####" "#" 0 A_GiveInventory("Reloading2", 1)
			"####" "#" 0 A_GunFlash("FlashReload")
			ReloadLoop:
			"TNT1" "A" 1 A_JumpIfInventory("Kicking", 1, "DoKick")
			"####" "#" 0 A_JumpIfInventory("Reloading2", 1, "ReloadLoop")
			Goto ReadyLoop


		Flashreload:
			MPIR A 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			PIER A 0
			"####" F 0 A_JumpIfInventory("TurboReload", 1, "RefillTo15")
			"####" "#" 0 A_JumpIfInventory("Schism_PistolMag", 1, "ReloadNotEmpty")
			"####" C 0 A_FireCustomMissile("EmptyClipSpawn", -5, 0, 8, -4)
			"####" F 0 A_PlaySound("prel2", 1)
			"####" AA 0
			"####" ZY 2
			"####" ABCDE 1
			"####" FFFFFFFF 1
			"####" GGHIJ 1
			"####" KLMNOQP 1
			Goto RefillTo15

		ReloadNotEmpty:
			MBRR A 0 A_JumpIfInventory("IsSorcerer",1,2)
			PISR A 0
			"####" F 0 A_PlaySound("prel")
			"####" AA 0
			MPIR A 0 A_JumpIfInventory("IsSorcerer",1,2)
			PIER A 0
			"####" ZY 2
			MBRR A 0 A_JumpIfInventory("IsSorcerer",1,2)
			PISR A 0
			"####" ABCDEFFFFFFFFFGHIJKL 1
			MPIR A 0 A_JumpIfInventory("IsSorcerer",1,2)
			PIER A 0
			"####" MNOP 2
			"####" F 0 A_TakeInventory("HasUnloaded",1)
			Goto Refillto16

		RefillTo15:
			"####" F 0 A_GiveInventory("Schism_PistolMag", 1)
			"####" F 0 A_TakeInventory("Clip1", 1)
			"####" F 0 A_JumpIfInventory("Schism_PistolMag", 15, "FinishReload")
			"####" F 0 A_JumpIfInventory("Clip1", 1, "RefillTo15")
			Goto FinishReload

		RefillTo16:
			"####" F 0 A_GiveInventory("Schism_PistolMag", 1)
			"####" F 0 A_TakeInventory("Clip1", 1)
			"####" F 0 A_JumpIfInventory("Schism_PistolMag", 16, "FinishReload")
			"####" F 0 A_JumpIfInventory("Clip1", 1, "RefillTo16")
			Goto FinishReload

		FinishReload:
			MPIS F 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			PISG A 0
			"####" "#" 0 A_TakeInventory("Reloading2", 1)
			"####" "#" 0 A_Refire
			"####" "#" 0 A_JumpIfInventory("Kicking", 1, "KickFlash")
			"####" "#" 2100
			Stop

		Steady:
			TNT1 A 1
			Goto ReadyLoop

		DoKick: //14 tic
			TNT1 A 0
			TNT1 A 0 A_JumpIfInventory("Reloading2", 1, 2)
			TNT1 A 0 A_GunFlash("KickFlash")
			TNT1 A 0 A_TakeInventory("Kicking", 1)
			TNT1 A 0 A_TakeInventory("Zoomed", 1)
			TNT1 A 0 A_ZoomFactor(1.0)
			TNT1 A 0 A_TakeInventory("ADSmode", 1)
			TNT1 A 0 A_JumpIf (momZ > 0, "KickInAir")
			TNT1 A 0 A_JumpIf (momZ < 0, "KickInAir")
			TNT1 A 0 A_JumpIf((Abs(VelY) < 1) && (Abs(VelX) < 1), 2)
			TNT1 A 0 A_JumpIfInventory("IsCrouching", 1, "SlideAttack")
			TNT1 A 0 A_PlaySound("KICK")
			TNT1 A 0 SetPlayerProperty(0, 1, 0)
			K1CK A 0 A_JumpIfInventory("IsPaladin", 1, 3)
			K2CK A 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			KICK A 0
			"####" BCD 1
			"####" A 0 A_GiveInventory("Schism_Kick", 1)
			"####" H 3
			"####" IGF 1
			"####" "#" 0 SetPlayerProperty(0, 0, 0)
			"####" EDCBA 1 A_JumpIfInventory("Kicking", 1, "KickRight")
			TNT1 A 0 A_JumpIfInventory("Kicking", 1, "KickRight")
			"####" "#" 0 A_JumpIfInventory("Reloading2", 1, "ReloadLoop")
			Goto ReadyLoop

		KickRight: // 15 tic
			TNT1 A 0 A_JumpIfInventory("Reloading2", 1, 2)
			TNT1 A 0 A_GunFlash("RightKickFlash")
			K1K2 A 0 A_JumpIfInventory("IsPaladin", 1, 3)
			K2K2 A 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			KIK2 A 0
			"####" "#" 0 A_TakeInventory("Kicking", 1)
			"####" ABC 1
			"####" A 0 A_PlaySound("KICK")
			"####" A 0
			"####" A 0 A_SetPitch(pitch-9)
			"####" A 0 A_SetAngle(angle+9)
			"####" A 0 A_GiveInventory("Schism_Kick", 1)
			"####" D 1
			"####" A 0 A_SetPitch(pitch+2)
			"####" A 0 A_SetAngle(angle-2)
			"####" D 1
			"####" A 0 A_SetPitch(pitch+2)
			"####" A 0 A_SetAngle(angle-2)
			"####" E 1
			"####" A 0 A_SetPitch(pitch+1)
			"####" A 0 A_SetAngle(angle-1)
			"####" E 1
			"####" A 0 A_SetPitch(pitch+1)
			"####" A 0 A_SetAngle(angle-1)
			"####" C 1 A_JumpIfInventory("Kicking", 1, "KickInAir")
			"####" A 0 A_SetPitch(pitch+1)
			"####" A 0 A_SetAngle(angle-1)
			"####" B 2 A_JumpIfInventory("Kicking", 1, "KickInAir")
			"####" A 0 A_SetPitch(pitch+1)
			"####" A 0 A_SetAngle(angle-1)
			"####" A 2 A_JumpIfInventory("Kicking", 1, "KickInAir")
			"####" A 0 A_SetPitch(pitch+1)
			"####" A 0 A_SetAngle(angle-1)
			"####" A 2 A_JumpIfInventory("Kicking", 1, "KickInAir")
			"####" A 1 A_JumpIfInventory("Kicking", 1, "KickInAir")
			"####" "#" 0 A_JumpIfInventory("Reloading2", 1, "ReloadLoop")
			Goto ReadyLoop

		KickInAir: // 18 tics
			TNT1 A 0 A_JumpIfInventory("Reloading2", 1, 2)
			TNT1 A 0 A_GunFlash("KickInAirFlash")
			TNT1 A 0 A_TakeInventory("Kicking", 1)
			K1CK J 0 A_JumpIfInventory("IsPaladin", 1, 3)
			K2CK J 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			KICK J 1
			"####" A 0 A_PlaySound("KICK")
			"####" A 0 A_Recoil(-15)
			"####" JKLMN 1
			"####" A 0 A_GiveInventory("Schism_AirKick", 1)
			"####" O 3
			"####" PQ 2
			"####" RS 1
			"####" T 1 A_JumpIfInventory("Kicking", 1, "LeftFinishingKick")
			"####" A 2 A_JumpIfInventory("Kicking", 1, "LeftFinishingKick")
			"####" A 1 A_JumpIfInventory("Kicking", 1, "LeftFinishingKick")
			"####" "#" 0 A_JumpIfInventory("Reloading2", 1, "ReloadLoop")
			Goto ReadyLoop

		LeftFinishingKick: // 11 tics
			TNT1 A 0 A_JumpIfInventory("Reloading2", 1, 2)
			TNT1 A 0 A_GunFlash("LeftKickFlash")
			K1K3 A 0 A_JumpIfInventory("IsPaladin", 1, 3)
			K2K3 A 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			KIK3 A 0
			"####" "#" 0 A_TakeInventory("Kicking", 1)
			"####" A 0 A_Recoil(-10)
			"####" ABC 1
			"####" A 0 A_PlaySound("KICK")
			"####" A 0 A_SetPitch(pitch-9)
			"####" A 0 A_SetAngle(angle-9)
			"####" D 1 A_GiveInventory("Schism_Kick", 1)
			"####" A 0 A_SetPitch(pitch+2)
			"####" A 0 A_SetAngle(angle+3)
			"####" E 1
			"####" A 0 A_SetPitch(pitch+2)
			"####" A 0 A_SetAngle(angle+3)
			"####" F 1 A_GiveInventory("Schism_Kick", 1)
			"####" A 0 A_SetPitch(pitch+1)
			"####" A 0 A_SetAngle(angle+3)
			"####" G 1
			"####" A 0 A_SetPitch(pitch+1)
			"####" A 0 A_SetAngle(angle+2)
			"####" H 1 A_GiveInventory("Schism_Kick", 1)
			"####" A 0 A_SetPitch(pitch+1)
			"####" A 0 A_SetAngle(angle+2)
			"####" I 1
			"####" A 0 A_SetPitch(pitch+1)
			"####" A 0 A_SetAngle(angle+1)
			"####" J 1 A_GiveInventory("Schism_Kick", 1)
			"####" A 0 A_SetPitch(pitch+1)
			"####" A 0 A_SetAngle(angle+1)
			"####" K 1
			"####" "#" 0 A_JumpIfInventory("Reloading2", 1, "ReloadLoop")
			Goto ReadyLoop

		SlideAttack:
			TNT1 A 0 A_JumpIfInventory("Reloading2", 1, 2)
			TNT1 A 0 A_GunFlash("SlideKickFlashStart")
			TNT1 A 0 SetPlayerProperty(0, 1, 0)
			KICK A 0 A_TakeInventory("Kicking", 1)
			TNT1 A 0 A_PlaySound("KICK")
			TNT1 A 0 A_Recoil(-16)
			TNT1 A 0 A_PlaySound("SlideKickStart", CHAN_5)
			S1DK A 0 A_JumpIfInventory("IsPaladin", 1, 3)
			S2DK A 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			SLDK A 1
			"####" ABC 1
			"####" A 0 A_SetPitch(10)
			"####" A 0 A_GiveInventory("Schism_SlideKick", 1)
			"####" E 1
			"####" A 0 A_Recoil(-14)
			"####" A 0 A_SetPitch(10)
			"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
			"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
			Goto FinishSlide
			"####" F 1 A_GiveInventory("Schism_SlideKick", 1)
			"####" A 0 A_Recoil(-12)
			"####" A 0 A_SetPitch(10)
			"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
			"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
			Goto FinishSlide

			"####" G 1 A_GiveInventory("Schism_SlideKick", 1)
			"####" A 0 A_Recoil(-8)
			"####" A 0 A_SetPitch(10)
			"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
			"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
			Goto FinishSlide

			"####" F 1 A_GiveInventory("Schism_SlideKick", 1)
			"####" A 0 A_Recoil(-6)
			"####" A 0 A_SetPitch(10)
			"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
			"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
			Goto FinishSlide

			"####" G 1 A_GiveInventory("Schism_SlideKick", 1)
			"####" A 0 A_Recoil(-4)
			"####" A 0 A_SetPitch(10)
			"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
			"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
			Goto FinishSlide

			"####" F 1 A_GiveInventory("Schism_SlideKick", 1)
			"####" A 0 A_Recoil(-4)
			"####" A 0 A_SetPitch(10)
			"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
			"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
			Goto FinishSlide

			"####" G 1 A_GiveInventory("Schism_SlideKick", 1)
			"####" A 0 A_Recoil(-3)
			"####" A 0 A_SetPitch(10)
			"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
			"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
			Goto FinishSlide

			"####" F 1 A_GiveInventory("Schism_SlideKick", 1)
			"####" A 0 A_Recoil(-3)
			"####" A 0 A_SetPitch(10)
			"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
			"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
			Goto FinishSlide

			"####" G 1 A_GiveInventory("Schism_SlideKick", 1)
			"####" A 0 A_Recoil(-3)
			"####" A 0 A_SetPitch(10)
			"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
			"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
			Goto FinishSlide

			"####" F 1 A_GiveInventory("Schism_SlideKick", 1)
			"####" A 0 A_Recoil(-2)
			"####" A 0 A_SetPitch(10)
			"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
			"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
			Goto FinishSlide

			"####" G 1 A_GiveInventory("Schism_SlideKick", 1)
			"####" A 0 A_Recoil(-1)
			"####" A 0 A_SetPitch(10)
			"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
			"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
			Goto FinishSlide

			"####" F 1 A_GiveInventory("Schism_SlideKick", 1)
			"####" A 0 A_Recoil(-1)
			"####" A 0 A_SetPitch(10)
			"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
			"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
			Goto FinishSlide

			"####" G 1 A_GiveInventory("Schism_SlideKick", 1)
			"####" A 0 A_Recoil(-2)
			"####" A 0 A_SetPitch(10)
			"####" A 0 A_JumpIfInventory("KickHasHit", 1, "FinishSlideHitWall")
			"####" A 0 A_JumpIfInventory("IsCrouching", 1, 1)
			"####" A 0 A_TakeInventory("KickHasHit", 1)
			Goto FinishSlide

		FinishSlide:  //10 tic
			TNT1 A 0 A_TakeInventory("Kicking",1)
			TNT1 A 0 A_JumpIfInventory("Reloading2", 1, 2)
			TNT1 A 0 A_GunFlash("SlideKickFlashEnd")
			TNT1 A 0 A_PlaySound("SlideKickStop", CHAN_5)
			S1DK H 0 A_JumpIfInventory("IsPaladin", 1, 3)
			S2DK H 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			SLDK H 0
			"####" A 0 SetPlayerProperty(0, 0, 0)
			"####" A 0 A_JumpIfInventory("IsPaladin", 1, 2)
			"####" A 0 A_Jump(256,5)
			"####" A 0 A_JumpIfInventory("FiredSecondary", 1, 2)
			"####" A 0 A_Jump(256,3)
			"####" A 0 A_GiveInventory("DoUppercutNow", 1)
			"####" A 0 A_SelectWeapon("Berserker_Melee_Attacks")
			"####" HD 2 A_JumpIfInventory("Kicking", 1, "LeftFinishingKick")
			"####" A 0 A_JumpIfInventory("Kicking", 1, "LeftFinishingKick")
			"####" CBA 2 A_JumpIfInventory("Kicking", 1, "LeftFinishingKick")
			"####" A 0 A_Takeinventory("Kicking", 1)
			"####" "#" 0 A_JumpIfInventory("Reloading2", 1, "ReloadLoop")
			Goto ReadyLoop

		FinishSlideHitwall:
			TNT1 A 0 A_JumpIfInventory("Reloading2", 1, 2)
			TNT1 A 0 A_GunFlash("SlideKickFlashEnd")
			S1DK H 0 A_JumpIfInventory("IsPaladin", 1, 3)
			S2DK H 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			SLDK H 0
			"####" A 0 A_Stop
			"####" HDCBA 2
			"####" A 0 A_TAkeInventory("KickHasHit", 1)
			"####" A 0 A_Takeinventory("Kicking", 1)
			"####" A 0 SetPlayerProperty(0, 0, 0)
			"####" "#" 0 A_JumpIfInventory("Reloading2", 1, "ReloadLoop")
			Goto ReadyLoop

// 		Taunt:
// 			TNT1 A 0 A_JumpIfInventory("IsSorcerer", 1, "TauntBlinkTeleport")
// 			PISR AB 2
// 			PI2G E 1 Offset(-20, 32)
// 			PI2G E 1 Offset(-10, 32)
// 			TNT1 A 0 A_GunFlash("TauntFlash")
// 			TNT1 A 0 A_Takeinventory("Zoomed", 1)
// 			TNT1 A 0 A_Takeinventory("ZoomHold", 1)
// 			TNT1 A 0 A_ZoomFactor(1.0)
// 			TNT1 A 0 A_Takeinventory("Taunting", 1)
// 			FUCK F 1
// 			TNT1 A 0 A_FireCustomMissile("Taunter", 0, 0, -1, 0)
// 			TNT1 A 0 A_FireCustomMissile("Taunter", -9, 0, -1, 0)
// 			TNT1 A 0 A_FireCustomMissile("Taunter", 9, 0, -1, 0)
// 			FUCK G 1 A_PlaySound("FUCK", 2)
// 			FUCK HI 1 A_AlertMonsters
// 			FUCK J 15
// 			FUCK IHGF 1
// 			PI2G E 1 Offset(-10, 32)
// 			PI2G E 1 Offset(-20, 32)
// 			PISR B 2 Offset(1, 32)
// 			PISR A 2 Offset(1, 32)
// 			Goto ReadyLoop

		Quickspell:
			TNT1 A 0 A_TakeInventory("Quickspell", 1)
			TNT1 A 0 A_JumpIfInventory("IsSorcerer", 1, 3)
			TNT1 A 0 A_Print("You are not a mage !")
			TNT1 A 0 A_Jump(256, "ReadyLoop")
			TNT1 A 0 A_JumpIfInventory("QuickFireSpellSelected",1,"QuickFireSpell")
			TNT1 A 0 A_JumpIfInventory("QuickLightningSpellSelected",1,"QuickLightningSpell")
			TNT1 A 0 A_JumpIfInventory("QuickFrostSpellSelected",1,"QuickFrostSpell")
			Goto QuickFireSpell

		QuickFireSpell:
			TNT1 A 0 A_GunFlash("SpellFlash")
			TNT1 A 2
			FOSP AB 1
			TNT1 A 0 A_AlertMonsters
			TNT1 A 0 A_PlaySound("IGNITE")
			FOSP CCDD 1
			FOSP EEFFGG 1 BRIGHT
			FOSP GGHH 1 BRIGHT
			TNT1 A 0 A_FireCustomMissile("MageFireBall", 0, 0, 0, -10)
			TNT1 A 0 A_SetPitch(-6.0 + pitch)
			TNT1 A 0 A_FireCustomMissile("ShakeYourAssDouble", 0, 0, 0, 0)
			FOSP IJ 1 BRIGHT A_SetPitch(+2 + pitch)
			FOSP KCBBAA 1 A_SetPitch(+0.5 + pitch)
			TNT1 A 8
			Goto ReadyLoop

		QuickLightningSpell:
			TNT1 A 0 A_GunFlash("SpellFlash")
			LGQS AB 1
			TNT1 A 0 A_AlertMonsters
			TNT1 A 0 A_PlaySound("TPortalZap", CHAN_WEAPON, 2)
			LGQS CCDD 1
			LGQS EFGHIJ 1 BRIGHT
			LGQS KL 1 BRIGHT A_FireCustomMissile("ShakeYourAssQuad", 0, 0, 0, 0)
			TNT1 A 0 A_RailAttack(90, 10, 0, none, "9F 9F FF", RGF_SILENT | RGF_FULLBRIGHT, 25, "LightningPuff", 0, 0, 600, 5,0.001,5.0,"StormTrailParticle",-15)
			TNT1 A 0 A_SetPitch(-6.0 + pitch)
			TNT1 A 0 A_FireCustomMissile("LightningMissile3", 0, 0, 0,-10)
			TNT1 A 0 A_FireCustomMissile("ShakeYourAssDouble", 0, 0, 0, 0)
			LGQS MNO 1 BRIGHT A_SetPitch(+2 + pitch)
			LGQS PQR 1 BRIGHT A_SetPitch(+0.5 + pitch)
			LGQS FEDCBA 1
			TNT1 A 8
			Goto ReadyLoop

		QuickFrostSpell:
			TNT1 A 0 A_GunFlash("SpellFlash")
			TNT1 A 2
			TNT1 A 0 A_Giveinventory("HasFreezerWeapon",1)
			IS1F AABB 1
			IS1F CCDD 1
			IS1F KLF 1
			IS1F MNO 1 BRIGHT
			IS1F A 0 A_Giveinventory("HasFreezerWeapon",1)
			IS1F G 1 BRIGHT A_FireCustomMissile ("BlueFlareSpawn",0,0,0,0)
			IS1F A 0 A_PlaySound("ICESHA", 1)
			IS1F H 1 BRIGHT
			TNT1 A 0 A_FireCustomMissile("BlueFlareSpawn",0,0,0,0)
			IS1F I 1 BRIGHT A_FireCustomMissile ("FrostShard",random(-5,5),0,0,random(-12,12))
			TNT1 A 0 A_FireCustomMissile("BlueFlareSpawn",0,0,0,0)
			IS1F J 1 BRIGHT A_FireCustomMissile ("FrostShard",random(-5,5),0,0,random(-12,12))
			TNT1 A 0 A_Recoil(3)
			TNT1 A 0 A_FireCustomMissile("BlueFlareSpawn",0,0,0,0)
			IS1F K 1 BRIGHT A_FireCustomMissile ("FrostShard",random(-5,5),0,0,random(-12,12))
			TNT1 A 0 A_Takeinventory("HasFreezerWeapon",1)
			IS1F DCBAA 1
			TNT1 A 8
			Goto ReadyLoop

		NoAmmo:
			TNT1 A 0 A_JumpIfInventory("Zoomed", 1, "NoAmmoInZoom")
			MPIS A 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			PIST A 0
			"####" "#" 0 A_JumpIfInventory("noautoreload", 1, 2)
			Goto Reload
			"####" "#" 0 A_JumpIfInventory("turboreload", 1, "RefillTo15")
			"####" "#" 0 A_PlaySound("weapons/empty", 4)
			"####" "#" 0 A_ZoomFactor(1.0)
			Goto ReadyLoop

		NoAmmoInZoom:
			BESZ A 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			BERZ A 0
			"####" "#" 0 A_JumpIfInventory("noautoreload", 1, 2)
			Goto Reload
			"####" "#" 0 A_JumpIfInventory("turboreload", 1, "RefillTo15")
			"####" "#" 0 A_PlaySound("weapons/empty", 4)
			Goto ReadyLoop


		DualWield:
			"####" F 0 A_TakeInventory("StartDualWield",1)
			"####" F 0 A_JumpIfInventory("IsSorcerer", 1, "Enchanting")
// 			"####" F 0 A_JumpIfInventory("DualPistols", 1, "GetDual")
			"####" F 0 A_Print("You must have two identical weapons to dual wield.")
			Goto ReadyLoop

		NoDual:
			"####" F 0 A_Print("You are a mage, you can't dual wield!")
			Goto ReadyLoop

		GetDual:
			PIST F 0
			PIST F 0 A_ZoomFactor(1.0)
// 			PIST F 0 A_SelectWeapon("DualPistols")
			Goto ReadyLoop

		Enchanting:
			TNT1 A 0 ACS_NamedExecuteAlways("Schism_SetEnchantment", 0)
			Goto ReadyLoop

		TauntFlash:
			PI2G E 23
			Stop

		GrenadeFlash:
			MPID A 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			BERG A 0
			"####" ABCDE 1
			Stop

		KickFlash:
			MPID A 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			BERG A 0
			"####" ABCDE 1
			TNT1 A 4
			MPID A 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			BERG A 0
			"####" EDCBA 1
			Stop

		KickInAirFlash: //19 tics
			MPID A 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			BERG A 0
			"####" ABCDE 1
			TNT1 A 9
			MPID A 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			BERG A 0
			"####" EDCBA 1
			Stop

		RightKickFlash: //16 tics
			TNT1 A 10
			MPID A 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			BERG A 0
			"####" EDCBA 1
			Stop

		LeftKickFlash: // 11 tics
			TNT1 A 6
			MPID A 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			BERG A 0
			"####" EDCBA 1
			Stop

		SlideKickFlashStart: //27
			TNT1 A 22
			MPID A 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			BERG A 0
			"####" EDCBA 1
			Stop

		SlideKickFlashEnd: //10 tic
			TNT1 A 6
			MPID A 0 A_JumpIfInventory("IsSorcerer", 1, 2)
			BERG A 0
			"####" EDCBA 1
			Stop

		SpellFlash:
			MPIR STTUUUUVVVVVVVVVVVVVVVVVVVVVUUUTTS 1
			stop
	}
}
Actor HasFiredWithZoom : TokenBase {}
Actor FireEnchantedBrutalPistol : TokenBase {}
Actor LightningEnchantedBrutalPistol : TokenBase {}
Actor FrostEnchantedBrutalPistol : TokenBase {}