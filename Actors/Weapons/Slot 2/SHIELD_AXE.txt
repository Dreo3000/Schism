Actor ShieldAxeSelected : Inventory
{
	Inventory.Maxamount 1
}

ACTOR BattleAxe : Schism_Weapon Replaces FWeapAxe
{
	Game Doom
	+BLOODSPLATTER
	//Health 3
	Weapon.SelectionOrder 3400
	Weapon.KickBack 20
	//+WEAPON.WIMPY_WEAPON
	+WEAPON.MELEEWEAPON
	+WEAPON.NOAUTOAIM
	+WEAPON.NOALERT
	+INVENTORY.UNDROPPABLE
	+WEAPON.CHEATNOTWEAPON
	//+WEAPON.NOAUTOFIRE
	Weapon.AmmoUse1 0
	Weapon.AmmoUse2 0
	Weapon.AmmoGive1 0
	Weapon.AmmoGive2 0
	//Weapon.KickBack 150
	Weapon.AmmoType1 "Zeal"
	Weapon.AmmoType2 "Rage"
	Inventory.ForbiddenTo Schism_Ranger, Schism_Sorcerer, Schism_Corvus


	Obituary "$OB_MPFWEAPFIST"
	Tag "Battle Axe"
	States
	{
	Spawn:
		WFAX A -1
		Stop
	Select:
		TNT1 A 0
		TNT1 A 0 ACS_NamedExecuteAlways("DinosComboBreaker",0)
		TNT1 A 0 A_GiveInventory("GoSpecial", 1)
		TNT1 A 0 SetPlayerProperty(0,0,0)
		W01G A 0 A_Raise
		Wait //Goto Super::Select

	Deselect:
		W01G A 1
		"####" A 0 A_SetCrosshair(0)
        "####" A 0 A_ZoomFactor(1.0)
		//"####" AAAAAAAAAA 0 A_Lower
		"####" FEDCBA 1
		W01G A 0 A_Lower
		Wait

	Ready:
		W01G L 0 A_WeaponReady
		"####" A 0 A_JumpIfInventory("Kicking",1,"DoKick")
	    "####" A 0 A_TakeInventory("SpecialAttackAxe", 1)
		"####" A 0 A_TakeInventory("SpecialAttackPunch", 1)
		"####" A 0 A_TakeInventory("PunchCombo", 1)
		"####" A 0 A_TakeInventory("AxeIsCharged", 1)
		"####" A 0 SetPlayerProperty(0,0,0)
		W01G ABCDEFGHIIIJJKK 1

		ReadyLoop:
		"####" A 0 A_JumpIfInventory("Kicking",1,"DoKick")
        "####" A 0 A_JumpIfInventory("Taunting",1,"Taunt")
		"####" A 0 A_JumpIfInventory("Salute1", 1, "Salute")
		"####" A 0 A_JumpIfInventory("Salute2", 1, "Salute")
		"####" A 0 A_JumpIfInventory("Reloading", 1, "Reload")

		"####" A 0 A_TakeInventory("rage",1)
        "####" A 0 A_JumpIfInventory("rage",1,"ReadyLoopGiveZeal")
		Goto ReadyLoop1

		ReadyLoopGiveZeal:
		TNT1 A 0 A_GiveInventory("zeal",1)

		ReadyLoop1:
		W01G LL 2 A_WeaponReady

		"####" A 0 A_JumpIfInventory("Kicking",1,"DoKick")
        "####" A 0 A_JumpIfInventory("Taunting",1,"Taunt")
		"####" A 0 A_JumpIfInventory("Salute1", 1, "Salute")
		"####" A 0 A_JumpIfInventory("Salute2", 1, "Salute")
		"####" A 0 A_JumpIfInventory("Reloading", 1, "Reload")

		"####" A 0 A_JumpIfInventory("rage",0,"ReadyLoop2")
		"####" A 0 A_TakeInventory("rage",1)

		ReadyLoop2:
		W01G LM 2 A_WeaponReady

		"####" A 0 A_JumpIfInventory("Kicking",1,"DoKick")
        "####" A 0 A_JumpIfInventory("Taunting",1,"Taunt")
		"####" A 0 A_JumpIfInventory("Salute1", 1, "Salute")
		"####" A 0 A_JumpIfInventory("Salute2", 1, "Salute")
		"####" A 0 A_JumpIfInventory("Reloading", 1, "Reload")

		"####" A 0 A_TakeInventory("rage",1)
        "####" A 0 A_JumpIfInventory("rage",1,"ReadyLoopGiveZeal2")
		Goto ReadyLoop3

		ReadyLoopGiveZeal2:
		"####" A 0 A_GiveInventory("zeal",1)

		ReadyLoop3:
		W01G MM 2 A_WeaponReady

		"####" A 0 A_JumpIfInventory("Kicking",1,"DoKick")
        "####" A 0 A_JumpIfInventory("Taunting",1,"Taunt")
		"####" A 0 A_JumpIfInventory("Salute1", 1, "Salute")
		"####" A 0 A_JumpIfInventory("Salute2", 1, "Salute")
		"####" A 0 A_JumpIfInventory("Reloading", 1, "Reload")

		"####" A 0 A_JumpIfInventory("rage",0,"ReadyLoop4")
		"####" A 0 A_TakeInventory("rage",1)

		ReadyLoop4:
		W01G NNN 2 A_WeaponReady

		"####" A 0 A_JumpIfInventory("Kicking",1,"DoKick")
        "####" A 0 A_JumpIfInventory("Taunting",1,"Taunt")
		"####" A 0 A_JumpIfInventory("Salute1", 1, "Salute")
		"####" A 0 A_JumpIfInventory("Salute2", 1, "Salute")
		"####" A 0 A_JumpIfInventory("Reloading", 1, "Reload")

		"####" A 0 A_TakeInventory("rage",1)
        "####" A 0 A_JumpIfInventory("rage",1,"ReadyLoopGiveZeal3")
		Goto ReadyLoop5

		ReadyLoopGiveZeal3:
		"####" A 0 A_GiveInventory("zeal",1)

		ReadyLoop5:
		W01G NN 2 A_WeaponReady

		"####" A 0 A_JumpIfInventory("Taunting",1,"Taunt")
		"####" A 0 A_JumpIfInventory("Salute1", 1, "Salute")
		"####" A 0 A_JumpIfInventory("Salute2", 1, "Salute")
		"####" A 0 A_JumpIfInventory("Kicking",1,"DoKick")
		"####" A 0 A_JumpIfInventory("Reloading", 1, "Reload")

		"####" A 0 A_JumpIfInventory("rage",0,"ReadyLoop6")
		"####" A 0 A_TakeInventory("rage",1)

		ReadyLoop6:
		W01G LL 2 A_WeaponReady
		Goto ReadyLoop

	Fire:
	    "####" A 0
		"####" A 0 A_JumpIfInventory("ReadyToQuickSlash", 1, "FastSlash")
		"####" A 0 A_JumpIfInventory("IsCrouching", 1, "Uppercut")
	    "####" A 0 A_JumpIfInventory("SpecialAttackPunch", 1, "NormPunch")
		//"####" A 0 A_JumpIfInventory("SpecialAttackPunch", 1, "QuickFire")
	    "####" A 0 A_JumpIfInventory("SpecialAttackAxe", 1, "SpecialAttack")
		"####" A 0 A_JumpIf (momZ > 0, "JumpSlash")
		"####" A 0 A_JumpIf (momZ < 0, "JumpSlash")
		W01F ABC 2
	Hold:
	    "####" A 0
	    W01F D 1
		//TNT1 A 0 A_JumpIfInventory("Taunting",1,"AxeThrow") //HAHAHA! (nope :P)
		TNT1 A 0 A_JumpIfInventory("FiredSecondary", 1, "AxeThrowReady") //Real HAHAHA!!!
		W01F D 1 A_Refire

	QuickFire:

		"####" A 0 A_JumpIfInventory("IsCrouching", 1, "Uppercut")
		"####" A 0 A_JumpIf (momZ > 0, "JumpSlash")
		"####" A 0 A_JumpIf (momZ < 0, "JumpSlash")
		//check zeal first (if below now, take away Axe charge)
		"####" A 0 A_JumpIfInventory("Zeal", 5, "QuickFire1")
		"####" A 0 A_TakeInventory("AxeIsCharged", 1)
		///////////////////////////////////////////////////////

		//Check Axe Charge before using up zeal
		QuickFire1:
		"####" A 0 A_JumpIfInventory("AxeIsCharged", 1, "QuickFireCharged")
		Goto QuickFire2

		QuickFireCharged:
		"####" A 0 A_JumpIfInventory("Zeal", 5, "QuickFireTakeZeal")
		Goto QuickFire2

		QuickFireTakeZeal:
		"####" A 0 A_TakeInventory("Zeal", 5)
		///////////////////////////////////////
		QuickFire2:
		//Check Rage first to determine tic skip
		"####" A 0 A_JumpIfInventory("AxeIsCharged",1, "QuickFire3")
		"####" A 0 A_JumpIfInventory("rage",50, "QuickFire4") //if rage is more than 50 than strike start faster
		W01F E 1								//Idle state to slowdown if no rage
		Goto QuickFire4

		QuickFire3:
		"####" A 0 A_JumpIfInventory("rage",50, "QuickFire4") //if rage is more than 50 than strike start faster
		W02F E 1								//Idle state to slowdown if no rage (Axe Charge Sprites)
		////////////////////////////////////////

		QuickFire4:
		//Check Axe Charge to display proper sprite
		"####" A 0 A_JumpIfInventory("AxeIsCharged", 1, "QuickFire5")
		W01F F 1
		Goto QuickFire6

		QuickFire5:
		W02F F 1
		///////////////////////////////////////////

		QuickFire6:
        "####" A 0 A_PlaySound("Paladin/MediumExert", 2)
		"####" A 0 A_PlaySound("AXSWING")
		"####" A 0 A_TakeInventory("SpecialAttackPunch", 1)
		"####" A 0 A_Takeinventory("ReadyToQuickSlash",1)

		"####" A 0 SetPlayerProperty(0,1,0)

		//Check if Charged
		"####" A 0 A_JumpIfInventory("AxeIsCharged", 1, "QuickFireShock")
		//W01F G 1 A_Custompunch(random(70,120),1,1,"BrutalAxePuff", 125) //Normal Axe Attack (old)
		"####" G 1 A_FireCustomMissile("AxeMeleeStrikePaladin", 0, 0, 0, 0)  //Normal Axe Attack
		goto QuickFireRecoil
		//W01F G 1 A_Custompunch(random(105,180),1,1,"TeslaPuff", 125) //Charged Axe Attack (old)
		QuickFireShock:
		"####" G 1 A_FireCustomMissile("AxeShockStrikePaladin", 0, 0, 0, 0)  //Charged Axe Attack
		//////////////////

		QuickFireRecoil:
		"####" A 0 A_Recoil(-6)
		"####" H 1 A_GiveInventory("SpecialAttackAxe", 1)
		"####" A 0 SetPlayerProperty(0,0,0)
		"####" H 1 //A_WeaponReady
		"####" IJK 1 //A_WeaponReady
		"####" A 0 A_JumpIfInventory("Kicking",1,"KickRight")
		TNT1 AA 2
		W01G BDFGK 2 A_WeaponReady
		"####" A 0 A_TakeInventory("SpecialAttackAxe", 1)
		"####" A 0 A_JumpIfInventory("Kicking",1,"KickRight")
		//Take Away Charged Axe
		"####" A 0 A_TakeInventory("AxeIsCharged", 1)
		///////////////////////
		Goto ReadyLoop

		JumpSlash:
		//check zeal first (if below now, take away Axe charge)
		//"####" A 0 A_JumpIfInventory("Zeal", 5, 2)
		//"####" A 0 A_TakeInventory("AxeIsCharged", 1)
		///////////////////////////////////////////////////////

		//Check Axe Charge before using up zeal
		//"####" A 0 A_JumpIfInventory("AxeIsCharged", 1, 2)
		//"####" A 0 A_Jump(256, 4)
		//"####" A 0 A_JumpIfInventory("Zeal", 5, 2)
		//"####" A 0 A_Jump(256, 2)
		//"####" A 0 A_TakeInventory("Zeal", 5)
		///////////////////////////////////////

		//Check Rage first to determine tic skip
		//"####" A 0 A_JumpIfInventory("AxeIsCharged",1, 4)
		"####" A 0 A_JumpIfInventory("rage",50, "JumpSlash1") //if rage is more than 50 than strike start faster
		W0IJ A 3								//Idle state to slowdown if no rage
		goto JumpSlash1
		"####" A 0 A_JumpIfInventory("rage",50, "JumpSlash1") //if rage is more than 50 than strike start faster
		W0IJ A 2								//Idle state to slowdown if no rage (Axe Charge Sprites)
		////////////////////////////////////////

		//Check Axe Charge to display proper sprite
		//"####" A 0 A_JumpIfInventory("AxeIsCharged", 1, 3)

		JumpSlash1:
		W0IJ B 3
		//"####" A 0 A_Jump(256, 2)
		//W0IJ B 1
		///////////////////////////////////////////

        "####" A 0 A_PlaySound("Paladin/MediumExert", 2)
		"####" A 0 A_PlaySound("AXSWING")
		"####" A 0 A_TakeInventory("SpecialAttackPunch", 1)
		"####" A 0 A_Takeinventory("ReadyToQuickSlash",1)

		"####" A 0 SetPlayerProperty(0,1,0)

		//Check if Charged
		//"####" A 0 A_JumpIfInventory("AxeIsCharged", 1, 3)
		//W01F G 1 A_Custompunch(random(70,120),1,1,"BrutalAxePuff", 125) //Normal Axe Attack (old)
		"####" C 1 A_Recoil(-6)
		//"####" A 0 A_Jump(256, 2)
		//W01F G 1 A_Custompunch(random(105,180),1,1,"TeslaPuff", 125) //Charged Axe Attack (old)
		//"####" G 1 A_FireCustomMissile("AxeShockStrikePaladin", 0, 0, 0, 0)  //Charged Axe Attack
		//////////////////

		"####" D 1 A_FireCustomMissile("AxeMeleeStrikePaladin", 0, 0, 0, 0)  //Normal Axe Attack

		"####" A 0 SetPlayerProperty(0,0,0)
		"####" E 1 A_FireCustomMissile("AxeMeleeStrikePaladin", 0, 0, 0, 0)//A_WeaponReady
		"####" F 1 A_GiveInventory("SpecialAttackAxe", 1)
		"####" GH 2 //A_WeaponReady
		"####" A 0 A_JumpIfInventory("Kicking",1,"KickRight")
		TNT1 AA 2
		W01G BDFGK 2 A_WeaponReady
		"####" A 0 A_TakeInventory("SpecialAttackAxe", 1)
		"####" A 0 A_JumpIfInventory("Kicking",1,"KickRight")
		//Take Away Charged Axe
		"####" A 0 A_TakeInventory("AxeIsCharged", 1)
		///////////////////////
		Goto ReadyLoop


	/////////////////////
	//Timon's Axe Throw//
	/////////////////////
	GotoAxeThrow: //This "GotoAxeThrow" state is old code that is no longer used
		W01F ABCD 2
	AxeThrowReady:
		TNT1 A 0 A_JumpIfInventory("Zeal", 10, "AxeThrow")
		TNT1 A 0 A_Print("Not enough \caZeal")
		goto ReadyLoop
	AxeThrow:
		//TNT1 A 0 A_TakeInventory("Taunting",1)
		TNT1 A 0 A_TakeInventory("Zeal",10)
        "####" A 0 A_PlaySound("Paladin/LongExert", 2)
		AXTH ABC 1 BRIGHT
        "####" A 0 A_PlaySound("AXETHROW")
		"####" A 0 A_FireCustomMissile("ThrowedTimonsAxe", 0, 0, 0, -7)
		AXTH DEF 2
		AXTH F 15
		AXTH ED 2
		FASM ABCDEFG 1 BRIGHT
		goto ReadyLoop
	/////////////////////

	SpecialAttack:

		//check zeal first (if below now, take away Axe charge)
		"####" A 0 A_JumpIfInventory("Zeal", 5, "SpecialAttack1")
		"####" A 0 A_TakeInventory("AxeIsCharged", 1)
		///////////////////////////////////////////////////////

		SpecialAttack1:
		//Check Axe Charge before using up zeal
		"####" A 0 A_JumpIfInventory("AxeIsCharged", 1, "SpecialAttackTakeZeal")
		Goto SpecialAttack2

		SpecialAttackTakeZeal:
		"####" A 0 A_TakeInventory("Zeal", 5)
		///////////////////////////////////////
		SpecialAttack2:
		//Check Rage first to determine tic skip
		"####" A 0 A_JumpIfInventory("AxeIsCharged",1, "SpecialAttack3")
		"####" A 0 A_JumpIfInventory("rage",50, "SpecialAttack4") //if rage is more than 50 than strike start faster
		W01S A 1								//Idle state to slowdown if no rage
		Goto SpecialAttack4

		SpecialAttack3:
		"####" A 0 A_JumpIfInventory("rage",50, "SpecialAttack4") //if rage is more than 50 than strike start faster
		W02S A 1 BRIGHT								//Idle state to slowdown if no rage (Axe Charge Sprites)

		SpecialAttack4:
		//check Axe Charge to display proper Sprites
		"####" A 0 A_JumpIfInventory("AxeIsCharged", 1, "SpecialAttack5")
		W01S B 1
		goto SpecialAttack6

		SpecialAttack5:
		W02S B 1 BRIGHT
		////////////////////////////////////////////
		SpecialAttack6:
        "####" A 0 A_PlaySound("Paladin/SpellCast", 2)
		"####" A 0 A_PlaySound("AXSWING")
		"####" CD 1
		"####" A 0 A_TakeInventory("SpecialAttackAxe", 1)
		"####" A 0 SetPlayerProperty(0,1,0)
		"####" A 0 A_Recoil(-6)

		//Check if Charged
		"####" A 0 A_JumpIfInventory("AxeIsCharged", 1, "SpecialAttack7")
		//"####" E 0 A_Custompunch(random(140,160),1,1,"BrutalAxePuffExtreme", 175) //Normal Axe Attack (old)
		"####" E 1 A_FireCustomMissile("AxeMeleeStrikePaladinExtreme", 0, 0, 0, 0)  //Normal Axe Attack
		Goto SpecialAttack8
		//"####" E 0 A_Custompunch(random(210,240),1,1,"TeslaPuff", 175) //Charged Axe Attack (old)
		SpecialAttack7:
		"####" E 1 A_FireCustomMissile("AxeShockStrikePaladin", 0, 0, 0, 0)  //Charged Axe Attack
		//////////////////
		SpecialAttack8:
		"####" FGHI 1
		"####" J 1 A_GiveInventory("PunchCombo", 1)
		"####" A 0 SetPlayerProperty(0,0,0)

		"####" J 1
		TNT1 AA 2
		TNT1 A 0 A_Refire("FastSlash") //A_WeaponReady

		"####" A 0 A_TakeInventory("PunchCombo", 1)
		"####" A 0 A_JumpIfInventory("Kicking",1,"KickLeft")
		W01G BDFGK 2 A_Refire("FastSlash") //A_WeaponReady
		"####" A 0 A_JumpIfInventory("Kicking",1,"KickLeft")
		//Take Away Charged Axe
		"####" A 0 A_TakeInventory("AxeIsCharged", 1)
		///////////////////////
		Goto ReadyLoop

		////////////////////////////////////////////////
		//TWO FAST HORIZONTAL SLASHES FOR RAGED ATTACK//
		////////////////////////////////////////////////

	FastSlash:

		//check zeal first (if below now, take away Axe charge)
		"####" A 0 A_JumpIfInventory("Zeal", 5, "FastSlash1")
		"####" A 0 A_TakeInventory("AxeIsCharged", 1)
		///////////////////////////////////////////////////////

		FastSlash1:
		//Check Axe Charge before using up zeal
		"####" A 0 A_JumpIfInventory("AxeIsCharged", 1, "FastSlashTakeZeal")
		goto FastSlash2

		FastSlashTakeZeal:
		"####" A 0 A_TakeInventory("Zeal", 5)
		///////////////////////////////////////

		FastSlash2:
		//Check Rage first to determine tic skip
		"####" A 0 A_JumpIfInventory("AxeIsCharged",1, "FastSlash3")
		"####" A 0 A_JumpIfInventory("rage",50, "FastSlash4") //if rage is more than 50 than strike start faster
		W01I A 1								//Idle state to slowdown if no rage
		Goto FastSlash4

		FastSlash3:
		"####" A 0 A_JumpIfInventory("rage",50, "FastSlash5") //if rage is more than 50 than strike start faster
		W02I A 1 BRIGHT								//Idle state to slowdown if no rage (Axe Charge Sprites)
		////////////////////////////////////////

		FastSlash4:
		W01I B 1
		Goto FastSlashCut

		FastSlash5:
		W02I B 1 BRIGHT
		////////////////////////////////////////////

		FastSlashCut:
        "####" A 0 A_PlaySound("Paladin/MediumExert", 2)
		"####" A 0 A_PlaySound("AXSWING")
		"####" A 0 A_TakeInventory("SpecialAttackPunch", 1)
		"####" A 0 A_Takeinventory("ReadyToQuickSlash",1)
		"####" A 0 SetPlayerProperty(0,1,0)

		//Check if Charged
		"####" A 0 A_JumpIfInventory("AxeIsCharged", 1, "FastSlashShock")
		//W01I C 1 A_Custompunch(random(70,120),1,1,"BrutalAxePuff2", 125) //Normal Axe Attack (old)
		"####" C 1 A_FireCustomMissile("AxeMeleeStrikePaladin2", 0, 0, 0, 0)  //Normal Axe Attack
		Goto FastSlashRecoil

		//W01I C 1 A_Custompunch(random(105,180),1,1,"TeslaPuff", 125) //Charged Axe Attack (old)

		FastSlashShock:
		"####" C 1 A_FireCustomMissile("AxeShockStrikePaladin", 0, 0, 0, 0)  //Charged Axe Attack
		//////////////////

		FastSlashRecoil:
		"####" A 0 A_Recoil(-6)
		"####" A 0 SetPlayerProperty(0,0,0)

		"####" DEFGH 1
		//W01I HF 2 //A_Refire("FastSlash2")
		TNT1 AA 2
		"####" A 0 A_JumpIfInventory("Kicking",1,"KickRight")
		W01G DFGK 2 A_Refire("SecondFastSlash")
		"####" A 0 A_JumpIfInventory("Kicking",1,"KickRight")
		//Take Away Charged Axe
		"####" A 0 A_TakeInventory("AxeIsCharged", 1)
		///////////////////////
		Goto ReadyLoop

	SecondFastSlash:
		//check zeal first (if below now, take away Axe charge)
		"####" A 0 A_JumpIfInventory("Zeal", 5, "SecondFastSlash1")
		"####" A 0 A_TakeInventory("AxeIsCharged", 1)
		///////////////////////////////////////////////////////

		SecondFastSlash1:
		//Check Axe Charge before using up zeal
		"####" A 0 A_JumpIfInventory("AxeIsCharged", 1, "SecondFastSlashTakeZeal")
		Goto SecondFastSlash2

		SecondFastSlashTakeZeal:
		"####" A 0 A_TakeInventory("Zeal", 5)
		///////////////////////////////////////

		SecondFastSlash2:
		//Check Rage first to determine tic skip
		"####" A 0 A_JumpIfInventory("AxeIsCharged",1, "SecondFastSlash3")
		"####" A 0 A_JumpIfInventory("rage",50, "SecondFastSlash4") //if rage is more than 50 than strike start faster
		W01J A 1								//Idle state to slowdown if no rage
		Goto SecondFastSlash4

		SecondFastSlash3:
		"####" A 0 A_JumpIfInventory("rage",50, "SecondFastSlash4") //if rage is more than 50 than strike start faster
		W02J A 1 BRIGHT								//Idle state to slowdown if no rage (Axe Charge Sprites)
		////////////////////////////////////////

		//Check Axe Charge to display proper sprites
		SecondFastSlash4:
		"####" A 0 A_JumpIfInventory("AxeIsCharged", 1, "SecondFastSlash5")
		W01J B 1
		Goto SecondFastSlashCut

		SecondFastSlash5:
		W02J B 1 BRIGHT
		////////////////////////////////////////////

		SecondFastSlashCut:
        "####" A 0 A_PlaySound("Paladin/MediumExert", 2)
		"####" A 0 A_PlaySound("AXSWING")
		"####" A 0 A_TakeInventory("SpecialAttackPunch", 1)
		"####" A 0 A_Takeinventory("ReadyToQuickSlash",1)

		"####" A 0 SetPlayerProperty(0,1,0)

		//Check if Charged
		"####" A 0 A_JumpIfInventory("AxeIsCharged", 1, "SecondFastSlashShock")
		//"####" C 1 A_Custompunch(random(70,120),1,1,"BrutalAxePuff2", 125) //Normal Axe Attack (old)
		"####" C 1 A_FireCustomMissile("AxeMeleeStrikePaladin2", 0, 0, 0, 0)  //Normal Axe Attack
		Goto SecondFastSlashRecoil
		//"####" C 1 A_Custompunch(random(105,180),1,1,"TeslaPuff", 125) //Charged Axe Attack (old)

		SecondFastSlashShock:
		"####" C 1 A_FireCustomMissile("AxeShockStrikePaladin", 0, 0, 0, 0)  //Charged Axe Attack
		//////////////////

		SecondFastSlashRecoil:
		"####" A 0 A_Recoil(-6)
		"####" A 0 SetPlayerProperty(0,0,0)

		"####" DEFGH 1

		"####" A 0 A_JumpIfInventory("Kicking",1,"KickRight")
		TNT1 AA 2
		W01G DFGK 2 A_Refire("JumpSlash")
		"####" A 0 A_JumpIfInventory("Kicking",1,"KickRight")
		//Take Away Charged Axe
		"####" A 0 A_TakeInventory("AxeIsCharged", 1)
		///////////////////////
		Goto ReadyLoop

	SpecialPunch:
		TNT1 A 0 A_ChangeFlag("SHIELDREFLECT", TRUE)
		TNT1 A 0 A_TakeInventory("PunchCombo", 1)
		TNT1 A 0 A_Giveinventory("ReadyToQuickSlash",1)
		W02C A 1 BRIGHT
        "####" A 0 A_PlaySound("Paladin/MediumExert", 2)
		TNT1 A 0 A_PlaySound("AXSWING")
		TNT1 A 0
		TNT1 A 0 SetPlayerProperty(0,1,0)
		W02C BC 2 BRIGHT //A_SpawnItemEx("ShieldDefense", 10,5,10,0,0,0,0,SXF_NOCHECKPOSITION,0)
		//TNT1 A 0 A_TakeInventory("SpecialAttackPunch2", 1)	// Doesn't do anything

		//Repulsion
        TNT1 A 0 A_Takeinventory("Zoomed",1)
        TNT1 A 0 A_ZoomFactor(1.0)

		TNT1 A 0 A_Blast
		TNT1 A 0 A_FireBullets(0,0,1,40,"shotpuff",FBF_NORANDOM,128)
		W02C C 1 BRIGHT A_FireCustomMissile("ParaPsiStrike", 0, 0, 0, 9)
        "####" A 0 A_PlaySound("Paladin/SpellCast", 2)
		TNT1 A 0 A_PlaySound("AXETELE")
		///////////

		TNT1 A 0 A_Recoil(-12)
		TNT1 A 0 A_SpawnItemEx("ShieldDefense", 25,5,15,0,0,0,0,SXF_NOCHECKPOSITION,0)
		W02C D 1 BRIGHT A_FireCustomMissile("ShieldAttack", 0, 0, 0, -7)
		TNT1 A 0 A_JumpIfInventory("ShieldBashHappened",1,"SpecialBashConnect")
		W02C D 1 BRIGHT A_FireCustomMissile("ShieldAttack", 0, 0, 0, -7)
		TNT1 A 0 A_JumpIfInventory("ShieldBashHappened",1,"SpecialBashConnect")
		W02C E 1 BRIGHT A_FireCustomMissile("ShieldAttack", 0, 0, 0, -7)
		TNT1 A 0 A_JumpIfInventory("ShieldBashHappened",1,"SpecialBashConnect")
		W02C E 1 BRIGHT A_FireCustomMissile("ShieldAttack", 0, 0, 0, -7)
		TNT1 A 0 A_JumpIfInventory("ShieldBashHappened",1,"SpecialBashConnect")

		/*
		W01C F 0 A_FireCustomMissile("ShieldAttack", 40, 0, 0, -7)
		W01C F 0 A_FireCustomMissile("ShieldAttack", 20, 0, 0, -7)
		W01C F 0 A_FireCustomMissile("ShieldAttack", 0, 0, 0, -7)
		W01C F 0 A_FireCustomMissile("ShieldAttack", -20, 0, 0, -7)
		W01C F 0 A_FireCustomMissile("ShieldAttack", -40, 0, 0, -7)
		*/
	SpecialBashConnect:
		TNT1 A 0 SetPlayerProperty(0,0,0)
		W02C DCB 2 BRIGHT
		TNT1 A 0 A_ChangeFlag("SHIELDREFLECT", FALSE)
		TNT1 A 0 A_TakeInventory("ShieldBashHappened",1)
		TNT1 A 0 A_GiveInventory("BashInhibitor",1)
		TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
		W02C FGH 2 BRIGHT A_WeaponReady
		TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
		Goto ReadyLoop

	NormPunch:
		//Check Power Reflect Shield (if up, goto "SpecialPunch")
		TNT1 A 0 A_JumpIfInventory("PowerReflectShield", 1, "SpecialPunch")
		/////////////////////////////////////////////////////////
		TNT1 A 0 A_ChangeFlag("SHIELDREFLECT", TRUE)
		TNT1 A 0 A_TakeInventory("PunchCombo", 1)
		TNT1 A 0 A_Giveinventory("ReadyToQuickSlash",1)
		W01C A 1
        "####" A 0 A_PlaySound("Paladin/MediumExert", 2)
		TNT1 A 0 A_PlaySound("AXSWING")
		TNT1 A 0
		TNT1 A 0 SetPlayerProperty(0,1,0)
		W01C BC 2  //A_SpawnItemEx("ShieldDefense", 10,5,10,0,0,0,0,SXF_NOCHECKPOSITION,0)
		//TNT1 A 0 A_TakeInventory("SpecialAttackPunch2", 1)	// Doesn't do anything

        TNT1 A 0 A_Takeinventory("Zoomed",1)
        TNT1 A 0 A_ZoomFactor(1.0)

		TNT1 A 0 A_Blast
		TNT1 A 0 A_FireBullets(0,0,1,40,"shotpuff",FBF_NORANDOM,64)
		W01C C 1
        //"####" A 0 A_PlaySound("Paladin/SpellCast", 2)
		//TNT1 A 0 A_PlaySound("AXETELE")

		TNT1 A 0 A_Recoil(-12)
		TNT1 A 0 A_SpawnItemEx("ShieldDefense", 25,5,15,0,0,0,0,SXF_NOCHECKPOSITION,0)
		W01C D 1 A_FireCustomMissile("ShieldAttack", 0, 0, 0, -7)
		TNT1 A 0 A_JumpIfInventory("ShieldBashHappened",1,"NormBashConnect")
		W01C D 1 A_FireCustomMissile("ShieldAttack", 0, 0, 0, -7)
		TNT1 A 0 A_JumpIfInventory("ShieldBashHappened",1,"NormBashConnect")
		W01C E 1 A_FireCustomMissile("ShieldAttack", 0, 0, 0, -7)
		TNT1 A 0 A_JumpIfInventory("ShieldBashHappened",1,"NormBashConnect")
		W01C E 1 A_FireCustomMissile("ShieldAttack", 0, 0, 0, -7)
		TNT1 A 0 A_JumpIfInventory("ShieldBashHappened",1,"NormBashConnect")

		/*
		W01C F 0 A_FireCustomMissile("ShieldAttack", 40, 0, 0, -7)
		W01C F 0 A_FireCustomMissile("ShieldAttack", 20, 0, 0, -7)
		W01C F 0 A_FireCustomMissile("ShieldAttack", 0, 0, 0, -7)
		W01C F 0 A_FireCustomMissile("ShieldAttack", -20, 0, 0, -7)
		W01C F 0 A_FireCustomMissile("ShieldAttack", -40, 0, 0, -7)
		*/
	NormBashConnect:
		TNT1 A 0 SetPlayerProperty(0,0,0)
		W01C DCB 2
		TNT1 A 0 A_ChangeFlag("SHIELDREFLECT", FALSE)
		TNT1 A 0 A_TakeInventory("ShieldBashHappened",1)
		TNT1 A 0 A_GiveInventory("BashInhibitor",1)
		TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
		W01C FGH 2 A_WeaponReady
		TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
		Goto ReadyLoop

		/*
	Punch:
		TNT1 A 0 A_TakeInventory("PunchCombo", 1)
		W01C A 1
		TNT1 A 0 A_PlaySound("AXSWING")
		TNT1 A 0
		TNT1 A 0 SetPlayerProperty(0,1,0)
		W01C BCD 2 //A_SpawnItemEx("ShieldDefense", 10,5,10,0,0,0,0,SXF_NOCHECKPOSITION,0)
		TNT1 A 0 A_TakeInventory("SpecialAttackPunch", 1)
		TNT1 A 0 A_TakeInventory("SpecialAttackPunch2", 1)
		TNT1 A 0 A_Recoil(-12)
		TNT1 A 0 A_JumpIfInventory("Level", 2, "Level2Punch")
	//	W01C F 0 A_Custompunch(random(10,40),1,1,"BrutalPunchPuff", 150)
		W01C F 0 A_FireCustomMissile("ShieldAttack", 40, 0, 0, -7)
		W01C F 0 A_FireCustomMissile("ShieldAttack", 20, 0, 0, -7)
		W01C F 0 A_FireCustomMissile("ShieldAttack", 0, 0, 0, -7)
		W01C F 0 A_FireCustomMissile("ShieldAttack", -20, 0, 0, -7)
		W01C F 0 A_FireCustomMissile("ShieldAttack", -40, 0, 0, -7)
		TNT1 A 0 SetPlayerProperty(0,0,0)
		TNT1 A 0 A_Giveinventory("ReadyToQuickSlash",1)
		W01C EDCB 2 //A_SpawnItemEx("ShieldDefense", 10,5,10,0,0,0,0,SXF_NOCHECKPOSITION,0)
		TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
		W01C FG 2 A_WeaponReady
		TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
		TNT1 A 0 A_Takeinventory("ReadyToQuickSlash",1)
		Goto Ready

		Level2Punch:
		TNT1 A 0 A_Giveinventory("ReadyToQuickSlash",1)
		W01C F 0 A_Custompunch(random(30,50),1,1,"BrutalPunchPuff2", 150)
		W01C EDCB 2 A_WeaponReady
		W01C FG 2 A_WeaponReady
		TNT1 A 0 A_Takeinventory("ReadyToQuickSlash",1)
		Goto Ready
		*/


	Uppercut:
			TNT1 A 0
			//TNT1 A 0 A_JumpIfInventory("rage",50,"RageUppercut")
			TNT1 A 3
			//TNT1 A 0 A_Takeinventory("PSeq1",2)
			TNT1 A 0 A_TakeInventory("DoUppercutNow",1)
			TNT1 A 0 A_PlaySound("weapons/gswing")
			"####" A 0 A_PlaySound("Paladin/LongExert", 2)
			TNT1 A 0 A_Giveinventory("Punching",1)
			//TNT1 A 0 A_Giveinventory("GoSpecial",1)
			TNT1 A 0 A_GiveInventory("HeavyStrikeUpward", 1)
			TNT1 A 0 A_SetPitch(pitch-8)
			W01U ABC 1 A_SetPitch(pitch-6)
			TNT1 A 0 A_FireCustomMissile("AxeMeleeStrikePaladin", 0, 0, 0, 0)
			TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "GoingToReady")
			W01U DEF 1 A_SetPitch(pitch-6)
			TNT1 A 0 A_FireCustomMissile("AxeMeleeStrikePaladin", 0, 0, 0, 0)
			//TNT1 A 0 A_TakeInventory("HeavyStrikeUpward", 1)
			TNT1 A 0 SetPlayerProperty(0,0,0)
			W01U GGH 1 A_SetPitch(pitch+4)
			TNT1 A 0 A_FireCustomMissile("AxeMeleeStrikePaladin", 0, 0, 0, 0)
			W01U HHH 1 A_SetPitch(pitch+4)
			TNT1 A 0 A_JumpIfInventory("FiredSecondary", 1, "SecondFastSlash")
			TNT1 A 0 A_JumpIfInventory("FiredPrimary", 1, "SpecialAttack")
			W01U IJ 2 A_SetPitch(pitch+4)
			TNT1 A 0 A_JumpIfInventory("FiredSecondary", 1, "SecondFastSlash")
			TNT1 A 0 A_JumpIfInventory("FiredPrimary", 1, "SpecialAttack")
			W01U KL 2 A_SetPitch(pitch+4)
			W01I M 2
			TNT1 A 0 A_JumpIfInventory("FiredSecondary", 1, "SecondFastSlash")
			TNT1 A 0 A_JumpIfInventory("FiredPrimary", 1, "SpecialAttack")
			TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
			TNT1 AAAAA 1 A_JumpIfInventory("FiredPrimary", 1, "SpecialAttack")
			//TNT1 A 0 A_PlaySound("PATHETIC",2,4.0)
			Goto Ready



	AltFire:
	    TNT1 A 0
        "####" A 0 A_PlaySound("Paladin/MediumExert", 2)
		TNT1 A 0 A_PlaySound("AXSWING")
	    TNT1 A 0 A_JumpIfInventory("PunchCombo", 1, "NormPunch")
		TNT1 A 0 A_JumpIfInventory("SpecialAttackPunch", 1, "NormPunch")
		W01D ABCDEFGH 1
		TNT1 A 0 A_Custompunch(random(60,120),1,1,"BrutalAxePuff", 125)
		TNT1 A 0 A_ChangeFlag("SHIELDREFLECT", TRUE)
		TNT1 A 0 A_Giveinventory("ReadyToQuickSlash",1)
		//Give Shield up Inventory
		TNT1 A 0 A_GiveInventory("ShieldUp", 1)
		//////////////////////////
		W01D IJK 2 A_SpawnItemEx("ShieldDefense", 40,5,15,0,0,0,0,SXF_NOCHECKPOSITION,0)
	AltHold:
	    TNT1 A 0
		//TNT1 A 0 A_JumpIfInventory("Taunting",1,"PowerReflectUp")
		TNT1 A 0 A_JumpIfInventory("Reloading",1,"Reload")
		TNT1 A 0 A_ChangeFlag("SHIELDREFLECT", TRUE)

		//Check If Power Reflect Shield is up
		TNT1 A 0 A_JumpIfInventory("PowerReflectShield", 1, "AltHold1")
	    SHRS E 1 A_SpawnItemEx("ShieldDefense", 40,5,15,0,0,0,0,SXF_NOCHECKPOSITION,0)
		Goto AltHoldRefire

		AltHold1:
		TNT1 A 0 A_JumpIfInventory("Zeal", 1, "AltHold2")
		TNT1 A 0 A_TakeInventory("PowerReflectShield", 1)
		TNT1 A 0 A_TakeInventory("ReflectionAxeShield", 1)
		Goto AltHoldRefire

		AltHold2:
		SHRC H 1 BRIGHT
		TNT1 A 0 A_GiveInventory("ReflectionAxeShield", 1)
		TNT1 A 0 A_Jump(220, 2)
		TNT1 A 0 A_TakeInventory("Zeal", 1)
		SHRC H 1 BRIGHT
		TNT1 A 0 A_Jump(220, 2)
		TNT1 A 0 A_TakeInventory("Zeal", 1)
		SHRC H 1 BRIGHT
		TNT1 A 0 A_Jump(220, 2)
		TNT1 A 0 A_TakeInventory("Zeal", 1)
		SHRC H 1 BRIGHT
		TNT1 A 0 A_Jump(220, 2)
		TNT1 A 0 A_TakeInventory("Zeal", 1)
		/////////////////////////////////////

		AltHoldRefire:
		//SHRS E 1 A_SpawnItemEx("ShieldDefenseReflective", 40,5,15,0,0,0,0,SXF_NOCHECKPOSITION,0)
		TNT1 A 0 A_JumpIfInventory("SpecialAttackPunch", 1, "NormPunch")
		TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")

		//check "PowerReflectShield" again for refire
		TNT1 A 0 A_JumpIfInventory("PowerReflectInventory", 1, "AltHoldReflect")
		SHRS E 1 A_Refire
		Goto AltHoldNoReflect

		AltHoldReflect:
		SHRC H 1 A_Refire
		/////////////////////////////////////////////

		AltHoldNoReflect:
		TNT1 A 0 A_ChangeFlag("SHIELDREFLECT", FALSE)
		W01D DDCCBA 1 A_WeaponReady
		TNT1 A 0 A_Takeinventory("ReadyToQuickSlash",1)
		//Take Shield up Inventory (and reflector if used)
		TNT1 A 0 A_TakeInventory("ShieldUp", 1)
		TNT1 A 0 A_TakeInventory("PowerReflectShield", 1)
		TNT1 A 0 A_TakeInventory("ReflectionAxeShield", 1)
		/////////////////////////////////////////////////
		Goto ReadyLoop

	 	Steady:
	TNT1 A 1
	TNT1 A 0 ACS_Execute(477, 0, 0, 0, 0)
	Goto ReadyLoop


	DoKick:
    TNT1 A 0
	    TNT1 A 0 A_JumpIfInventory("SpecialAttackPunch", 1, "KickRight")
		TNT1 A 0 A_JumpIfInventory("PunchCombo", 1, "KickLeft")
		TNT1 A 0 A_Takeinventory("Zoomed",1)
        TNT1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 A_Takeinventory("ADSmode",1)
		NULL A 0 A_JumpIf (momZ > 0, "AirKick")
		NULL A 0 A_JumpIf (momZ < 0, "AirKick")
		TNT1 A 0 A_JumpIfInventory("IsCrouching", 1, "SlideAttack")
		RIFF A 0 A_FireCustomMissile("KickAttackDetectDowned", 0, 0, 0, 0)
        TNT1 A 0 A_jumpifinventory("PowerStrength",1,"BerserkerKick")
        "####" A 0 A_PlaySound("Paladin/MediumExert", 2)
		TNT1 A 0 A_PlaySound("KICK")
		TNT1 A 0 SetPlayerProperty(0,1,0)
		AXKI ABCD 1
		RIFF A 0 A_FireCustomMissile("KickAttack", 0, 0, 0, -7)
   		TNT1 A 0 A_Giveinventory("ReadyToQuickSlash",1)
		K1CK H 5
		K1CK A 0 A_Takeinventory("Kicking",1)
		K1CK I 1
		K1CK GFE 1 A_WeaponReady
		AXKI DCBA 1 A_WeaponReady
		TNT1 A 0 SetPlayerProperty(0,0,0)
		TNT1 A 0 A_Takeinventory("ReadyToQuickSlash",1)
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
		Goto ReadyLoop
    BerserkerKick:
        "####" A 0 A_PlaySound("Paladin/MediumExert", 2)
		TNT1 A 0 A_PlaySound("KICK")
		TNT1 A 0 SetPlayerProperty(0,1,0)
		AXKI ABCD 1
        RIFF A 0 A_FireCustomMissile("SuperKickAttack", 0, 0, 0, -7)
		TNT1 A 0 A_Giveinventory("ReadyToQuickSlash",1)
        K1CK H 5
		K1CK A 0 A_Takeinventory("Kicking",1)
		K1CK I 1
		K1CK GFE 1 A_WeaponReady
		AXKI DCBA 1 A_WeaponReady
		TNT1 A 0 SetPlayerProperty(0,0,0)
		TNT1 A 0 A_Takeinventory("ReadyToQuickSlash",1)
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
		Goto ReadyLoop

	KickRight:
		K1K2 ABC 1
        "####" A 0 A_PlaySound("Paladin/MediumExert", 2)
        TNT1 A 0 A_PlaySound("KICK")
		TNT1 A 0 A_Giveinventory("Punching",1)
		TNT1 A 0 A_SetPitch(-6 + pitch)
		K1K2 D 1
		PUN2 A 0 A_FireCustomMissile("KickAttack", 0,0,0,-7)
		TNT1 A 0 A_GiveInventory("SpecialAttackAxe", 1)
		K1K2 DD 1
		K1K2 ECBA 1 A_WeaponReady
		TNT1 A 5 A_TakeInventory("Kicking",1)
		TNT1 A 0 A_TakeInventory("SpecialAttackAxe", 1)
		TNT1 A 0 A_TakeInventory("SpecialAttackPunch", 1)
		Goto ReadyLoop


	KickLeft:
		K1K1 ABC 1
        "####" A 0 A_PlaySound("Paladin/MediumExert", 2)
        TNT1 A 0 A_PlaySound("KICK")
		TNT1 A 0 A_Giveinventory("Punching",1)
		TNT1 A 0 A_SetPitch(-6 + pitch)
		K1K1 D 1
		PUN2 A 0 A_FireCustomMissile("KickAttack", 0,0,0,-7)
		TNT1 A 0 A_GiveInventory("ReadyToQuickSlash", 1)
		K1K1 DD 1
		K1K1 ECBA 1 A_WeaponReady
		TNT1 A 5 A_TakeInventory("Kicking",1)
		TNT1 A 0 A_TakeInventory("ReadyToQuickSlash", 1)
		TNT1 A 0 A_TakeInventory("PunchCombo", 1)
		Goto ReadyLoop

	AirKick:
	    TNT1 A 0 A_jumpifinventory("PowerStrength",1,"SuperAirKick")
        "####" A 0 A_PlaySound("Paladin/MediumExert", 2)
		TNT1 A 0 A_PlaySound("KICK")
		TNT1 A 0 A_Recoil (-6)
		K1CK JKLMN 1
        RIFF A 0 A_FireCustomMissile("AirKickAttack", 0, 0, 0, -31)
		TNT1 A 0 A_GiveInventory("SpecialAttackAxe", 1)
        K1CK O 3
		K1CK A 0 A_Takeinventory("Kicking",1)
		K1CK PQRST 2 A_WeaponReady
		TNT1 A 0 A_TakeInventory("SpecialAttackAxe", 1)
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
		Goto ReadyLoop

	SuperAirKick:
        "####" A 0 A_PlaySound("Paladin/LongExert", 2)
		TNT1 A 0 A_PlaySound("KICK")
		TNT1 A 0 A_Recoil (-6)
		K1CK JKLMN 1
        RIFF A 0 A_FireCustomMissile("SuperAirKickAttack", 0, 0, 0, -31)
		TNT1 A 0 A_GiveInventory("SpecialAttackAxe", 1)
        K1CK O 3
		K1CK A 0 A_Takeinventory("Kicking",1)
		K1CK PQRST 2 A_WeaponReady
		TNT1 A 0 A_TakeInventory("SpecialAttackAxe", 1)
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
		Goto ReadyLoop

	//Taunt:
	Reload:
		TNT1 A 0 A_TakeInventory("Reloading",1)
		TNT1 A 0 A_JumpIfInventory("ShieldUp", 1, "PowerReflectOn")
		TNT1 A 0 A_TakeInventory("Reloading",1)
		Goto ParryUp
		//Goto GotoAxeThrow

	Taunt: //here at the moment (why not? :3)
        TNT1 A 0 A_Takeinventory("Taunting",1)
		TNT1 A 0 A_JumpIfInventory("Zeal", 5, "ChargingAxe")
		TNT1 A 0 A_Print("Not enough \caZeal")
		Goto ReadyLoop

	Salute:
		TNT1 A 0
		goto ReadyLoop
	    TNT1 A 0 SetPlayerProperty(0,1,0)
		TNT1 A 0 A_ALertMonsters
		SALU ABCDEDCDEDCDEDCBA 4
		TNT1 A 0 A_TakeInventory("Salute1",1)
		TNT1 A 0 A_TakeInventory("Salute2",1)
		TNT1 A 0 SetPlayerProperty(0,0,0)
		Goto ReadyLoop

	//For Axe melee Charging when tauning
	ChargingAxeReady:
		"####" A 0 A_JumpIfInventory("Zeal", 5, "ChargingAxe")
		"####" A 0 A_Print("Not enough \caZeal")
		Goto ReadyLoop
	ChargingAxe:
		"####" A 0 A_PlaySound("Paladin/SpellCast", 2)
		//"####" A 0 A_Takeinventory("Taunting",1)
		"####" A 0 A_GiveInventory("AxeIsCharged", 1)
		FAXE LMNLMN 1 BRIGHT
		"####" A 0 A_PlaySound("AXECHARG")
		"####" LMNLMN 1 BRIGHT
		Goto ChargeReady

	ChargeReady:
		TNT1 A 0
		FAXE LMN 3 BRIGHT A_WeaponReady //A_JumpIfInventory("FiredPrimary", 1, "QuietusPowerRazor")
		TNT1 A 0
		loop
	/////////////////////////////////////

	//For Shield Reflect On when shield is raised
	PowerReflectOn:
		TNT1 A 0 A_JumpIfInventory("PowerReflectShield", 1, "ReadyLoop")
		TNT1 A 0 A_JumpIfInventory("Zeal", 5, 3)
		TNT1 A 0 A_Print("Not enough \caZeal")
		TNT1 A 0 A_Jump(256, "ReadyLoop")
		TNT1 A 0 A_GiveInventory("PowerReflectShield", 1)
		TNT1 A 0 A_Print("Power Reflect mode")
		"####" A 0 A_PlaySound("AXECHARG")
		SHRC FFGGHHHHHGGFF 2 BRIGHT A_SpawnItemEx("ShieldDefense", 40,5,15,0,0,0,0,SXF_NOCHECKPOSITION,0)
		Goto ReadyLoop

		//For Shield Reflect Up when taunting
	ParryUp:
		//TNT1 A 0 A_JumpIfInventory("Zeal", 5, 3)
		//TNT1 A 0 A_Print("Not enough \caZeal")
		//TNT1 A 0 A_Jump(256, "ReadyLoop")

		"####" A 0 A_PlaySound("AXECHARG")
		SHRC ABCDE 1 A_SpawnItemEx("ShieldDefense", 40,5,15,0,0,0,0,SXF_NOCHECKPOSITION,0)
		TNT1 A 0 A_JumpIfInventory("FiredSecondary", 1, "AltHold")
		TNT1 A 0 A_JumpIfInventory("FiredPrimary", 1, "NormPunch")

		TNT1 A 0 A_JumpIfInventory("Zeal", 1, 4)
		TNT1 A 0 A_TakeInventory("PowerReflectShield", 1)
		TNT1 A 0 A_TakeInventory("ReflectionAxeShield", 1)
		TNT1 A 0 A_Jump(256, "ParryNoZeal")

		SHRC F 2 BRIGHT  A_SpawnItemEx("ShieldDefense", 40,5,15,0,0,0,0,SXF_NOCHECKPOSITION,0)
		TNT1 A 0 A_JumpIfInventory("FiredSecondary", 1, "AltHold")
		TNT1 A 0 A_JumpIfInventory("FiredPrimary", 1, "Fire")

		TNT1 A 0 A_ChangeFlag("SHIELDREFLECT", TRUE)
		TNT1 A 0 A_GiveInventory("PowerReflectShield", 1)

		SHRC G 2 BRIGHT  A_SpawnItemEx("ShieldDefense", 40,5,15,0,0,0,0,SXF_NOCHECKPOSITION,0)
		TNT1 A 0 A_JumpIfInventory("FiredSecondary", 1, "AltHold")
		TNT1 A 0 A_JumpIfInventory("FiredPrimary", 1, "SpecialPunch")
		SHRC H 2 BRIGHT  A_SpawnItemEx("ShieldDefense", 40,5,15,0,0,0,0,SXF_NOCHECKPOSITION,0)
		TNT1 A 0 A_JumpIfInventory("FiredSecondary", 1, "AltHold")
		TNT1 A 0 A_JumpIfInventory("FiredPrimary", 1, "SpecialPunch")
		SHRC H 2 BRIGHT  A_SpawnItemEx("ShieldDefense", 40,5,15,0,0,0,0,SXF_NOCHECKPOSITION,0)
		TNT1 A 0 A_JumpIfInventory("FiredSecondary", 1, "AltHold")
		TNT1 A 0 A_JumpIfInventory("FiredPrimary", 1, "SpecialPunch")
		SHRC G 2 BRIGHT  A_SpawnItemEx("ShieldDefense", 40,5,15,0,0,0,0,SXF_NOCHECKPOSITION,0)
		TNT1 A 0 A_JumpIfInventory("FiredSecondary", 1, "AltHold")
		TNT1 A 0 A_JumpIfInventory("FiredPrimary", 1, "SpecialPunch")
		SHRC F 2 BRIGHT  A_SpawnItemEx("ShieldDefense", 40,5,15,0,0,0,0,SXF_NOCHECKPOSITION,0)
		TNT1 A 0 A_JumpIfInventory("FiredSecondary", 1, "AltHold")
		TNT1 A 0 A_JumpIfInventory("FiredPrimary", 1, "SpecialPunch")
		Goto ParryDown

		ParryNoZeal:
		SHRS E 2 A_SpawnItemEx("ShieldDefense", 40,5,15,0,0,0,0,SXF_NOCHECKPOSITION,0)
		TNT1 A 0 A_JumpIfInventory("FiredSecondary", 1, "AltHold")
		TNT1 A 0 A_JumpIfInventory("FiredPrimary", 1, "NormPunch")
		SHRS E 2 A_SpawnItemEx("ShieldDefense", 40,5,15,0,0,0,0,SXF_NOCHECKPOSITION,0)
		TNT1 A 0 A_JumpIfInventory("FiredSecondary", 1, "AltHold")
		TNT1 A 0 A_JumpIfInventory("FiredPrimary", 1, "NormPunch")
		SHRS E 2 A_SpawnItemEx("ShieldDefense", 40,5,15,0,0,0,0,SXF_NOCHECKPOSITION,0)
		TNT1 A 0 A_JumpIfInventory("FiredSecondary", 1, "AltHold")
		TNT1 A 0 A_JumpIfInventory("FiredPrimary", 1, "NormPunch")
		SHRS E 2 A_SpawnItemEx("ShieldDefense", 40,5,15,0,0,0,0,SXF_NOCHECKPOSITION,0)
		TNT1 A 0 A_JumpIfInventory("FiredSecondary", 1, "AltHold")
		TNT1 A 0 A_JumpIfInventory("FiredPrimary", 1, "NormPunch")
		SHRS E 2 A_SpawnItemEx("ShieldDefense", 40,5,15,0,0,0,0,SXF_NOCHECKPOSITION,0)
		TNT1 A 0 A_JumpIfInventory("FiredSecondary", 1, "AltHold")
		TNT1 A 0 A_JumpIfInventory("FiredPrimary", 1, "NormPunch")

		ParryDown:
		TNT1 A 0 A_TakeInventory("PowerReflectShield", 1)
		TNT1 A 0 A_ChangeFlag("SHIELDREFLECT", FALSE)
		SHRC EDC 1 A_SpawnItemEx("ShieldDefense", 40,5,15,0,0,0,0,SXF_NOCHECKPOSITION,0)
		Goto ReadyLoop
	/////////////////////////////////////
	/////////////////////////////////////
	}
}

ACTOR BrutalAxePuff
{
	+NOBLOCKMAP +NOGRAVITY +BLOODSPLATTER -NOEXTREMEDEATH
	+PUFFONACTORS
	RenderStyle Translucent
	Damagetype "Saw"
	//AttackSound "SLMETA"

	Alpha 0.6
	VSpeed 1
	States
	{
	Spawn:
	Crash:
		TNT1 A 1 Radius_Quake (2, 10, 0, 2, 0)
		TNT1 A 1
		TNT1 A 1 A_PlaySound("SLMETA", 1)
		Stop
	}
}

ACTOR BrutalAxePuff2: BrutalAxePuff
{Damagetype "cut"}

ACTOR BrutalPunchPuff
{
	+NOBLOCKMAP +NOGRAVITY +BLOODSPLATTER +NOEXTREMEDEATH +PUFFONACTORS
	RenderStyle Translucent
	Damagetype "ShieldBash"
	Alpha 0.6
	VSpeed 1
	States
	{
	Spawn:
		TNT1 A 0 BRIGHT
		TNT1 A 1 Radius_Quake (4, 5, 0, 2, 0)
		TNT1 A 1
		TNT1 A 0 A_Explode(10, 50, 0, 1)
		TNT1 A 1 A_PlaySound("BASH1", 1)
		FHFX STUVW 4
		Stop
	}
}

ACTOR BrutalPunchPuff2
{
	+NOBLOCKMAP +NOGRAVITY +BLOODSPLATTER +NOEXTREMEDEATH +PUFFONACTORS
	RenderStyle Translucent
	Damagetype "ShieldBash"
	Alpha 0.6
	VSpeed 1
	States
	{
	Spawn:
		TNT1 A 0 BRIGHT
		TNT1 A 1 Radius_Quake (4, 5, 0, 2, 0)
		TNT1 A 1
		TNT1 A 0 A_Explode(30, 90, 0, 1)
		TNT1 A 1 A_PlaySound("BASH1", 1)
		FHFX STUVW 4
		Stop
	}
}

ACTOR BrutalAxePuffExtreme: BrutalAxePuff
{
-NOEXTREMEDEATH
Damagetype ExtremePunches
//+EXTREMEDEATH
}

Actor SpecialAttackAxe : Inventory
{
inventory.maxamount 1
}

Actor SpecialAttackPunch : Inventory
{
inventory.maxamount 1
}

Actor SpecialAttackPunch2 : Inventory
{
inventory.maxamount 1
}

Actor PunchCombo : Inventory
{
inventory.maxamount 1
}

Actor ReadyToQuickSlash : Inventory
{
inventory.maxamount 1
}


Actor UseFlechette : Inventory
{
inventory.maxamount 100
}

actor BashInhibitor : PowerupGiver
{
	Inventory.Amount 0
	Powerup.Type "BashCooldown"
	Powerup.Duration -1 // 1 second cooldown (was 2 seconds)
	+INVENTORY.AUTOACTIVATE
	+INVENTORY.ADDITIVETIME
}

actor PowerBashCooldown : PowerDamage
{
	DamageFactor "Normal", 1.0
}

Actor ShieldBashHappened : Inventory
{
	Inventory.Maxamount 1
}

//For Power Shield Purposes
Actor ShieldUp : Inventory
{
inventory.maxamount 1
}

Actor PowerReflectShield : Inventory
{
inventory.maxamount 1
}
//////////////////////////

//For Charged Axe Purposes
Actor AxeIsCharged : Inventory
{
inventory.maxamount 1
}
//////////////////////////

Actor ShieldAttack : FastProjectile
{
	Radius 16
	Height 18
	Speed 170
	Projectile
	ProjectileKickback 75
	damage (random(10,15))
	DamageType "Kick"
	Decal "none"
	Obituary "%o ate %k's boot."
    +BLOODSPLATTER
	+FORCEPAIN
	+DONTREFLECT
	+DONTBLAST
	+MTHRUSPECIES
	+HITTRACER
	States
	{
	Spawn:
		TNT1 A 1
		Stop
	Death:
	XDeath:
		// Projectiles have the person who shot them set as their target
		// So when this Gives ShieldBashHappened to AAPTR_TARGET, it's
		// giving that item to the player that launched the attack.
		// the Death and XDeath states mean it will do this when the kick
		// hits an enemy, or a wall.
		TNT1 A 0 A_GiveInventory("ShieldBashHappened",1,AAPTR_TARGET)
		TNT1 A 0 A_AlertMonsters(128)
		//TNT1 A 0 A_ChangeVelocity(-4.0,0,0,CVF_RELATIVE,AAPTR_TARGET)
		TNT1 A 0 A_Explode(15,96,0)
		TNT1 A 0 A_PlaySound("player/cyborg/fist", 3)
		TNT1 A 15
		Stop
	}
}



ACTOR ThrowedTimonsAxe
{
	Speed 40
	Radius 2
	Height 8
	Damage 20
	+RIPPER
	BounceType grenade
	BounceSound "SLMETA"
	DamageType Saw
	Projectile
	Translation "164:185=146:163"

  States
  {
  Spawn:
    THAX ABCDEFGH 2 Bright

	TNT1 A 0 A_CustomMissile("ThrowedAxeBack",0,0,0,0)
	//PLSS A 0 A_ChangeVelocity (-40, 0, -velz, CVF_RELATIVE|CVF_REPLACE)
    //Entering "-velx" does not function correctly, so use proper numbers for reversal.
    //THAX ABCDEFGH 2 Bright
  Death:
    TNT1 A 0
	//PLSE ABCDE 1 Bright
    Stop
  }
}

ACTOR ThrowedAxeBack : ThrowedAxe
{
+NOGRAVITY
+SEEKERMISSILE
 States
  {
  Spawn:
    THAX A 2 BRIGHT A_SeekerMissile(80,90, SMF_LOOK|SMF_PRECISE)
	TNT1 A 0 A_JumpIfCloser(16,"disappear")
	THAX B 2 BRIGHT A_SeekerMissile(80,90, SMF_LOOK|SMF_PRECISE)
	TNT1 A 0 A_JumpIfCloser(16,"disappear")
	THAX C 2 BRIGHT A_SeekerMissile(80,90, SMF_LOOK|SMF_PRECISE)
	TNT1 A 0 A_JumpIfCloser(16,"disappear")
	THAX D 2 BRIGHT A_SeekerMissile(80,90, SMF_LOOK|SMF_PRECISE)
	TNT1 A 0 A_JumpIfCloser(16,"disappear")
	THAX E 2 BRIGHT A_SeekerMissile(80,90, SMF_LOOK|SMF_PRECISE)
	TNT1 A 0 A_JumpIfCloser(16,"disappear")
	THAX F 2 BRIGHT A_SeekerMissile(80,90, SMF_LOOK|SMF_PRECISE)
	TNT1 A 0 A_JumpIfCloser(16,"disappear")
	THAX G 2 BRIGHT A_SeekerMissile(80,90, SMF_LOOK|SMF_PRECISE)
	TNT1 A 0 A_JumpIfCloser(16,"disappear")
	THAX H 2 BRIGHT A_SeekerMissile(80,90, SMF_LOOK|SMF_PRECISE)
	TNT1 A 0 A_JumpIfCloser(16,"disappear")
	Death:
	PLSE ABCDE 1 Bright
    Stop
	Disappear:
	PLSE ABCDE 1 Bright
	stop
  }
}

/*
ACTOR ShieldAttack : KickAttack
{
+FORCEPAIN
damage (random(10,15))
}
*/
/* OLD FUCKED UP ACTOR
actor ShieldDefense
{
Speed 9
+NOTARGET
Health 99999
Radius 18
Height 54
damage 0
PainChance 0
damagetype shielddefense
+SHOOTABLE
+REFLECTIVE
+NODAMAGE
+DONTRIP
//+SHIELDREFLECT
//+FORCEXYBILLBOARD
+NOGRAVITY
+NOTELEPORT
-SOLID
+NODAMAGETHRUST
+NORADIUSDMG
+NOBLOOD
+NOPAIN
+THRUSPECIES

Species "Marines"
//renderstyle normal
States
{
Spawn:
	SHIT A 3
Stop
 }
}
*/

//NEW WORKING ACTOR
actor ShieldDefense
{
Speed 9
+NOTARGET
Health 99999
Radius 18
Height 54
BloodType "RiotShieldHit"
PainChance 0
+NOGRAVITY
+DONTRIP
+SHOOTABLE
//+REFLECTIVE
+NOTELEPORT
-SOLID
+NODAMAGETHRUST
+NORADIUSDMG
+NOPAIN
States
{
Spawn:
//SHIT A 2
SHIT A 1 A_Warp(AAPTR_PLAYER1, 40, 5, 15)
Stop
 }
}

actor ShieldDefenseReflective : ShieldDefense
{
+REFLECTIVE
+DEFLECT
}

ACTOR RiotShieldHit: HitPuff
{
  renderstyle Translucent
  scale 0.15
  alpha 0.7
//Radius 20
  +NOBLOCKMAP
  +NOGRAVITY
  +NOEXTREMEDEATH
  +FORCEXYBILLBOARD
  	states
        {
	Spawn:
	Death:
	XDeath:
	Melee:
		TNT1 A 0 A_PlaySound ("barrel/pain")
		TNT1 A 0
		TNT1 AB 1 bright A_SpawnItem ("YellowFlareSmall", 0)
		TNT1 A 0 A_Jump (128,3)
		TNT1 A 0 A_SpawnItem ("Sparks", 0)
		TNT1 AAAAAA 0 A_CustomMissile ("SparkX", 2, 0, random (0, 360), 2, random (30, 170))
		BPUF C 1 bright A_PlaySound("ricochet/hit")
		BPUF D 1 bright
		Stop
        }
}

//Reflection Giver (for Shield)
ACTOR ReflectionAxeShield : PowerupGiver
{
  //+COUNTITEM
  +INVENTORY.AUTOACTIVATE
  //+INVENTORY.ALWAYSPICKUP
  //+INVENTORY.BIGPOWERUP
  Inventory.MaxAmount 0
  Powerup.Type "Invulnerable"
  Powerup.Mode "Reflective"
  Powerup.Duration -1
  //Inventory.PickupMessage "Shield Sphere!"
}
///////////////////////////////

//Axe Melee Strikes
/*
ACTOR AxeMeleeStrikePaladin: MeleeStrike1
{
+FORCEPAIN
-BLOODLESSIMPACT
+BLOODSPLATTER
-NOEXTREMEDEATH
Damagetype "Saw"
Damage (random(100,120))
Speed 40
states
	{
	XDeath:
		TNT1 A 0 A_GiveToTarget("Rage",5)
		TNT1 A 1 Radius_Quake (2, 10, 0, 2, 0)
		TNT1 A 1
		TNT1 A 1 A_PlaySound("SLMETA", 1)
		stop
	Death:
	Crash:
	    TNT1 A 1 Radius_Quake (2, 10, 0, 2, 0)
		TNT1 A 1
		TNT1 A 1 A_PlaySound("SLMETA", 1)
		Stop
	}
}


Actor AxeMeleeStrikePaladin2: AxeMeleeStrikePaladin
{
Damagetype "Cut"
}
*/


//Axe Melee Strike (Shock)
ACTOR AxeShockStrikePaladin: MeleeStrike1
{
DamageType Lightning
Damage (random(150,250))
Speed 40
states
	{
	XDeath:
		TNT1 A 0 A_GiveToTarget("Rage",5)
		TNT1 A 0 A_SpawnItemEx("TeslaPuff",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
		TNT1 A 1 Radius_Quake (2, 10, 0, 2, 0)
		TNT1 A 1
		TNT1 A 1 A_PlaySound("SLMETA", 1)
		stop
	Death:
	Crash:
	    TNT1 A 1 Radius_Quake (2, 10, 0, 2, 0)
		TNT1 A 1
		TNT1 A 1 A_PlaySound("SLMETA", 1)
		Stop
	}
}
//////////////////



ACTOR AxeMeleeStrikePaladin: FastProjectile
{
	Radius 4
	Height 14
	DamageType Saw
	+MISSILE
	+FORCEXYBILLBOARD
	+FORCERADIUSDMG
	+BLOODSPLATTER
	+FORCEPAIN
	RenderStyle Add
	Alpha 0.9
    Damage (random(100,125))
    Speed 60
	SeeSound "none"
	DeathSound "none"
	decal "SawVertical"
	Scale 0.05
	States
	{
	Spawn:
		AXEG A 0
		TNT1 A 1 BRIGHT
		Stop
	Death:
				AXEG A 0
				AXEG A 0
				TNT1 AB 0 bright
				TNT1 A 0 A_giveToTarget("AxeHit", 1)
				AXEG A 0 Radius_Quake (2, 6, 0, 5, 0)//(intensity, duration, damrad, tremrad, tid)
				AXEG A 0 A_CheckFloor("SpawnFloor")
				AXEG A 0 A_SpawnItem ("Sparks", 0)
				TNT1 A 0 A_PlaySound("SLMETA", 1)
				//AXEG A 0 A_PlaySound("AXECLN", 6)
				AXEG A 0 A_ALertMonsters(400)

				TNT1 AAAAAAAAAAAAAAAA 0 A_CustomMissile ("SparkX", 2, 0, random (0, 360), 2, random (30, 170))
				AXEG A 0 A_JumpIfInTargetInventory("PowerStrength", 1, "Berserk")
				Stop


	SpawnFloor:
	AXEG A 0
	AXEG A 0 Acs_namedexecutealways("BDCheckFloorType", 0, 0, 0, 0)//Check if is under a liquid
	TNT1 A 2
	AXEG A 0 A_ALertMonsters(400)
	AXEG A 0 A_JumpIfInventory("IsOverWater", 1, "SpawnWater")
	AXEG A 0 A_JumpIfInventory("IsOverNukage", 1, "SpawnNukage")
	AXEG A 0 A_JumpIfInventory("IsOverSlime", 1, "SpawnSlime")
	AXEG A 0 A_JumpIfInventory("IsOverBlood", 1, "SpawnBlood")
	AXEG A 0 A_JumpIfInventory("IsOverLava", 1, "SpawnLava")
	AXEG A 0 A_JumpIfInventory("IsOverGrass", 1, "SpawnDirt")
	AXEG A 0 A_JumpIfInventory("IsOverSand", 1, "SpawnSand")

	TNT1 A 0 A_PlaySound("SLMETA", 1)
	PUFF A 0 bright A_PlaySound("ricochet/hit")
	AXEG A 0 A_SpawnItem ("YellowFlareSmall", 0)
	AXEG A 0 A_SetScale(-0.6)
    AXEG A 0 A_Jump (132, 15)
    FX58 ABCD 1 BRIGHT
	AXEG A 0 A_CustomMissile("OldschoolRocketSmokeTrail2Bigger", 2, 0, random (0, 360), 2, random (0, 360))
	FX58 EFGHIJ 1 bright
    Stop
    TNT1 AAAAA 0
    FX57 ABCD 1 BRIGHT
	AXEG A 0 A_CustomMissile("OldschoolRocketSmokeTrail2Bigger", 2, 0, random (0, 360), 2, random (0, 360))
	FX57 EFGHIJ 1 bright
    stop

	SpawnWater:
	AXEG A 0
	TNT1 A 0 A_PlaySound("bigspl1", 1)
	TNT1 AAAAA 0 A_CustomMissile ("WaterParticleXFAster", 8, 0, random (0, 360), 2, random (30, 160))
	TNT1 AAAAA 0 A_CustomMissile ("WaterParticleXSuperFast", 24, 0, random (0, 360), 2, random (30, 160))
	AXEG A 0 A_SpawnItem("WaterSplashWaves")
	AXEG A 0 A_SetScale(0.5, 0.5)
	SPHW ABCDE 3
	Stop

	SpawnSlime:
	AXEG A 0
	TNT1 A 0 A_PlaySound("bigspl1", 1)
	TNT1 AAAAA 0 A_CustomMissile ("SLimeParticleXFAster", 8, 0, random (0, 360), 2, random (30, 160))
	TNT1 AAAAA 0 A_CustomMissile ("SlimeParticleXFAster", 24, 0, random (0, 360), 2, random (30, 160))
	AXEG A 0 A_SpawnItem("SlimeSplashWaves")
	AXEG A 0 A_SetScale(0.5, 0.5)
	SPHB ABCDE 3
	Stop


	SpawnNukage:
	AXEG A 0
	TNT1 A 0 A_PlaySound("bigspl1", 1)
	TNT1 AAAAA 0 A_CustomMissile ("nukageParticleXFAster", 8, 0, random (0, 360), 2, random (30, 160))
	TNT1 AAAAA 0 A_CustomMissile ("nukageParticleXFAster", 24, 0, random (0, 360), 2, random (30, 160))
	AXEG A 0 A_SpawnItem("NukageSplashWaves")
	AXEG A 0 A_SetScale(0.5, 0.5)
	SPHG ABCDE 3
	Stop

	SpawnBlood:
	AXEG A 0
	TNT1 A 0 A_PlaySound("bigspl1", 1)
	TNT1 AAAAA 0 A_CustomMissile ("BloodParticleXFAster", 8, 0, random (0, 360), 2, random (30, 160))
	TNT1 AAAAA 0 A_CustomMissile ("BloodParticleXFAster", 24, 0, random (0, 360), 2, random (30, 160))
	AXEG A 0 A_SpawnItem("BloodSplashWaves")
	AXEG A 0 A_SetScale(0.5, 0.5)
	SPHR ABCDE 3
	Stop

	SpawnLava:
	AXEG A 0
	AXEG A 0 A_CustomMissile ("OldschoolRocketSmokeTrailDarker", 12, 0, random (160, 210), 2, random (10, 90))
	AXEG A 0 A_SpawnItemEx("TinyBurningPiece3", random (-5, 5), random (-5, 5))
	TNT1 AAAAA 0 A_CustomMissile ("ExplosionParticleHeavy", 10, 0, random (0, 180), 2, random (10, 90))
	AXEG A 0 A_SetScale(0.5, 0.5)
	INFE ABCDEFGHIJKLMNOPQR 1 BRIGHT
	INFE ST 1 BRIGHT A_CustomMissile ("OldschoolRocketSmokeTrailDarker", 32, 0, random (160, 210), 2, random (10, 90))
	TNT1 AAA 4 A_CustomMissile ("OldschoolRocketSmokeTrailDarker", 14, 0, random (160, 210), 2, random (10, 90))
	Stop


	SpawnDirt:
	AXEG A 0
	AXEG A 0 A_CustomMissile ("BrownCloudSmallLong", 0, 0, random (0, 360), 2, random (10, 150))
	TNT1 AA 0 A_CustomMissile ("DirtChunk3", 0, 0, random (0, 360), 2, random (30, 150))
	TNT1 AA 0 A_CustomMissile ("DirtChunk4", 0, 0, random (0, 360), 2, random (30, 150))
	AXEG A 0 A_CustomMissile ("MudDustSmall", 4, 0, random (0, 360), 2, random (30, 150))
	AXEG A 0 A_SpawnItem("DirtRicochet")
	Stop


	SpawnSand:
	AXEG A 0
	AXEG A 0 A_CustomMissile ("SandCloudSmallLong", 0, 0, random (0, 360), 2, random (10, 90))
	AXEG A 0 A_CustomMissile ("SandCloudSmall", 0, 0, random (0, 360), 2, random (10, 90))
	AXEG A 0 A_CustomMissile ("SandDustSmall", 4, 0, random (0, 360), 2, random (30, 150))
	Stop




	XDeath:
	Melee:
			AXEG A 0
			TNT1 A 0 A_GiveToTarget("Rage",5)
			TNT1 A 0 A_giveToTarget("AxeHit", 1)
			PUFF A 0 A_PlaySound("player/cyborg/fist", 3)
			AXEG A 0 A_PlaySound("SLMETA", 1)
			AXEG A 0 A_SpawnItemEx ("PLOFT2",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
			AXEG A 0 Radius_Quake (2, 6, 0, 5, 0)//(intensity, duration, damrad, tremrad, tid)
			AXEG A 0 A_JumpIfInTargetInventory("PowerStrength", 1, "Berserk")
			TNT1 A 10
			Stop

	Crash:
	    TNT1 A 1 Radius_Quake (2, 10, 0, 2, 0)
		TNT1 A 1
		TNT1 A 1 A_PlaySound("SLMETA", 1)
		Stop


	Berserk:
		TNT1 A 1
		TNT1 A 0 A_GiveToTarget("Rage",5)
		AXEG A 0 A_explode(120, 20, 0)
		TNT1 A 10
		Stop

	}
}

Actor AxeMeleeStrikePaladin2: AxeMeleeStrikePaladin
{
Radius 12
Height 2
Damagetype "Cut"
//+RIPPER
//Damage (random(5, 5))
}

Actor AxeMeleeStrikePaladinExtreme: AxeMeleeStrikePaladin
{
-NOEXTREMEDEATH
Damagetype "ExtremePunches"
Damage (random(150,200))
//+EXTREMEDEATH
}
///////////////////